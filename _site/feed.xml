<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clover Blog</title>
    <description>克洛弗，Web &amp; Mobile Lover，Front-End Engineer，UX Designer，PHP&amp;JAVA Engineer | 这里是 @Clover克洛弗 的个人博客，与你一起发现更大的世界。</description>
    <link>http://clover.htmhub.com/</link>
    <atom:link href="http://clover.htmhub.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 17 Apr 2017 15:51:51 +0800</pubDate>
    <lastBuildDate>Mon, 17 Apr 2017 15:51:51 +0800</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      <item>
        <title>概念了解：CGI，FastCGI，PHP-CGI与PHP-FPM</title>
        <description>&lt;h1 id=&quot;cgi&quot;&gt;CGI&lt;/h1&gt;

&lt;p&gt;CGI全称是“公共网关接口”(Common Gateway Interface)，HTTP服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。&lt;/p&gt;

&lt;p&gt;CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。如php,perl,tcl等。&lt;/p&gt;

&lt;h1 id=&quot;fastcgi&quot;&gt;FastCGI&lt;/h1&gt;

&lt;p&gt;FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次（这是CGI最为人诟病的fork-and-execute 模式）。它还支持分布式的运算，即 FastCGI 程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。&lt;/p&gt;

&lt;p&gt;FastCGI是语言无关的、可伸缩架构的CGI开放扩展，其主要行为是将CGI解释器进程保持在内存中并因此获得较高的性能。众所周知，CGI解释器的反复加载是CGI性能低下的主要原因，如果CGI解释器保持在内存中并接受FastCGI进程管理器调度，则可以提供良好的性能、伸缩性、Fail- Over特性等等。&lt;/p&gt;

&lt;h2 id=&quot;fastcgi-1&quot;&gt;FastCGI特点&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;FastCGI具有语言无关性.&lt;/li&gt;
  &lt;li&gt;FastCGI在进程中的应用程序，独立于核心web服务器运行，提供了一个比API更安全的环境。APIs把应用程序的代码与核心的web服务器链接在一起，这意味着在一个错误的API的应用程序可能会损坏其他应用程序或核心服务器。 恶意的API的应用程序代码甚至可以窃取另一个应用程序或核心服务器的密钥。&lt;/li&gt;
  &lt;li&gt;FastCGI技术目前支持语言有：C/C++、Java、Perl、Tcl、Python、SmallTalk、Ruby等。相关模块在Apache, ISS, Lighttpd等流行的服务器上也是可用的。&lt;/li&gt;
  &lt;li&gt;FastCGI的不依赖于任何Web服务器的内部架构，因此即使服务器技术的变化, FastCGI依然稳定不变。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;fastcgi-2&quot;&gt;FastCGI的工作原理&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Web Server启动时载入FastCGI进程管理器（IIS ISAPI或Apache Module)&lt;/li&gt;
  &lt;li&gt;FastCGI进程管理器自身初始化，启动多个CGI解释器进程(可见多个php-cgi)并等待来自Web Server的连接。&lt;/li&gt;
  &lt;li&gt;当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。Web server将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。&lt;/li&gt;
  &lt;li&gt;FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待并处理来自FastCGI进程管理器(运行在Web Server中)的下一个连接。 在CGI模式中，php-cgi在此便退出了。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在上述情况中，你可以想象CGI通常有多慢。每一个Web请求PHP都必须重新解析php.ini、重新载入全部扩展并重初始化全部数据结构。使用FastCGI，所有这些都只在进程启动时发生一次。一个额外的好处是，持续数据库连接(Persistent database connection)可以工作。&lt;/p&gt;

&lt;h2 id=&quot;fastcgi-3&quot;&gt;FastCGI的不足&lt;/h2&gt;

&lt;p&gt;因为是多进程，所以比CGI多线程消耗更多的服务器内存，PHP-CGI解释器每进程消耗7至25兆内存，将这个数字乘以50或100就是很大的内存数。&lt;/p&gt;

&lt;p&gt;Nginx 0.8.46+PHP 5.2.14(FastCGI)服务器在3万并发连接下，开启的10个Nginx进程消耗150M内存（15M&lt;em&gt;10=150M），开启的64个php-cgi进程消耗1280M内存（20M&lt;/em&gt;64=1280M），加上系统自身消耗的内存，总共消耗不到2GB内存。如果服务器内存较小，完全可以只开启25个php-cgi进程，这样php-cgi消耗的总内存数才500M。&lt;/p&gt;

&lt;p&gt;上面的数据摘自Nginx 0.8.x + PHP 5.2.13(FastCGI)搭建胜过Apache十倍的Web服务器(第6版)&lt;/p&gt;

&lt;h1 id=&quot;php-cgi&quot;&gt;PHP-CGI&lt;/h1&gt;

&lt;p&gt;PHP-CGI是PHP自带的FastCGI管理器。&lt;/p&gt;

&lt;p&gt;PHP-CGI的不足：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;php-cgi变更php.ini配置后需重启php-cgi才能让新的php-ini生效，不可以平滑重启。&lt;/li&gt;
  &lt;li&gt;直接杀死php-cgi进程，php就不能运行了。(PHP-FPM和Spawn-FCGI就没有这个问题，守护进程会平滑从新生成新的子进程。）&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;php-fpm&quot;&gt;PHP-FPM&lt;/h1&gt;

&lt;p&gt;PHP-FPM是一个PHP FastCGI管理器，是只用于PHP的，可以在 http://php-fpm.org/download下载得到。&lt;/p&gt;

&lt;p&gt;PHP-FPM其实是PHP源代码的一个补丁，旨在将FastCGI进程管理整合进PHP包中。必须将它patch到你的PHP源代码中，在编译安装PHP后才可以使用。&lt;/p&gt;

&lt;p&gt;现在我们可以在最新的PHP 5.3.2的源码树里下载得到直接整合了PHP-FPM的分支，据说下个版本会融合进PHP的主分支去。相对Spawn-FCGI，PHP-FPM在CPU和内存方面的控制都更胜一筹，而且前者很容易崩溃，必须用crontab进行监控，而PHP-FPM则没有这种烦恼。&lt;/p&gt;

&lt;p&gt;PHP5.3.3已经集成php-fpm了，不再是第三方的包了。PHP-FPM提供了更好的PHP进程管理方式，可以有效控制内存和进程、可以平滑重载PHP配置，比spawn-fcgi具有更多有点，所以被PHP官方收录了。在./configure的时候带 –enable-fpm参数即可开启PHP-FPM。&lt;/p&gt;

&lt;h2 id=&quot;spawn-fcgi&quot;&gt;Spawn-FCGI&lt;/h2&gt;

&lt;p&gt;Spawn-FCGI是一个通用的FastCGI管理服务器，它是lighttpd中的一部份，很多人都用Lighttpd的Spawn-FCGI进行FastCGI模式下的管理工作，不过有不少缺点。而PHP-FPM的出现多少缓解了一些问题，但PHP-FPM有个缺点就是要重新编译，这对于一些已经运行的环境可能有不小的风险(refer)，在php 5.3.3中可以直接使用PHP-FPM了。&lt;/p&gt;

&lt;p&gt;Spawn-FCGI目前已经独成为一个项目，更加稳定一些，也给很多Web 站点的配置带来便利。已经有不少站点将它与nginx搭配来解决动态网页。&lt;/p&gt;

&lt;p&gt;最新的lighttpd也没有包含这一块了(http://www.lighttpd.net/search?q=Spawn-FCGI)，但可以在以前版本中找到它。在lighttpd-1.4.15版本中就包含了(http://www.lighttpd.net/download/lighttpd-1.4.15.tar.gz)，目前Spawn-FCGI的下载地址是http://redmine.lighttpd.net/projects/spawn-fcgi，最新版本是http://www.lighttpd.net/download/spawn-fcgi-1.6.3.tar.gz。&lt;/p&gt;

&lt;p&gt;注：最新的Spawn-FCGI可以到lighttpd.net网站搜索“Spawn-FCGI”找到它的最新版本发布地址。&lt;/p&gt;

&lt;h1 id=&quot;php-fpmspawn-cgi&quot;&gt;PHP-FPM与spawn-CGI对比&lt;/h1&gt;

&lt;p&gt;PHP-FPM的使用非常方便，配置都是在PHP-FPM.ini的文件内，而启动、重启都可以从php/sbin/PHP-FPM中进行。更方便的是修改php.ini后可以直接使用PHP-FPM reload进行加载，无需杀掉进程就可以完成php.ini的修改加载
结果显示使用PHP-FPM可以使php有不小的性能提升。PHP-FPM控制的进程cpu回收的速度比较慢,内存分配的很均匀。&lt;/p&gt;

&lt;p&gt;Spawn-FCGI控制的进程CPU下降的很快，而内存分配的比较不均匀。有很多进程似乎未分配到，而另外一些却占用很高。可能是由于进程任务分配的不均匀导致的。而这也导致了总体响应速度的下降。而PHP-FPM合理的分配，导致总体响应的提到以及任务的平均。&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;首先，CGI是干嘛的？CGI是为了保证web server传递过来的数据是标准格式的，方便CGI程序的编写者。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;web server（比如说nginx）只是内容的分发者。比如，如果请求&lt;code class=&quot;highlighter-rouge&quot;&gt;/index.html&lt;/code&gt;，那么web server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。好了，如果现在请求的是&lt;code class=&quot;highlighter-rouge&quot;&gt;/index.php&lt;/code&gt;，根据配置文件，nginx知道这个不是静态文件，需要去找PHP解析器来处理，那么他会把这个请求简单处理后交给PHP解析器。Nginx会传哪些数据给PHP解析器呢？url要有吧，查询字符串也得有吧，POST数据也要有，HTTP header不能少吧，好的，CGI就是规定要传哪些数据、以什么样的格式传递给后方处理这个请求的协议。仔细想想，你在PHP代码中使用的用户从哪里来的。
当web server收到&lt;code class=&quot;highlighter-rouge&quot;&gt;/index.php&lt;/code&gt;这个请求后，会启动对应的CGI程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程。web server再把结果返回给浏览器。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;好了，CGI是个协议，跟进程什么的没关系。那fastcgi又是什么呢？Fastcgi是用来提高CGI程序性能的。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;提高性能，那么CGI程序的性能问题在哪呢？”PHP解析器会解析php.ini文件，初始化执行环境”，就是这里了。标准的CGI对每个请求都会执行这些步骤（不闲累啊！启动进程很累的说！），所以处理每个时间的时间会比较长。这明显不合理嘛！那么Fastcgi是怎么做的呢？首先，Fastcgi会先启一个master，解析配置文件，初始化执行环境，然后再启动多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是fastcgi的对进程的管理。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;那PHP-FPM又是什么呢？是一个实现了Fastcgi的程序，被PHP官方收了。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;大家都知道，PHP的解释器是php-cgi。php-cgi只是个CGI程序，他自己本身只能解析请求，返回结果，不会进程管理（皇上，臣妾真的做不到啊！）所以就出现了一些能够调度php-cgi进程的程序，比如说由lighthttpd分离出来的spawn-fcgi。好了PHP-FPM也是这么个东东，在长时间的发展后，逐渐得到了大家的认可（要知道，前几年大家可是抱怨PHP-FPM稳定性太差的），也越来越流行。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;有的说，php-fpm是fastcgi进程的管理器，用来管理fastcgi进程的&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;对。php-fpm的管理对象是php-cgi。但不能说php-fpm是fastcgi进程的管理器，因为前面说了fastcgi是个协议，似乎没有这么个进程存在，就算存在php-fpm也管理不了他（至少目前是）。 有的说，php-fpm是php内核的一个补丁
以前是对的。因为最开始的时候php-fpm没有包含在PHP内核里面，要使用这个功能，需要找到与源码版本相同的php-fpm对内核打补丁，然后再编译。后来PHP内核集成了PHP-FPM之后就方便多了，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;--enalbe-fpm&lt;/code&gt;这个编译参数即可。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;有的说，修改了php.ini配置文件后，没办法平滑重启，所以就诞生了php-fpm&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;是的，修改php.ini之后，php-cgi进程的确是没办法平滑重启的。php-fpm对此的处理机制是新的worker用新的配置，已经存在的worker处理完手上的活就可以歇着了，通过这种机制来平滑过度。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 06 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/04/06/CGI-FastCGI-PHP_CGI-PHP_FPM/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/04/06/CGI-FastCGI-PHP_CGI-PHP_FPM/</guid>
        
        <category>Clover</category>
        
        <category>服务器</category>
        
        <category>PHP</category>
        
        
      </item>
    
      <item>
        <title>浏览器兼容</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;条件注释&lt;/h1&gt;

&lt;p&gt;条件注释 (conditional comment) 是于HTML源码中被IE有条件解释的语句。条件注释可被用来向IE提供及隐藏代码。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
 	&amp;lt;!--[if IE 6]&amp;gt;
    &amp;lt;p&amp;gt;You are using Internet Explorer 6.&amp;lt;/p&amp;gt;
    &amp;lt;![endif]--&amp;gt;
    &amp;lt;!--[if !IE]&amp;gt;&amp;lt;!--&amp;gt;
    &amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;
    &amp;lt;!--&amp;lt;![endif]--&amp;gt;
    &amp;lt;!--[if IE 8]&amp;gt;
    &amp;lt;link href=&quot;ie8only.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
    &amp;lt;![endif]--&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;为了提高与 HTML5 的可互操作性和兼容性，Internet Explorer 10 标准模式和 Quirks 模式中删除了对条件注释的支持。 这意味着，与在其他浏览器中相同，条件注释将被视作一般注释。 使用了条件注释的页面在 Windows Internet Explorer 9 中可正常工作，但在 Internet Explorer 10 中无法正常工作。 不再支持条件注释&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;项目&lt;/th&gt;
      &lt;th&gt;范例&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;!&lt;/td&gt;
      &lt;td&gt;[if !IE]&lt;/td&gt;
      &lt;td&gt;The NOT operator. This is placed immediately in front of the feature, operator, or subexpression to reverse the Boolean meaning of the expression.NOT运算符。这是摆立即在前面的功能，操作员，或子表达式扭转布尔表达式的意义。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lt&lt;/td&gt;
      &lt;td&gt;[if lt IE 5.5]&lt;/td&gt;
      &lt;td&gt;The less-than operator. Returns true if the first argument is less than the second argument.小于运算符。如果第一个参数小于第二个参数，则返回true。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lte&lt;/td&gt;
      &lt;td&gt;[if lte IE 6]&lt;/td&gt;
      &lt;td&gt;The less-than or equal operator. Returns true if the first argument is less than or equal to the second argument.小于或等于运算。如果第一个参数是小于或等于第二个参数，则返回true。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gt&lt;/td&gt;
      &lt;td&gt;[if gt IE 5]&lt;/td&gt;
      &lt;td&gt;The greater-than operator. Returns true if the first argument is greater than the second argument.大于运算符。如果第一个参数大于第二个参数，则返回true。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gte&lt;/td&gt;
      &lt;td&gt;[if gte IE 7]&lt;/td&gt;
      &lt;td&gt;The greater-than or equal operator. Returns true if the first argument is greater than or equal to the second argument.大于或等于运算。如果第一个参数是大于或等于第二个参数，则返回true。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;( )&lt;/td&gt;
      &lt;td&gt;[if !(IE 7)]&lt;/td&gt;
      &lt;td&gt;Subexpression operators. Used in conjunction with boolean operators to create more complex expressions.子表达式运营商。在与布尔运算符用于创建更复杂的表达式。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;amp;&lt;/td&gt;
      &lt;td&gt;[if (gt IE 5)&amp;amp;(lt IE 7)]&lt;/td&gt;
      &lt;td&gt;The AND operator. Returns true if all subexpressions evaluate to true AND运算符。如果所有的子表达式计算结果为true，返回true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;|&lt;/td&gt;
      &lt;td&gt;[if (IE 6)|(IE 7)]&lt;/td&gt;
      &lt;td&gt;The OR operator. Returns true if any of the subexpressions evaluates to true. OR运算符。返回true，如果子表达式计算结果为true&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;css-hack&quot;&gt;CSS hack&lt;/h2&gt;

&lt;p&gt;CSS hack由于不同厂商的浏览器，比如Internet Explorer,Safari,Mozilla Firefox,Chrome等，或者是同一厂商的浏览器的不同版本，如IE6和IE7，对CSS的解析认识不完全一样，因此会导致生成的页面效果不一样，得不到我们所需要的页面效果。&lt;/p&gt;

&lt;p&gt;这个时候我们就需要针对不同的浏览器去写不同的CSS，让它能够同时兼容不同的浏览器，能在不同的浏览器中也能得到我们想要的页面效果。 简单的说，CSS hack的目的就是使你的CSS代码兼容不同的浏览器。当然，我们也可以反过来利用CSS hack为不同版本的浏览器定制编写不同的CSS效果。&lt;/p&gt;

&lt;h3 id=&quot;css-hack-1&quot;&gt;CSS hack分类&lt;/h3&gt;

&lt;p&gt;CSS Hack大致有3种表现形式，&lt;code class=&quot;highlighter-rouge&quot;&gt;CSS属性前缀法&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;选择器前缀法&lt;/code&gt;以及&lt;code class=&quot;highlighter-rouge&quot;&gt;IE条件注释法&lt;/code&gt;（即HTML头部引用if IE）Hack，实际项目中CSS Hack大部分是针对IE浏览器不同版本之间的表现差异而引入的。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;属性前缀法(即类内部Hack)：例如 IE6能识别下划线”“和星号” “，IE7能识别星号” “，但不能识别下划线”“，IE6~IE10都认识”\9”，但firefox前述三个都不能认识&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择器前缀法(即选择器Hack)：例如 IE6能识别html .class{}，IE7能识别+html .class{}或者&lt;code class=&quot;highlighter-rouge&quot;&gt;*:first-child+html .class{}&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;IE条件注释法(即HTML条件注释Hack)：针对所有IE(注：IE10+已经不再支持条件注释)： ，针对IE6及以下版本： 。这类Hack不仅对CSS生效，对写在判断语句里面的所有代码都会生效&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://browserhacks.com/&quot;&gt;browserhacks&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;ie-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何调试 IE 浏览器&lt;/code&gt;&lt;/h2&gt;

&lt;h2 id=&quot;css-hack-css--html-hack-css--ie-7ie-8-hack-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;什么是CSS hack？在 CSS 和 HTML里如何写 hack？在 CSS 中 IE 7、IE 8的 hack 方式？&lt;/code&gt;&lt;/h2&gt;

&lt;h2 id=&quot;section-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;列举几种 浏览器兼容问题&lt;/code&gt;&lt;/h2&gt;

&lt;h2 id=&quot;section-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;针对兼容、多浏览器覆盖有什么看法？渐进增强和**优雅降级**是什么意思？&lt;/code&gt;&lt;/h2&gt;

&lt;h2 id=&quot;resetcssnormalizecssnomalizecss&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reset.css和normalize.css分别是做什么的？为什么推荐使用nomalize.css?&lt;/code&gt;&lt;/h2&gt;

&lt;h2 id=&quot;ie--ie78box-sizingborder-box&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IE盒模型和标准盒模型有什么区别? 怎样使 IE7、8使用标准盒模型?box-sizing:border-box有什么作用&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&quot;section-3&quot;&gt;参考&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E6%9D%A1%E4%BB%B6%E6%B3%A8%E9%87%8A&quot;&gt;条件注释 &lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/freshlover/article/details/12132801&quot;&gt;史上最全的CSS hack方式一览&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.teaching-materials.org/csstools/&quot;&gt;http://www.teaching-materials.org/csstools/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/19736007&quot;&gt;知乎：怎样可以很好地保证网页的浏览器兼容性&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://jerryzou.com/posts/aboutNormalizeCss/&quot;&gt;让我们谈一谈 Normalize.css&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/20094066&quot;&gt;知乎: Normalize.css 与传统的 CSS Reset 有哪些区别&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 06 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/04/06/browser-compatibility/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/04/06/browser-compatibility/</guid>
        
        <category>Clover</category>
        
        <category>CSS</category>
        
        <category>HTML</category>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>负边距、三栏布局</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;负边距、三栏布局&lt;/h1&gt;

&lt;h2 id=&quot;position-relative&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;负边距在让元素产生偏移时和position: relative有什么区别?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;position:relative,元素偏移后脱离的文档流，但元素原来的位置仍然占据文档流中，不会影响之前的文档流，其之后的元素仍然会认为定位元素在文档流中而跟随在后面。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/2155778-f3484ab45d48a5b5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;负margin：元素偏移后并没有脱离文档流，位置变化影响了文档流，之后的元素按文档流的排列特征也会跟着偏移
&lt;img src=&quot;/img/2155778-d95972ee88a29c11.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;margin-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;使用负 margin 形成三栏布局有什么条件?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;必须设置浮动&lt;/li&gt;
  &lt;li&gt;父容器下有三个块级元素&lt;/li&gt;
  &lt;li&gt;中间的子元素宽度设置为父容器宽度的100%&lt;/li&gt;
  &lt;li&gt;左右两栏的子元素设置负边距&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;圣杯布局的原理是怎样的? 简述实现圣杯布局的步骤&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;圣杯布局是一个两边在父容器里顶宽，中间自适应的布局并且中间主内容首先渲染。设置三个div浮动，左右两栏加上负margin使其与中间栏并排。然后中间栏设置左右padding，再对两个边栏使用position: relative属性并设置left定位使其不遮挡中间栏。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;写好一个三栏HTML结构
 &lt;img src=&quot;/img/2155778-17f6d5af52b85b31.png&quot; alt=&quot;圣杯布局HTML结构&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;使用浮动与负margin写好一个三栏并排的布局
 &lt;img src=&quot;/img/2155778-0f4b4e9a132b3e6c.png&quot; alt=&quot;三栏并排&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;给父容器设置左右padding，然后给两个边栏设置position: relative; 并设置left值定位到父容器的两边顶宽
 &lt;img src=&quot;/img/2155778-b7faed23e04b72fa.png&quot; alt=&quot;圣杯布局&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;设置圣杯布局的两栏布局只需要删除父容器的右内边距
 &lt;img src=&quot;/img/2155778-84f6223248a67ed5.png&quot; alt=&quot;删除父容器右内边距形成圣杯两栏布局&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;双飞翼布局的原理? 实现步骤?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;双飞翼布局也是一个两边在父容器里顶宽，中间自适应的布局并且中间主内容首先渲染。设置三个div浮动，左右两栏加上负margin使其与中间栏并排的布局。区别在于双飞翼布局中间的div设置了子div来放置内容，在这个子div里设置了margin来给两边的div留出了位置&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;写好一个三栏HTML结构，与圣杯不同的是在主内容里增加一个子div
 &lt;img src=&quot;/img/2155778-502dedc533521aac.png&quot; alt=&quot;双飞翼HTML结构&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;使用浮动与负margin写好一个三栏并排的布局
 &lt;img src=&quot;/img/2155778-95a81eef83a74dae.png&quot; alt=&quot;双飞翼三栏并排&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;给中间栏设置左右margin值形成双飞翼布局
 &lt;img src=&quot;/img/2155778-536227648f0b26f4.png&quot; alt=&quot;给中间栏设置左右margin值形成双飞翼布局&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;双飞翼布局形成两栏布局只需要删除一边侧栏并且删除主内容的一边外边距
 &lt;img src=&quot;/img/2155778-12036b91f4e4d094.png&quot; alt=&quot;删除一栏和一侧外边距&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;代码&lt;/h2&gt;

&lt;h3 id=&quot;section-4&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;用浮动、负边距实现如下效果&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://js.jirengu.com/fag/2/edit&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html
    &lt;style&gt;&lt;/style&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.demo{
height:500px;
border:1px solid #38b1da;
overflow:auto;
}
ul{
list-style:none;
padding:0px;
margin:0px;
}
.content{
    width:600px;
    margin:120px auto;
}
.main{
width:600px;
background:#ccc;
}

.clear:after{  /*清除浮动，让父亲撑开高度*/
      content: &#39;&#39;;
      display: block;
      clear: both;
    }

.ulnav li{
    float:left;
    width:192px;
    margin-left:12px;
    height:100px;
    margin-top: 10px;
    background:green;
}
.ulnav{
    margin-left: -12px;
    padding-bottom: 10px;
}

&amp;lt;/style&amp;gt;

&amp;lt;div class=&quot;demo&quot;&amp;gt;
    &amp;lt;div class=&quot;content&quot;&amp;gt;
        &amp;lt;div class=&quot;main&quot;&amp;gt;
            &amp;lt;ul class=&quot;ulnav clear&quot;&amp;gt;
                &amp;lt;li&amp;gt;1&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;2&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;3&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;4&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;5&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;6&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/div&amp;gt;

    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;style&gt;

.demo{
height:500px;
border:1px solid #38b1da;
overflow:auto;
}
ul{
list-style:none;
padding:0px;
margin:0px;
}
.content{
	width:600px;
    margin:120px auto;
}
.main{
width:600px;
background:#ccc;
}

.clear:after{  /*清除浮动，让父亲撑开高度*/
      content: &#39;&#39;;
      display: block;
      clear: both;
    }

.ulnav li{
	float:left;
	width:192px;
    margin-left:12px;
    height:100px;
    margin-top: 10px;
    background:green;
}
.ulnav{
    margin-left: -12px;
    padding-bottom: 10px;
}

&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
	&lt;div class=&quot;content&quot;&gt;
    	&lt;div class=&quot;main&quot;&gt;
        	&lt;ul class=&quot;ulnav clear&quot;&gt;
            	&lt;li&gt;1&lt;/li&gt;
                &lt;li&gt;2&lt;/li&gt;
                &lt;li&gt;3&lt;/li&gt;
                &lt;li&gt;4&lt;/li&gt;
                &lt;li&gt;5&lt;/li&gt;
                &lt;li&gt;6&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/div&gt;
    
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;圣杯布局&lt;/code&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/demo/圣杯布局.html&quot;&gt;圣杯布局demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html
    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html&amp;gt;
        &amp;lt;head&amp;gt;
        &lt;meta charset=&quot;utf-8&quot; /&gt;
        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;
        &lt;title&gt;圣杯布局&lt;/title&gt;
        &lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;
        &lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;!--css引入区--&amp;gt;
    &amp;lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&amp;gt;
    &amp;lt;!--js引入区--&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;

    html,body,ul,p,h1,h2,h3{
        margin:0px;
        padding:0px;
    }
        .contain{

            background: #ccc;
            padding:0 200px;
        }

        .main{
            float:left;
            width:100%;
            height:100%;
            background: red;


        }
        .aside{
            float:left;
            background: yellow;
            width:200px;
            height:200px;
            margin-left:-100%;
            position: relative; 
            left: -200px;
        }

        .bside{
            background: blue;
            width:200px;
            height:200px;
            float:left;
            margin-left:-200px;
            position: relative; 
            left: 200px;
        }

         .clear::after{
            content: &quot;&quot;;
            display: block;
            clear:both;
       }

    &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class=&quot;contain clear&quot;&amp;gt;
        这里是主题
            &amp;lt;div class=&quot;main&quot;&amp;gt;
                 这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                     这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;aside&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;bside&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;


    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;双飞翼布局&lt;/code&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/demo/双飞翼布局.html&quot;&gt;双飞翼布局DEMO&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;```html
    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html&amp;gt;
        &amp;lt;head&amp;gt;
        &lt;meta charset=&quot;utf-8&quot; /&gt;
        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;
        &lt;title&gt;双飞翼布局&lt;/title&gt;
        &lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;
        &lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;!--css引入区--&amp;gt;
    &amp;lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&amp;gt;
    &amp;lt;!--js引入区--&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;

    html,body,ul,p,h1,h2,h3{
        margin:0px;
        padding:0px;
    }
        .contain{


            background: #ccc;

        }

        .main{
            float:left;
            width:100%;
            height:100%;


        }
        .warp{
            /*width:100%;*/
            height:100%;
            margin:0 200px;
            background: red;
        }
        .aside{
            float:left;
            background: yellow;
            width:200px;
            height:200px;
            margin-left:-100%;          
        }

        .bside{
            background: blue;
            width:200px;
            height:200px;
            float:left;
            margin-left:-200px;

        }

         .clear::after{
            content: &quot;&quot;;
            display: block;
            clear:both;
       }

    &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class=&quot;contain clear&quot;&amp;gt;
         &amp;lt;p&amp;gt;这里是整体&amp;lt;/p&amp;gt;
            &amp;lt;div class=&quot;main&quot;&amp;gt;
                &amp;lt;div class=&quot;warp&quot;&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                     这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                    这里是内容&amp;lt;br&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;aside&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;bside&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 30 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/30/negative-margin-and-three-column-layout/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/30/negative-margin-and-three-column-layout/</guid>
        
        <category>Clover</category>
        
        <category>CSS</category>
        
        <category>HTML</category>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>inline-block、BFC、边距合并</title>
        <description>&lt;h1 id=&quot;inline-blockbfc&quot;&gt;inline-block、BFC、边距合并&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;在什么场景下会出现外边距合并？如何合并？如何不让相邻元素外边距合并？给个父子外边距合并的范例&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;外边距合并[Margin Collapse]：同属于同一BFC的block,垂直方向上都会发生合并&lt;/p&gt;

&lt;p&gt;合并规则为：不论对于时父子间还是同级兄弟之间都遵循，同号取绝对值大的为间距，异号向加结果作间距&lt;/p&gt;

&lt;p&gt;处理方式：根据产生原因可知，只要元素不在同一BFC之内，就不会发生margin collapase，所以可以overflow非visible， float非none， position非静态和相关， display：inline-block／table-cell… 等脱离文档流的手段，相对来说overflow设置比较简单&lt;/p&gt;

&lt;h2 id=&quot;inline-block&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;去除inline-block内缝隙有哪几种常见方法?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;inline-block如果不作处理会在个元素之间带来一个空隙&lt;/p&gt;

&lt;p&gt;分析原因：这是由于inline元素中，内容的 空格和回车都会显示为一个空的字符导致的，所以解决办法就是想办法去除这个空的字符，可以：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;inline元素之间不加空格跟回车，内容元素直接相邻&lt;/li&gt;
  &lt;li&gt;通过字体处理，包裹的父元素字体大小设置为0，而内容的元素字体大小正常&lt;/li&gt;
  &lt;li&gt;通过margin=-4来处理&lt;/li&gt;
  &lt;li&gt;最好的方式就是，不用inline-block而使用float替代&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;overflow-auto-hidden&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;容器使用overflow: auto| hidden撑开高度的原理是什么？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;本质上来说就是因为触发建立了BFC，而BFC就是能让上下左右都包裹住哪怕是浮动的元素&lt;/p&gt;

&lt;h2 id=&quot;bfcbfc&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BFC是什么？如何形成BFC，有什么作用?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Boxes in the normal flow belong to a formatting context, which may be block or inline, but not both simultaneously. Block-level boxes participate in a block formatting context. Inline-level boxes participate in an inline formatting context.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在w3c规范中这样说道，每个文档流中的盒子必定属于一个格式化环境，要么块级格式化环境，要么行内格式化环境，其中，块级元素在块级格式化环境中，行内元素在行内格式化环境中
其实HTML根元素html就是一个默认的块级格式化上下文，因为当页面的内容在视窗显示不下的时候，会出现滚动条，意味着html根元素的overflow属性的值为auto
那么块级格式化上下文是什么呢，通俗来说，就是一个独立的布局环境，外面的元素不能影响里面的元素，里面的元素也不能影响外面的元素，那么BFC的布局规则是怎样的呢&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;BFC布局规则&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;内部的BOX会在垂直方向，一个接一个地放置&lt;/li&gt;
      &lt;li&gt;BOX垂直方向的距离由margin决定。属于同一个BFC的两个相邻的BOX的margin会发生重叠&lt;/li&gt;
      &lt;li&gt;每个元素的margin-box的左边与包含块的border-box的左边相接触（对于从左往右的格式，反之相反）。及时存在浮动也是如此&lt;/li&gt;
      &lt;li&gt;BFC的区域不会与float box重叠&lt;/li&gt;
      &lt;li&gt;BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此&lt;/li&gt;
      &lt;li&gt;计算BFC高度时，浮动元素也参与计算&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如何触发BFC&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Floats, absolutely positioned elements, block containers (such as inline-blocks, table-cells, and table-captions) that are not block boxes, and block boxes with ‘overflow’ other than ‘visible’ (except when that value has been propagated to the viewport) establish new block formatting contexts for their contents.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;浮动元素，绝对定位元素，块级容器但是不是块级盒子（例如：display的值为inline-block、table-cell、table-caption），块级元素的overflow属性的值不为visible&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;BFC的作用&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;清除内部浮动&lt;/li&gt;
      &lt;li&gt;自适应两栏布局&lt;/li&gt;
      &lt;li&gt;阻止垂直外边距合并&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;BFC的用法都体现了规则的第5条：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为BFC内部和外部互不影响，所以当外部元素浮动时，BFC通过自身变窄不与浮动元素重叠来消除的影响，而当内部元素浮动时，为了不影响外部元素，所以把浮动元素的高度计算在内，阻止margin合并也是为了内部元素不与外部元素互相影响&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;代码&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;实现如下效果的导航条&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/a777a42b7fc6a7c3b4a8ff0afa88fb76f8cb75d4.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;```html
    &lt;!--
        @authors Clover (clover_cui@163.com)
        @date    2017-03-28 17:03:08  
    --&gt;
    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html&amp;gt;
        &amp;lt;head&amp;gt;
        &lt;meta charset=&quot;utf-8&quot; /&gt;
        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;
        &lt;title&gt;导航&lt;/title&gt;
        &lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;
        &lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;!--css引入区--&amp;gt;
    &amp;lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&amp;gt;
    &amp;lt;!--js引入区--&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        body, ul, li, p, h1, h2, h3, h4, h5, h6 {
            margin: 0;
            padding: 0;
        }

        body {
            font: 14px/1.5 &quot;Microsoft YaHei&quot;,&quot;微软雅黑&quot;,sans-serif;
            color: #656565;
        }
        ul{
            list-style: none;
        }
        .contain{
            margin:20px auto;
            height: 300px;
            width:900px;
            border: 1px solid #333;
        }
        .head{
            height:50px;
            background-color: #ccc;
        }
        .nav a{
            color: #656565;
            text-decoration: none;
            display: block;
            padding: 0 20px;
            line-height: 50px;
        }

        .nav&amp;gt;li{ 
            margin:0 20px;              
            float: left;
            position: relative;
        }
        .nav li:hover{
            background-color: #333;

        }
       .nav li:hover&amp;gt;a{
          color:#fff;
       }

        .nav ul{
            display: none;
            /*border: 1px solid #ccc;
            border-top:0px;*/
            position: absolute;
            left:0;
            top:100%;
            background-color: #eee;
        }
         .nav li:hover ul{
            display:block;

         }


        .clear:after{
            content:&#39;&#39;;
            display:block;
            clear: both;
        }
    &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class=&quot;contain&quot;&amp;gt;
        &amp;lt;div style=&quot;text-align: center;&quot;&amp;gt;&amp;lt;h1&amp;gt;___导航栏演示____&amp;lt;h1&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;head&quot;&amp;gt;
                &amp;lt;ul class=&quot;nav clear&quot;&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href=&quot;#&quot;&amp;gt;前端&amp;lt;/a&amp;gt;
                        &amp;lt;ul&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;JavascriptJavascript&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;CSS&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;HTML&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href=&quot;#&quot;&amp;gt;服务端&amp;lt;/a&amp;gt;
                        &amp;lt;ul&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;PHP&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Node&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Java&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href=&quot;#&quot;&amp;gt;前端工具&amp;lt;/a&amp;gt;
                         &amp;lt;ul&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Sublime&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Git&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Webstorm&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href=&quot;#&quot;&amp;gt;HTML&amp;lt;/a&amp;gt;
                         &amp;lt;ul&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Javascript&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;CSS&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;HTML&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href=&quot;#&quot;&amp;gt;NODE&amp;lt;/a&amp;gt;
                         &amp;lt;ul&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Javascript&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;CSS&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;HTML&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;

            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/demo/navdemo.html&quot;&gt;导航条示例&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;bfc&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;利用BFC的原理实现两栏布局&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;```html
    &lt;!--
        @authors Clover (clover_cui@163.com)
        @date    2017-03-29 14:45:17  
    --&gt;
    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html&amp;gt;
        &amp;lt;head&amp;gt;
        &lt;meta charset=&quot;utf-8&quot; /&gt;
        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;
        &lt;title&gt;两栏布局&lt;/title&gt;
        &lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;
        &lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;!--css引入区--&amp;gt;
    &amp;lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&amp;gt;
    &amp;lt;!--js引入区--&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;style&amp;gt;

    html,body,p,h1,h2{
            margin:0;
            padding:0;
        }
        #header{
            height:40px;
            background: red;
        }
        #content .aside{
            background: blue;
            min-height:100px;
            width: 200px;
            float:left;
        }
        #content .main{
            /*margin方法*/
            /*margin-left:200px;*/
            /*bfc*/
            overflow: auto;
            background: pink;
            min-height:500px;
        }
        #footer{
            height:40px;
            background: green;
        }
       .clear{
            content: &quot;&quot;;
            display: block;
            clear:both;
       }


    &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div id=&quot;header&quot;&amp;gt;
        头部
        &amp;lt;/div&amp;gt;
        &amp;lt;div id=&quot;content&quot;&amp;gt;
            &amp;lt;div class=&quot;aside&quot;&amp;gt;我是左边栏&amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;main&quot;&amp;gt;我是 主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是 主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域我是主体区域&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div id=&quot;footer&quot;&amp;gt;
        尾部
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/demo/两栏布局.html&quot;&gt;两栏布局&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.w3cplus.com/css/understanding-bfc-and-margin-collapse.html&quot;&gt;w3cplus-理解 bfc 和边距合并1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/CSS2/visuren.html#block-formatting&quot;&gt;w3c-bfc2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/CSS2/box.html#collapsing-margins&quot;&gt;w3c-边距合并1&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/28/inline-block-bfc-margin-merging/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/28/inline-block-bfc-margin-merging/</guid>
        
        <category>Clover</category>
        
        <category>CSS</category>
        
        <category>HTML</category>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>浮动-定位</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;定位与浮动&lt;/h1&gt;

&lt;h3 id=&quot;section-1&quot;&gt;定位基本属性&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;值&lt;/th&gt;
      &lt;th&gt;属性&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;inherit&lt;/td&gt;
      &lt;td&gt;规定应该从父元素继承 position 属性的值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;static&lt;/td&gt;
      &lt;td&gt;默认值,没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;relative&lt;/td&gt;
      &lt;td&gt;生成相对定位的元素，相对于元素本身正常位置进行定位,因此，left:20px 会向元素的 left 位置添加20px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;absolute&lt;/td&gt;
      &lt;td&gt;生成绝对定位的元素，相对于static定位以外的第一个祖先元素（offset parent）进行定位,元素的位置通过 left, top, right 以及 bottom 属性进行规定&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fixed&lt;/td&gt;
      &lt;td&gt;生成绝对定位的元素，相对于浏览器窗口进行定位。元素的位置通过 left, top, right 以及 bottom 属性进行规定&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sticky&lt;/td&gt;
      &lt;td&gt;CSS3新属性，表现类似position:relative和position:fixed的合体，在目标区域在屏幕中可见时，它的行为就像position:relative; 而当页面滚动超出目标区域时，它的表现就像position:fixed，它会固定在目标位置&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;section-2&quot;&gt;普通流与相对定位&lt;/h3&gt;

&lt;p&gt;CSS有三种基本的定位机制：&lt;code class=&quot;highlighter-rouge&quot;&gt;普通流&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;相对定位&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;绝对定位&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;普通流是默认定位方式，在普通流中元素框的位置由元素在html中的位置决定，元素position属性为static或继承来的static时就会按照普通流定位，这也是我们最常见的方式&lt;/p&gt;

&lt;p&gt;相对定位比较简单，对应position属性的relative值，如果对一个元素进行相对定位，它将出现在他所在的位置上，然后可以通过设置垂直或水平位置，让这个元素相对于它自己移动，在使用相对定位时，无论元素是否移动，元素在文档流中占据原来空间，只是表现出来的位置会改变&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;普通流&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
    &amp;lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&gt;
        &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
        &lt;/div&gt;
        &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
        &lt;/div&gt;
        &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
        &lt;/div&gt;
	&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;相对定位&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:relative; top:20px; left:20px;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:relative; top:20px; left:20px;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;上面例子可以看出，对绿色div进行相对定位，分别右移，下移20px后第二个红色div位置并没有相应变化，而是在原位置，绿色div遮挡住了部分红色div&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;绝对定位与固定定位&lt;/h3&gt;

&lt;p&gt;相对定位可以看作特殊的普通流定位，元素位置是相对于它在普通流中位置发生变化，而绝对定位使元素的位置与文档流无关，也不占据文档流空间，普通流中的元素布局就像绝对定位元素不存在一样&lt;/p&gt;

&lt;p&gt;绝对定位的元素的位置是相对于距离最近的非static祖先元素位置决定的。如果元素没有已定位的祖先元素，那么他的位置就相对于初始包含块儿（body或html神马的）元素。&lt;/p&gt;

&lt;p&gt;因为绝对定位与文档流无关，所以绝对定位的元素可以覆盖页面上的其他元素，可以通过z-index属性控制叠放顺序，z-index越高，元素位置越靠上。&lt;/p&gt;

&lt;p&gt;还是刚才的例子，稍微改动一下，让绿色div绝对定位，为了清晰显示，第二个红色div改为黄色&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 1px #0e0; width:200px; position:relative;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:absolute; top:20px; left:20px;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 1px #0e0; width:200px; position:relative;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:absolute; top:20px; left:20px;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;这时可以看出，绿色div是相对于父元素，也就是绿框div进行的移位，而红色和黄色div进行布局时就像绿色div不存在一样&lt;/p&gt;

&lt;p&gt;最后要说的就是fixed属性了，应用fixed也叫固定定位，固定定位是绝对定位的一种，固定定位的元素也不包含在普通文档流中，差异是固定元素的包含块儿是视口（viewport），经常见一些页面的如人人网看在线好友那个模块总在窗口右下角，估计用的是类似技术&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:fixed; bottom:20px; left:20px;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/201210131402313535.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/img/201210131402351710.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可见红色和黄色div布局没有受到绿色div影响，而无论是页面纵向滚动条在页面顶端还是底端，绿色div总是在视口左下角&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;浮动基本概念&lt;/h3&gt;

&lt;p&gt;首先介绍一些浮动模型的基本知识：浮动模型也是一种可视化格式模型，浮动的框可以左右移动（根据float属性值而定），直到它的外边缘碰到包含框或者另一个浮动元素的框的边缘。浮动元素不在文档的普通流中，文档的普通流中的元素表现的就像浮动元素不存在一样.《CSS Mastery》里作者画了几个图非常有意思，可以帮助我们理解浮动的表现，我简单的画几个&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;正常&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;红向右浮动&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red; float:right;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red; float:right;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;红框左移,覆盖绿框&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;都向左浮动,父元素宽度为0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;

&lt;p&gt;如果包含块儿太窄无法容纳水平排列的三个浮动元素,那么其它浮动块儿向下移动,直到有足够的空间,如果浮动元素的高度不同,那么向下移动的时候可能被卡住&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;没有足够水平空间&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;卡住了&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 120px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&gt;
    &lt;div style=&quot;height: 120px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;行框&lt;/h3&gt;

&lt;p&gt;前面指出浮动会让元素脱离文档流,不影响不浮动元素.实际上并不完全如此,如果浮动的元素后面有一个文档流中元素,那么这个元素的框会表现的像浮动元素不存在,但是框的文本内容会受到浮动元素的影响,会移动以留出空间.用术语说就是浮动元素旁边的行框被缩短,从而给浮动元素流出空间,因而行框围绕浮动框&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;不浮动&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 50px; width: 50px; background-color: Red;&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
       11111111111
       11111111111
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&gt;
    &lt;div style=&quot;height: 50px; width: 50px; background-color: Red;&quot;&gt;&lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
       11111111111
       11111111111
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;浮动&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
       abc def ghi
       abc def ghi
       abc def ghi
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&gt;
    &lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&gt;&lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
       abc def ghi
       abc def ghi
       abc def ghi
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;可以看出浮动后虽然绿色div布局不受浮动影响，正常布局，但是文字部分却被挤到了红色浮动div外边。要想阻止行框围绕在浮动元素外边，可以使用clear属性，属性的left，right，both，none表示框的哪些边不挨着浮动框&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
    &amp;lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; clear:both;&quot;&amp;gt;
           11111111111
           11111111111
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&gt;
    &lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&gt;&lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; clear:both;&quot;&gt;
       11111111111
       11111111111
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;清理浮动&lt;/h3&gt;

&lt;p&gt;对元素清理实际上为前面的浮动元素留出了垂直空间,这样可以解决我们之前的一个问题，看前面的图片的时候我们发现div内的所有元素浮动的话就会不占据文档空间，这样父元素，高度为0，可能很多效果也不见了&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;都向左浮动,父元素宽度为0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
        &amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;p&gt;如果我们想让父元素在视觉上包围浮动元素可以像下面这样处理,在最后添加一个空div，对它清理&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;clear:both;&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;当然这样做有很多缺点，有些javascript也可以做出类似效果，这里不细说，值得注意的是应用值为hidden或auto的overflow属性会有一个副作用：自动清理包含的任何浮动元素，所以说当页面出现相关问题时，可以看看是不是这个属性搞的鬼&lt;/p&gt;

&lt;h3 id=&quot;bfc&quot;&gt;BFC清理浮动&lt;/h3&gt;

&lt;p&gt;BFC的全称是 &lt;a href=&quot;http://www.w3.org/TR/CSS21/visuren.html#block-formatting&quot;&gt;Block Format Content&lt;/a&gt;，有三个特性&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;BFC会阻止垂直外边距（margin-top、margin-bottom）折叠&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;按照BFC的定义，只有同属于一个BFC时，两个元素才有可能发生垂直Margin的重叠，这个包括相邻元素，嵌套元素，只要他们之间没有阻挡(例如边框，非空内容，padding等)就会发生margin重叠。 因此要解决margin重叠问题，只要让它们不在同一个BFC就行了，但是对于两个相邻元素来说，意义不大，没有必要给它们加个外壳，但是对于嵌套元素来说就很有必要了，只要把父元素设为BFC就可以了。这样子元素的margin就不会和父元素的margin发生重叠&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;BFC不会重叠浮动元素&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;BFC可以包含浮动&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以利用BFC的第三条特性来“清浮动”，这里其实说清浮动已经不再合适，应该说包含浮动。也就是说只要父容器形成BFC就可以，简单看看如何形成BFC&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;float为 left、right&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;overflow为 hidden、auto、scroll&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;display为 table-cell、table-caption、inline-block&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;position为 absolute、fixed&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以对父容器添加这些属性来形成BFC达到“清浮动”效果&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;局限性&lt;/h3&gt;

&lt;p&gt;上面提到使用BFC使用float的时候会使父容器长度缩短，而且还有个重要缺陷——父容器float解决了其塌陷问题，那么父容器的父容器怎么办？难道要全部使用folat吗（确实有这种布局方式倒是）。BFC的几种方式都有各自的问题，overflow属性会影响滚动条和绝对定位的元素；position会改变元素的定位方式，这是我们不希望的，display这几种方式依然没有解决低版本IE问题。。。&lt;/p&gt;

&lt;h4 id=&quot;haslayout&quot;&gt;hasLayout&lt;/h4&gt;

&lt;p&gt;我们知道在IE6、7内有个hasLayout的概念，很多bug正是由hasLayout导致的&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;当元素的hasLayout属性值为false的时候，元素的尺寸和位置由最近拥有布局的祖先元素控制&lt;/li&gt;
  &lt;li&gt;当元素的hasLayout属性值为true的时候会达到和BFC类似的效果，元素负责本身及其子元素的尺寸设置和定位&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以利用这点儿在IE6、7下完成清浮动，先看看怎么使元素hasLayout为true&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;position: absolute&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;float: left、right&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;display: inline-block&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;width: 除 “auto” 外的任意值&lt;/li&gt;
  &lt;li&gt;height: 除 “auto” 外的任意值&lt;/li&gt;
  &lt;li&gt;zoom: 除 “normal” 外的任意值&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;writing-mode: tb-rl&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;在IE7中使用overflow: hidden、scroll、auto 也可以使hasLayout为true&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-8&quot;&gt;通用的清理浮动方案&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
    .clearfix{
        *zoom:1;
    }
    .clearfix:after{
        content:&quot;.&quot;;
        display:block;
        height:0;
        visibility:hidden;
        clear:left;
    }
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
	.clearfix{
    	*zoom:1;
    }
    .clearfix:after{
        content:&quot;&quot;;
        display:table;
        clear:both;
    }
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;两种方案&lt;/h3&gt;

&lt;p&gt;虽然我们得出了一种浏览器兼容的靠谱解决方案，但这并不代表我们一定得用这种方式，很多时候我们的父容器本身需要position：absolute等形成了BFC的时候我们可以直接利用这些属性了，大家要掌握原理，活学活用。总而言之清理浮动两种方式&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;利用 clear属性，清除浮动&lt;/li&gt;
  &lt;li&gt;使父容器形成BFC&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-10&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;文档流的概念指什么？有哪种方式可以让元素脱离文档流?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;文档流&lt;/code&gt;是文档在排列的时候所占据的位置，将窗体自上而下分成一行行, 并在每行中按从左至右的顺序排放元素,即为文档流&lt;/p&gt;

&lt;p&gt;脱离文档流即表示元素不在应该的那个位置了。&lt;/p&gt;

&lt;p&gt;让元素脱离文档流的方式有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;float——浮动
&lt;code class=&quot;highlighter-rouge&quot;&gt;float: left;或float: right;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;position——定位&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;绝对定位 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: absolute;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;绝对定位的元素脱离文档流，在原位置上方直至设置了定位值，以最近已定位的祖先元素内边框为参照。&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;固定定位 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: fixed;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;固定定位的元素脱离文档流，在原位置上方直至设置了定位值，参照物为浏览器可视区&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-11&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;有几种定位方式，分别是如何实现定位的，使用场景如何？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;有四种定位方式&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;static 静态定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其为文档的默认定位方式，不会脱离文档流，其会忽略top、 right、 bottom、 left、 z-index 等声明；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;absolute 绝对定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用该定位方式其会脱离文档流，其会相对于static定位以外的第一个父元素进行定位，其支持top、 right、 bottom、 left、 z-index 等声明；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;relative 相对定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其会相对其正常位置进行定位，不会脱离文档流；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;fixed 固定定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;相对窗口进行定位，其不会随着页面翻动而移动，其完全脱离文档流；&lt;/p&gt;

&lt;h2 id=&quot;absolute-relative-fixed-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;absolute, relative, fixed 偏移的参考点分别是什么&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;absolute偏移 参考点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;a、若指定了left/right、top/bottom，其会参考除static以外的第一个父元素的原始坐标点，若父元素没有定义定位方式其会往祖元素找里，若还没找到则继续往上找，直至找到为止，若均未找到，则会参考浏览器的左上角原点坐标；
另：当存在嵌套关系时，比如一个div里包裹了一个absolute元素，且该div定位方式已经确定，则absolute元素的参考点为div里内容区的左上角为参考点&lt;/p&gt;

&lt;p&gt;```html
	&amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang=&quot;en&quot;&amp;gt;
    &amp;lt;head&amp;gt;
      &lt;meta charset=&quot;UTF-8&quot; /&gt;
      &lt;title&gt;Document&lt;/title&gt;
      &lt;style&gt;
      *{
          margin: 0px;
          padding: 0px;
          box-sizing:border-box;&lt;/style&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  }
  .static-div{
      height: 200px;
      border: 10px solid red;
      background-color: pink;
  }
  .fixed-div{
      height: 40px;
      border: 10px solid green;
      background-color: #ccc;
      position: fixed;        
      top: 250px;
      left: 100px;
  }
  .absolute-div{
      height: 200px;
      border: 20px solid blue;
      position: absolute;
      top: 150px;
      left: 300px;
  }
  .relative-div{
      height: 200px;
      width: 400px;
      border: 10px solid yellow;
      background-color: #ccc;
      position: relative;
      top:100px;
      left:250px;
  }

      &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;fixed-div&quot;&amp;gt;我是固定定位的块级元素div&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;relative-div&quot;&amp;gt;我是相对定位的块级元素div
  &amp;lt;div class=&quot;absolute-div&quot;&amp;gt;我是绝对定位的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;

&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上述代码中 absolute-div定义了position: top: 150px; left: 300px;&lt;/p&gt;

&lt;p&gt;absolute-div坐标如下：（560px，660px）
&lt;img src=&quot;/img/2166980-c2eea1be397dd074.png&quot; alt=&quot;&quot; /&gt;
而relative-div坐标如下：（250px，500px）
&lt;img src=&quot;/img/2166980-5d5b362982cb6639.png&quot; alt=&quot;&quot; /&gt;
两者横坐标相减得 310px；纵坐标相减得160px；而relative-div的border宽度为10px，因此此时absolute-div的参考点为relative-div的内容区左上角；（将relative-div的border宽度变更为20px后，还是可以看出absolute-div的参考点为relative-div的内容区左上角）&lt;/p&gt;

&lt;p&gt;b.若未指定left/right、top/bottom，但指定了其父元素的定位方式，则其会视内容区的元素而定进行摆放；如上面代码将absolute-div的position: top: 150px; left: 300px; 注释掉后会形成这样的情况
&lt;img src=&quot;/img/2166980-c6affe6430cd4fad.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;c、若未指定left/right、top/bottom，且其父元素及父元素以上均未指定定位方式，其会脱离文档流，但其会定位在后出现的文档流的原始坐标上；如下述代码中：&lt;/p&gt;

&lt;p&gt;```html
	&amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang=&quot;en&quot;&amp;gt;
    &amp;lt;head&amp;gt;
        &lt;meta charset=&quot;UTF-8&quot; /&gt;
        &lt;title&gt;Document&lt;/title&gt;
        &lt;style&gt;
        *{
            margin: 0px;
            padding: 0px;
            box-sizing:border-box;&lt;/style&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    }
    .static-div{
        height: 200px;
        border: 10px solid red;
        background-color: pink;
    }
    .fixed-div{
        height: 40px;
        border: 10px solid green;
        background-color: #ccc;
        position: fixed;        
        top: 250px;
        left: 100px;
    }
    .absolute-div{
        height: 200px;
        border: 20px solid blue;
        position: absolute;


    }
    .relative-div{
        height: 200px;
        width: 400px;
        border: 10px solid yellow;
        background-color: #ccc;
        position: relative;
        top:100px;
        left:250px;
    }

    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;fixed-div&quot;&amp;gt;我是固定定位的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;relative-div&quot;&amp;gt;我是相对定位的块级元素div &amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;absolute-div&quot;&amp;gt;我是绝对定位的块级元素div&amp;lt;/div&amp;gt; 
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/2166980-68fccea30fca83e3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;relative偏移参考点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其参考点为其本身的文档流&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;fixed 偏移参考点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;浏览器窗口本身，与页面无关，即滚动页面其不会随之移动，而是固定在窗口的指定位置上&lt;/p&gt;

&lt;h2 id=&quot;z-index--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;z-index 有什么作用? 如何使用?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;z-index定义了z方向（与显示屏垂直的方向，值越大者堆叠显示在前面）的级别从而使元素有序堆叠显示。&lt;/p&gt;

&lt;p&gt;ps:该属性值只对已定位的元素有效。&lt;/p&gt;

&lt;p&gt;堆叠顺序&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不对元素设position时，文档流后面的元素覆盖前面的元素。&lt;/li&gt;
  &lt;li&gt;将元素设置的position设置为relative ，absolute 或者 fixed，元素会覆盖没有设置 position 属性或者属性值为 static 的元素。&lt;/li&gt;
  &lt;li&gt;一般情况下z-index值越大者在前面。&lt;/li&gt;
  &lt;li&gt;子元素继承元素的堆叠关系，不论子元素的z-index值比父元素的兄弟元素大或者小，都继承父元素与其兄弟元素的堆叠关系。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;positionrelativemargin&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;position:relative和负margin都可以使元素位置发生偏移?二者有什么区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;区别是使用position:relative ，该元素原来的位置不会脱离文档流，即使用时可能会出现空白的情况，而负margin则不存在这样的情况；
当margin-top、margin-left为负值的时候，会把元素上移、左移&lt;/p&gt;

&lt;h2 id=&quot;section-12&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何让一个固定宽高的元素在页面上垂直水平居中?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;垂直居中一般利用绝对定位中的负边距实现，首先用absolute把元素设置为绝对定位，再将top和left为50%，再对元素设置其自身高度、长度一般的负边距，使元素中心移动到父元素中心，实现居中对齐&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
    &amp;lt;style&amp;gt;
    .demo{
    position: relative;
    width:600px;
    height:600px;
    background-color:#eee;
    border:1px solid #54e823;
    }
    .mydiv{
    width:100px;
    height:200px;
    background-color:red;
    position: absolute;
          top: 50%;
          left:50%;
          margin-left: -50px;
          margin-top: -100px;
    }
    &amp;lt;/style&amp;gt;
    &amp;lt;div class=&quot;demo&quot;&amp;gt;
        &amp;lt;div class=&quot;mydiv&quot;&amp;gt;我要水平垂直居中&amp;lt;div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;
.demo{
position: relative;
width:600px;
height:600px;
background-color:#eee;
border:1px solid #54e823;
}
.mydiv{
width:100px;
height:200px;
background-color:red;
position: absolute;
      top: 50%;
      left:50%;
      margin-left: -50px;
      margin-top: -100px;
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
    &lt;div class=&quot;mydiv&quot;&gt;我要水平垂直居中&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-13&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;浮动元素有什么特征？对其他浮动元素、普通元素、文字分别有什么影响?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;浮动元素会脱离文档流；&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;碰到其他浮动元素其并不会忽略；&lt;/li&gt;
  &lt;li&gt;遇见块级元素其会完全忽略浮动元素，但遇到块级元素中的内联元素或直接的内联元素，内联元素会环绕该浮动元素；&lt;/li&gt;
  &lt;li&gt;遇见文字时，文字会环绕在浮动元素周围；&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-14&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;清除浮动指什么? 如何清除浮动?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;清除浮动&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;清除浮动指的是清除浮动对其他元素造成的影响。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如何清除浮动&lt;/p&gt;

    &lt;p&gt;清除浮动的方法有很多，概括如下：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;运用clear:both/left/right清除浮动&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;可以在浮动元素末尾添加一个空内容带clear样式属性的标签，最常用、最有的方式是添加一个带clear的伪元素，如下代码：&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
      .clearfix:after{
        content: &quot;&quot;;
        display: block;
        clear: both;
      }
      .clear{*zoom: 1;}  /*兼容IE6*/
 &lt;/code&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;触发BFC清除浮动&lt;/p&gt;

        &lt;p&gt;触发BFC的方式有很多，如下：&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

  	1. 清除子元素浮动，父元素也浮动或者绝对定位触发BFC。

  	2. overflow属性值非visiable

  	3. display成非块级盒子。
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;px-200px-10px&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;写出如下两栏布局, 其中中间区块宽度900px, 居中,左侧边栏宽度200px, 右侧边栏宽度自适应，缝隙10px&lt;/code&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;做完可&lt;a href=&quot;http://book.jirengu.com/jirengu-inc/jrg-tehui/homework/%E8%8B%A5%E6%84%9A/10-1.html&quot;&gt;参考范例4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ps: 图片左浮动，导航栏整体右浮动，导航栏里面的li元素左浮动。&lt;/li&gt;
  &lt;li&gt;ps: aside左浮动，main 不浮动设置 margin-left&lt;/li&gt;
  &lt;li&gt;凡是有浮动的地方，其直接父元素必须清除浮动&lt;/li&gt;
  &lt;li&gt;自备创意，风格样式不需要和范例保持一样，技术上到位就行	
&lt;img src=&quot;/img/09340020-7ff9-40b1-a61b-546687788e73&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html
	&amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html&amp;gt;
        &amp;lt;head&amp;gt;
        &lt;meta charset=&quot;utf-8&quot; /&gt;
        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;
        &lt;title&gt;定位布局演示&lt;/title&gt;
        &lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;
        &lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;!--css引入区--&amp;gt;
    &amp;lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&amp;gt;
    &amp;lt;!--js引入区--&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;style&amp;gt;
body, ul, li, p, h1, h2, h3, h4, h5, h6 {
    margin: 0;
    padding: 0;
}

body {
    font: 14px/1.5 &quot;Microsoft YaHei&quot;,&quot;微软雅黑&quot;,sans-serif;
    color: #656565;
}
.hearder{
    height:50px;
    background-color:#333;
}
.content{
    width:900px;
    margin:0 auto;

}
.content img{
    height:50px;
}
 a{
    color: #333;
    text-decoration: none;
}


.nav{
    list-style:none;
    float:right;
}
.nav&amp;gt;li{
    float:left;
    margin-left:15px;
}

.nav li a{
    display: block;
    font-size: 16px;
    height: 50px;
    line-height: 50px;
    padding: 0 10px;
    color: #fff;
}
.nav li a:hover{
    background-color: #fff;
    color:#333;
}

.clear:after{
    content:&#39;&#39;;
    display:block;
    clear: both;
}

.footer{

    height:50px;

    background-color:#333;
}
.mainlayout{
    margin-top :10px;

}
.mainlayout .left{
    float: left;
    width: 200px;
    min-height: 500px;
    background-color: #eee;
}
.mainlayout .main{

    margin-left:210px;
    padding: 20px 10px;
    background-color: #eee;

}
.content ul{
    list-style: none;
}

.content ul li{
    float: left;
    margin-left: 10px;
    line-height: 50px;
}
.footer a{
    color:#fff;
}
.main h1 {
    margin: 20px 0;
}
&amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;

        &amp;lt;div class=&quot;hearder&quot;&amp;gt;
            &amp;lt;div class=&quot;content&quot;&amp;gt;
                &amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;&amp;lt;img src=&#39;img/logo-tiny.png&#39;&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&quot;nav&quot;&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;技能&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;经历&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;作品&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;关于&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class=&quot;mainlayout clear&quot;&amp;gt;
            &amp;lt;div class=&quot;content&quot;&amp;gt;
                &amp;lt;div class=&quot;left&quot;&amp;gt;&amp;lt;/div&amp;gt;
                &amp;lt;div class=&quot;main&quot;&amp;gt;
                    &amp;lt;h1&amp;gt;我的作品&amp;lt;/h1&amp;gt;
                    &amp;lt;p&amp;gt;生活很美好&amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;心情不错&amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;代码写的很漂亮&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class=&quot;footer clear&quot;&amp;gt;
            &amp;lt;div class=&quot;content&quot;&amp;gt;
               &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;http://jirengu.com&quot;&amp;gt;饥人谷&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;http://jscode.me&quot;&amp;gt;JSCODE&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;http://js.jirengu.com&quot;&amp;gt;JSBIN&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/div&amp;gt;

        &amp;lt;/div&amp;gt;

    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/demo/positiondemo.html&quot;&gt;代码效果演示&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/28/float-position/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/28/float-position/</guid>
        
        <category>Clover</category>
        
        <category>CSS</category>
        
        <category>HTML</category>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>免费API汇总</title>
        <description>&lt;p&gt;本页仅收集中国国内可用API，如需查看其他版本，请点击&lt;a href=&quot;https://github.com/marktony/Awesome_API&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;目录&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#笔记&quot;&gt;笔记&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#出行&quot;&gt;出行&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#词典&quot;&gt;词典&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#电商&quot;&gt;电商&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#地图&quot;&gt;地图&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#电影&quot;&gt;电影&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#即时通讯&quot;&gt;即时通讯&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#开发者网站&quot;&gt;开发者网站&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#快递查询&quot;&gt;快递查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#旅游&quot;&gt;旅游&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#社交&quot;&gt;社交&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#视频&quot;&gt;视频&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#天气&quot;&gt;天气&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#团队协作&quot;&gt;团队协作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#图片与图像处理&quot;&gt;图片与图像处理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#外卖&quot;&gt;外卖&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#消息推送&quot;&gt;消息推送&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#音乐&quot;&gt;音乐&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#云&quot;&gt;云&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#语音识别&quot;&gt;语音识别&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#综合&quot;&gt;综合&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;笔记&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/office/office365/howto/onenote-landing&quot;&gt;OneNote&lt;/a&gt; - OneNote支持获取，复制，创建，更新，导入与导出笔记，支持为笔记添加多媒体内容，管理权限等。提供SDK和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.wiz.cn/manual/plugin/&quot;&gt;为知笔记&lt;/a&gt; - 为知笔记Windows客户端开放了大量的API，其中绝大部分，都通过COM提供，可以在javascript, C#, C++, Delphi等语言中使用。接口通过IDL(Interface description language)语言描述。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.yinxiang.com/&quot;&gt;印象笔记&lt;/a&gt; - 印象笔记提供了ActionScript 3, Android, C++, Windows, iOS, Java, JavaScript, OS X, Perl, PHP, Python, Ruby等平台的SDK和完整的API参考文档，可通过API进行认证，笔记，笔记本，附件，搜索，同步等操作，同时提供企业版和本地API。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://note.youdao.com/open/&quot;&gt;有道云笔记&lt;/a&gt; - 有道云笔记提供了Android SDK，同时Open API允许进行授权，用户，笔记本，笔记，分享，附件等方面的操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-2&quot;&gt;出行&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.xiaojukeji.com/&quot;&gt;滴滴&lt;/a&gt; - 滴滴提供了iOS和Android SDK, 可实现拉起滴滴叫车等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developerpre.10101111.com/&quot;&gt;神州专车&lt;/a&gt; - 神州专车提供了API模式和H5模式两种接入模式，允许进行基础信息，订单，支付，充值，用户，发票，代金券，企业等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.uber.com/&quot;&gt;Uber&lt;/a&gt; - Uber提供了Android和iOS的SDK,允许进行乘客，行程体验，司机，派送次数等四大方面的操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;词典&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://api.fanyi.baidu.com/api/trans/product/index&quot;&gt;百度翻译&lt;/a&gt; - 百度翻译支持多种语言互相翻译，包含PHP, JS, Python, C, Java版Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/translator/translatorapi.aspx&quot;&gt;必应词典&lt;/a&gt; - 微软翻译API支持文字和语音两种类型，支持多种语言互相翻译，提供C#版本Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/BingDic.md&quot;&gt;必应词典(非官方)&lt;/a&gt; - 支持单词和语句翻译。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.iciba.com/?c=api&quot;&gt;金山词霸&lt;/a&gt; - 金山词霸允许进行简单的翻译操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/KingsoftDic.md&quot;&gt;金山词霸(非官方)&lt;/a&gt; - 金山词霸允许进行简单的翻译操作。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.shanbay.com/help/developer/api_v1/&quot;&gt;扇贝&lt;/a&gt; - 扇贝提供了完整的API，允许进行用户，查询，添加学习记录，忘记单词，例句，笔记等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fanyi.youdao.com/openapi&quot;&gt;有道词典&lt;/a&gt; - 有道词典允许进行简单的翻译操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/YoudaoDic.md&quot;&gt;有道词典(非官方)&lt;/a&gt; - 允许进行简单的翻译操作。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-4&quot;&gt;电商&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.dangdang.com/&quot;&gt;当当&lt;/a&gt; - 当当允许商家用户和网站接入授权，可进行商品，订单，图片，问答，店铺和促销等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jos.jd.com/api/index.htm&quot;&gt;京东&lt;/a&gt; - 京东提供了Java, PHP, .net的SDK，授权后可进行多种操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.suning.com/ospos/apipage/toApiListMenu.do&quot;&gt;苏宁开放服务&lt;/a&gt; - 苏宁提供了Java, PHP, .Net, Python版本的SDK，授权后可进行多种操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://open.taobao.com/doc2/api_list.htm&quot;&gt;淘宝开放平台&lt;/a&gt; - 淘宝提供了Java, .Net, PHP, Python版本的SDK，授权后提供多种操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.amazon.com/public/zh&quot;&gt;亚马逊&lt;/a&gt; - 亚马逊提供多种语言版本的SDK，授权后允许多种操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-5&quot;&gt;地图&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbsyun.baidu.com/&quot;&gt;百度地图&lt;/a&gt; - 百度地图提供了Android, iOS版本的SDK和JavaScript API，可进行定位、地图、数据、出行、鹰眼轨迹和分析服务。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbs.amap.com/&quot;&gt;高德地图&lt;/a&gt; - 高德地图提供了JavaScript和web服务API，Android和iOS SDK，支持地图，定位，搜索，路线规划，导航和室内地图等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbs.qq.com/&quot;&gt;腾讯地图&lt;/a&gt; - 腾讯地图提供了JavaScript API，Android和iOS SDK，支持定位，地图，地点搜索，路线和导航等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbs.tianditu.com/api-new/home.html&quot;&gt;天地图&lt;/a&gt; - 天地图提供了H5 API和JavaScript API等web API，同时提供了Android和iOS SDK，支持基础地图服务，图层管理，地图覆盖物，地图工具，地名搜索和出行规划服务。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.mapbar.com/&quot;&gt;图吧地图&lt;/a&gt; - 图吧提供了JavaScript和Flash API，Android和iOS SDK，支持定位，地址解析，位置标注，位置截图，路线规划，周边查询，兴趣点搜索和在线导航。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-6&quot;&gt;电影&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.douban.com/wiki/?title=movie_v2&quot;&gt;豆瓣电影&lt;/a&gt; - 豆瓣电影支持电影条目，影人条目，搜索和榜单等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/DoubanMovie.md&quot;&gt;豆瓣电影(非官方)&lt;/a&gt; - 获取最近热映电影、短评、影评、图片等。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/9855610eb1d4&quot;&gt;猫眼电影(非官方)&lt;/a&gt; - 支持查询首页电影列表，电影详情(含评论)，本地影院和影院详情，选座。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Time.md&quot;&gt;Time时光(非官方)&lt;/a&gt; - 支持获取&lt;a href=&quot;http://www.mtime.com/&quot;&gt;时光网&lt;/a&gt;网站数据。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/avenwu/vplus/blob/master/doc/v%E7%94%B5%E5%BD%B1api%E6%8E%A5%E5%8F%A3.md&quot;&gt;V电影(非官方)&lt;/a&gt; - 支持获取&lt;a href=&quot;http://www.vmovier.com/&quot;&gt;V电影&lt;/a&gt;网站的数据。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-7&quot;&gt;即时通讯&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.easemob.com/&quot;&gt;环信&lt;/a&gt; - 支持Android, iOS, WebIM, Linux, REST集成，支持多种消息类型。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rongcloud.cn/&quot;&gt;融云&lt;/a&gt; - 支持Android, iOS, Web, 游戏集成，支持多种消息类型。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://netease.im/&quot;&gt;网易云信&lt;/a&gt; - 支持IM实时通讯，实时音视频，教学白班，专线电话，短信，聊天室，提供iOS, Android, Windows和Web SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.qcloud.com/product/im&quot;&gt;腾讯云通信IM&lt;/a&gt; - 提供iOS, Android, Windows和Web SDK，支持多种消息类型。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-8&quot;&gt;开发者网站&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://open.coding.net/&quot;&gt;Coding&lt;/a&gt; - 授权后可访问coding.net网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gank.io/api&quot;&gt;干货集中营&lt;/a&gt; - 提供妹子图和Android, iOS, 前端，拓展资源等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.diycode.cc/api&quot;&gt;diycode&lt;/a&gt; - 授权后可访问diycode网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oschina.net/openapi&quot;&gt;开源中国&lt;/a&gt; - 授权后可访问开源中国网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://laravel-china.org/topics/3097&quot;&gt;Laravel China&lt;/a&gt; - 授权后可访问 Laravel China 网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruby-china.org/api-doc/&quot;&gt;Ruby China&lt;/a&gt; - 授权后可访问Ruby China网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.v2ex.com/p/7v9TEc53&quot;&gt;V2EX&lt;/a&gt; - 可访问V2EX网站的内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-9&quot;&gt;快递查询&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.aikuaidi.cn/api/&quot;&gt;爱快递&lt;/a&gt; - 爱快递支持国内90多家快递物流订单查询服务，免费版有使用次数限制，可用于电子商城单号跟踪,手机应用,微信快递接口等服务。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kuaidi100.com/openapi/&quot;&gt;快递100&lt;/a&gt; - 快递100支持300家国内国际快递，免费版有使用次数限制。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/ExpressDelivery100.md&quot;&gt;快递100(非官方)&lt;/a&gt; - 快递100支持300家国内国际快递。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kdniao.com/&quot;&gt;快递鸟&lt;/a&gt; - 快递鸟支持国内外400多家快递公司，免费版有使用次数限制，包含.Net, PHP, Java版Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kuaidi.com/openapi.html&quot;&gt;快递网&lt;/a&gt; - 快递网支持上百家快递查询服务，免费版有使用次数限制。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/ExpressDelivery.md&quot;&gt;快递网(非官方)&lt;/a&gt; - 快递网支持上百家快递查询服务。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-10&quot;&gt;旅游&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/12306.md&quot;&gt;12306(非官方)&lt;/a&gt; - 支持获取12306火车票票数、票价查询。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.qunar.com/&quot;&gt;去哪儿&lt;/a&gt; - 支持获取去哪儿网的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.tuniu.cn/&quot;&gt;途牛&lt;/a&gt; - 支持途牛网的内容，仅开放给供应商系统。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/TuniuTickets.md&quot;&gt;途牛火车票(非官方)&lt;/a&gt; - 支持获取途牛火车票票数、票价查询。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://u.ctrip.com/union/help/Termsofuse.aspx&quot;&gt;携程&lt;/a&gt; - 支持携程网的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.elong.com/wiki/API%E6%96%87%E6%A1%A3&quot;&gt;艺龙&lt;/a&gt; - 支持获取产品数据，完成用户的预订，进行订单查询、更改或取消。提供在线工具，以及H5, Java, C#, PHP, Ruby版本的Demo。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-11&quot;&gt;社交&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://open-doc.dingtalk.com/&quot;&gt;钉钉&lt;/a&gt; - 支持免登，企业通讯录，服务窗，钉盘，地图，会话，DING，电话，音频，扫码，支付，分享等服务，提供SDK和Demo，PC版UI规范，调试工具和钉钉UI组件库。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.douban.com/wiki/?title=guide&quot;&gt;豆瓣&lt;/a&gt; - 支持图书，电影，音乐，同城，广播，用户，日记，相册，线上活动，论坛，回复和我去等功能，提供豆瓣组件，豆瓣标示和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.kaixin001.com/document.php&quot;&gt;开心网&lt;/a&gt; - 支持用户信息，登录授权，好友，传播应用，支付，分享内容，消息，交互，开心网应用等内容，提供SDK，开源插件和标示素材。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.connect.qq.com/api%E5%88%97%E8%A1%A8&quot;&gt;QQ互联&lt;/a&gt; - 支持用户资料，QQ会员信息，空间相册，腾讯微博资料，分享到腾讯微博，微博好友信息，财付通信息等内容，提供SDK, Demo, 以及设计资源。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.weibo.com/wiki/API&quot;&gt;微博&lt;/a&gt; - 支持粉丝服务，微博，评论，用户，关系，账号，收藏，搜索，提醒，短链，公共服务，位置服务，地理信息，地图引擎，支付以及OAuth2.0授权等内容，提供微博标示及SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://open.weixin.qq.com/&quot;&gt;微信&lt;/a&gt; - 支持移动应用，网站应用，公众账号，公众号第三方平台等内容，提供SDK, Demo, 以及设计资源。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-12&quot;&gt;视频&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.iqiyi.com/&quot;&gt;爱奇艺&lt;/a&gt; - 支持弹幕，全色彩播放器，高清码流，视频托管，播放爱奇艺视频，应用分发，IOCP等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fython/BilibiliAPIDocs&quot;&gt;Bilibili(非官方)&lt;/a&gt; - 支持登录，我的信息，番剧专题，视频/专题收藏、关注，番剧，弹幕等。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Vespa314/bilibili-api/blob/master/api.md&quot;&gt;Bilibili(非官方)&lt;/a&gt; - 支持获取Bilibili网站数据。#非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lecloud.com/zh-cn/help/api.html&quot;&gt;乐视&lt;/a&gt; - 支持标准直播，标准点播，视频发行平台，移动直播等内容，提供SDK下载。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Neihan.md&quot;&gt;内涵段子(非官方)&lt;/a&gt; - 支持获取内涵段子中大部分模块信息。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lm.tv.sohu.com/union/open_platform.do&quot;&gt;搜狐视频&lt;/a&gt; - 支持一二级内容获取，内容分类获取，视频详情信息，专辑详情信息，分级列表获取，关键词搜索等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://api.tudou.com/apidoc/index.php/%E9%A6%96%E9%A1%B5&quot;&gt;土豆&lt;/a&gt; - 支持视频模块，豆单模块，影视库模块，用户模块，转帖模块，字段定义模块等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://doc.open.youku.com/?spm=0.0.0.0.fOn6ND&quot;&gt;优酷&lt;/a&gt; - 支持内容输出，视频搜索，智能推荐，用户登录，用户互动，用户信息，视频上传至优酷，视频互动等内容，提供SDK。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-13&quot;&gt;天气&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.swarma.net/index.php/%E5%BD%A9%E4%BA%91%E5%A4%A9%E6%B0%94API/v2&quot;&gt;彩云天气&lt;/a&gt; - 支持全球天气数据，两种空气质量数据，天气预报，实况天气，独家降水预报，独家空气质量预报，六种天气数据，四种生活指数数据等内容，部分功能收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/hefengyun/weather/222344&quot;&gt;和风天气&lt;/a&gt; - 支持7-10天预报，实况天气，每小时预报，生活指数，灾害预警，景点天气，历史天气，城市查询等内容，仅国内数据免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/MeizuWeather.md&quot;&gt;魅族天气(非官方)&lt;/a&gt; - 支持获取魅族天气。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/XiaomiWeather.md&quot;&gt;小米天气(非官方)&lt;/a&gt; - 支持获取小米天气数据。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.thinkpage.cn/doc&quot;&gt;心知天气&lt;/a&gt; - 支持天气实况，逐日预报和历史，24小时逐小时预报，过去24小时天气历史记录，气象灾害预警，空气质量实况与城市排行，逐日和逐小时空气质量预报，过去24小时空气质量历史记录，生活指数，农历、节气、生肖，机动车尾号限行，日出日落，月初月落和月像，城市搜索等内容，仅国内数据免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/CenterWeather.md&quot;&gt;中央天气预报(非官方)&lt;/a&gt; - 支持获取中央天气预报数据。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-14&quot;&gt;团队协作&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.teambition.com/developer/open-platform&quot;&gt;Teambition&lt;/a&gt; - 支持详细的文档说明，部分平台提供demo。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-15&quot;&gt;图片与图像处理&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.v2ex.com/t/157267&quot;&gt;Bing每日壁纸(非官方)&lt;/a&gt; - 支持图片URL和图片描述，可获取不同地区的数据。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pinguo/PGSkinPrettifyEngine&quot;&gt;Camera360&lt;/a&gt; - 支持全帧率直播美白滤镜，提供SDK和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://imgsdk.com/&quot;&gt;嗨图&lt;/a&gt; - 支持图片标注，仅提供iOS版本SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.camcard.com/?language=zh-cn&quot;&gt;名片全能王&lt;/a&gt; - 支持精准识别几十种语言的名片，自动切边并美化名片图像，自动返回识别结果，提供多种版本SDK，收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intsig.com/zh/products/camcard_for_id&quot;&gt;企业证件识别&lt;/a&gt; - 支持身份证，驾驶证，护照等，收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.camscanner.com/?language=zh-cn&quot;&gt;扫描全能王&lt;/a&gt; - 支持图像智能剪裁，五种图像增强模式，手动调节图像细节，自动返回扫描结果等，提供iOS与Android版本SDK，收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://api1.wozhitu.com/&quot;&gt;我知图&lt;/a&gt; - 支持相似图像搜索，图像识别匹配，图像识别关键词推荐，重复图片探测等内容。&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;[银行卡&lt;/td&gt;
          &lt;td&gt;信用卡识别](http://www.intsig.com/zh/products/creditcard) - 提供SDK和API，收费。&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-16&quot;&gt;外卖&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev.waimai.baidu.com/&quot;&gt;百度外卖&lt;/a&gt; - 支持商户，菜品，商品，订单和基础数据等内容，提供SDK和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.dianping.com/&quot;&gt;大众点评&lt;/a&gt; - 支持商户，团购，在线预定，商品点评，数据统计，元数据等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://openapi.eleme.io/v2/quickstart.html&quot;&gt;饿了么&lt;/a&gt; - 支持查询，预定，订单，其他订单，数据推送，支付，评价，活动，账户同步，数据落地同步等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.waimai.meituan.com/doc/show&quot;&gt;美团外卖&lt;/a&gt; - 支持门店，配送范围，菜品，药品，订单，订单推送等内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-17&quot;&gt;消息推送&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://push.baidu.com/doc/restapi/restapi&quot;&gt;百度云推送&lt;/a&gt; - 支持iOS, Android和服务器端，支持推送，统计，组管理等Rest API接口。服务器端支持Java, Python, PHP, REST API。提供所支持各语言版本的SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.huawei.com/push&quot;&gt;华为推送&lt;/a&gt; - 支持Android，提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.jiguang.cn/jpush/server/push/rest_api_v3_push/&quot;&gt;极光&lt;/a&gt; - 支持Android, iOS, WindowsPhone, 服务器端REST API, 提供Java, Python, PHP, Ruby, C#, Node.js等版本的SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leancloud.cn/docs/push_guide.html&quot;&gt;LeanCloud&lt;/a&gt; - 支持Android, iOS, WindowsPhone和Web网页推送，使用云引擎和JavaScript创建推送，使用REST API推送消息。提供Objectvie-C(开放源码), JavaScript(开放源码), Android, Unity, .Net, WindowsPhone, Java(开放源码), Python(开放源码), PHP(开放源码), C++(开放源码), Swift(开放源码)版本SDK。同时提供Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xg.qq.com/&quot;&gt;腾讯信鸽&lt;/a&gt; - 支持iOS和Android平台，服务器端采用Rest API, 同时服务器端支持Java, PHP, Python等语言并提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev.xiaomi.com/console/appservice/push.html&quot;&gt;小米&lt;/a&gt; - 支持Android和iOS平台，服务器端支持Java, Python并提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev.umeng.com/push/android/api-doc&quot;&gt;友盟&lt;/a&gt; - 支持Android和iOS平台，服务器端支持PHP, Java, Python并提供SDK。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-18&quot;&gt;音乐&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://my.oschina.net/skiden/blog/102025&quot;&gt;百度音乐(非官方)&lt;/a&gt; - 支持频道歌曲列表，专辑的歌曲列表，歌曲的详细信息，歌手专辑信息，搜索，歌手的所有歌曲，排行榜，所有专辑，所有歌手，歌手的专辑列表，歌手信息，歌词搜索，歌曲文件详细信息。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.douban.com/wiki/?title=music_v2&quot;&gt;豆瓣音乐&lt;/a&gt; - 支持音乐信息，评论信息，标签信息，搜索音乐，某个音乐中标记最多的标签，发表、修改、删除评论，用户对音乐的所有标签等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kaolafm/api&quot;&gt;考拉FM&lt;/a&gt; - 支持获取指定分类下列表和内容，搜索指定关键字内容，专辑/电台/直播详情，指定专辑下列表，指定电台播单，分类下专辑TOP50，指定期(碎片)所在专辑最新分页功能，分类下全部直播计划，版本升级接口，排行榜，精选，传统电台列表/详情/地区等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://119.29.39.252/index.php/2016/10/20/1-2/&quot;&gt;酷狗音乐(非官方)&lt;/a&gt; - 支持搜索，各种排行榜，歌手专辑信息，下载和获取播放地址。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wq.qq.com/&quot;&gt;企鹅FM&lt;/a&gt; - 支持获取电台分类列表，电台分类下的专辑信息列表，专辑下节目信息列表，电台节目播放链接，搜索关键字相关主播/专辑/节目，主播名下专辑，特定时间段内新增主播/更新的专辑/新增的专辑等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ccchangkong/article/issues/23&quot;&gt;QQ音乐(非官方)&lt;/a&gt; - 支持歌曲榜单，歌曲/歌词地址，歌曲图片。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.qingting.fm/&quot;&gt;蜻蜓FM&lt;/a&gt; - 支持OAuth2.0授权，音频数据中心，分类，点播，直播，临时直播，排行榜，搜索，内容更新状态，主播，此刻，专题，活动等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/darknessomi/musicbox/wiki/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%96%B0%E7%89%88WebAPI%E5%88%86%E6%9E%90%E3%80%82&quot;&gt;网易云音乐(非官方)&lt;/a&gt; - 支持获取用户歌单，歌单详情，歌曲URL。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.ximalaya.com/index&quot;&gt;喜马拉雅FM&lt;/a&gt; - 支持Android和iOS平台，并提供相应的SDK和Demo，具体支持内容请下载相关文件查看。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-19&quot;&gt;云&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://develop.aliyun.com/api?spm=5176.8142029.388261.274.4FJSwV&quot;&gt;阿里云&lt;/a&gt; - 支持弹性计算，数据库，存储与CDN，网络，应用服务，域名与网站等类别的内容，并提供了相关SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.baidu.com/doc/index.html&quot;&gt;百度云&lt;/a&gt; - 支持计算和网络，存储和CDN，数据库，安全和管理，数据分析，智能多媒体服务，物联网服务，人工智能，应用服务，网站服务，数字营销服务等内容，并提供相关的SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bmob.cn/&quot;&gt;Bmob&lt;/a&gt; - 支持云数据库，容器服务，消息推送，文件存储，短信验证码，及时通讯，云端逻辑，定时任务，地理位置等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leancloud.cn/&quot;&gt;LeanCloud&lt;/a&gt; - 	支持云存储，数据分析，用户关系，实时通讯，消息推送，移动统计等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.qiniu.com/&quot;&gt;七牛云&lt;/a&gt; - 支持对象存储，融合CDN，直播云，数据处理等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.qcloud.com/doc/api&quot;&gt;腾讯云&lt;/a&gt; - 支持计算，网络，存储与CDN，数据库，安全服务，监控与管理，域名服务，视频服务，大数据与AI等内容，提供相关SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wilddog.com/&quot;&gt;野狗&lt;/a&gt; - 支持实时数据同步，实时视频通话，及时通讯，短信，身份认证等。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-20&quot;&gt;语音识别&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://yuyin.baidu.com/&quot;&gt;百度语音&lt;/a&gt; - 支持全平台REST API, 离线在线融合模式，深度语义解析，场景识别定制，自定义上传语料、训练模型，基础服务永久免费。提供相应SDK和Demo应用。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://openspeech.sogou.com/Sogou/php/index.php&quot;&gt;搜狗语音云开放平台&lt;/a&gt; - 支持在线/离线语音识别，在线听歌识曲，离线语音合成等内容。提供相应平台SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xfyun.cn/&quot;&gt;讯飞开放平台&lt;/a&gt; - 支持语音听写/转写，在线/离线命令词识别，语音唤醒等内容，平台支持广泛，提供相应SDK。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-21&quot;&gt;杂志&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ZongweiBai/DoubanOpenDaily/blob/b87473b90911e687d291e847b133b5c4c4a700a3/app/src/main/java/com/monosky/daily/constant/APIConstData.java&quot;&gt;豆瓣一刻(非官方)&lt;/a&gt; - 支持获取指定日期文章列表，栏目总览，推荐作者，作者信息，作者更多文章信息，栏目文章列表及翻页，文章评论及热门评论列表。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Eyepetizer.md&quot;&gt;开眼(非官方)&lt;/a&gt; - 支持获取未登录状态下开眼精选、发现、关注信息。  #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/ONEv3.5.0~.md&quot;&gt;One一个(非官方)&lt;/a&gt; - 支持获取首页图片，文章，音乐及电影。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Tuchong.md&quot;&gt;图虫(非官方)&lt;/a&gt; - 支持获取图虫 app 所有信息。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Yixi.md&quot;&gt;一席(非官方)&lt;/a&gt; - 支持获取一席主页、演讲、讲者、枝桠等内容 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90&quot;&gt;知乎日报(非官方)&lt;/a&gt; - 支持获取界面启动图像，软件版本查询，最新消息，消息内容获取与离线下载，过往消息，新闻额外消息，新闻对应长/短评论查看，主题日报列表，主题日报内容，热门消息，栏目总览，栏目具体消息，新闻的推荐者，某个专栏之前的新闻，Editor的主页等。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/marktony/zhuanlan/wiki&quot;&gt;知乎专栏(非官方)&lt;/a&gt; - 支持获取指定专栏的信息，指定专栏的文章列表，指定的文章内容，评论列表，点赞信息。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-22&quot;&gt;综合&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.avatardata.cn/Docs&quot;&gt;阿凡达数据&lt;/a&gt; - 支持金融股票，充值认证，便民类，新闻文章，医药交通，科教文艺，创意数据，及时通讯等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.alidayu.com/&quot;&gt;阿里大于&lt;/a&gt; - 支持验证码，短信通知，语音通知，流量钱包充值，私密专线，群发助手等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apix.cn/&quot;&gt;APiX&lt;/a&gt; - 支持基础征信数据，信用分析服务，支付缴费接口等数据，部分免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://apistore.baidu.com/&quot;&gt;百度API STORE&lt;/a&gt; - 支持多种类型数据，部分免费，提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.haoservice.com/&quot;&gt;HaoService&lt;/a&gt; - 支持多种类型数据。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.juhe.cn/&quot;&gt;聚合数据&lt;/a&gt; - 支持多种类型数据，部分免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.datayes.com/&quot;&gt;通联数据&lt;/a&gt; - 提供金融类数据，支持免费试用。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/27/free-apis/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/27/free-apis/</guid>
        
        <category>Clover</category>
        
        <category>API</category>
        
        
      </item>
    
      <item>
        <title>CSS常用技巧</title>
        <description>&lt;h1 id=&quot;css&quot;&gt;CSS常用技巧&lt;/h1&gt;

&lt;h2 id=&quot;css-sprite-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CSS Sprite(雪碧图|精灵图)指什么? 有什么作用&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;雪碧图&lt;/code&gt; 就是将很多小图标合并成一张图，这样在加载图片时只需要走一次网络请求，然后用&lt;code class=&quot;highlighter-rouge&quot;&gt;background-position&lt;/code&gt;定位来显示部分图片&lt;/p&gt;

&lt;p&gt;作用：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;能够减少页面的请求数、降低图片占用的字节，以此来达到提升页面访问速度的目的&lt;/li&gt;
  &lt;li&gt;提高页面的加载速度；&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://riny.net/2014/compass-sprite/&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;imgcss&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img标签和CSS背景使用图片在使用场景上有何区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt;标签适用于经常改变的情况，会通过后台更新的数据,例如商品的图片，任务的照片信息；
&lt;code class=&quot;highlighter-rouge&quot;&gt;.css&lt;/code&gt;背景适用于不会经常改变的情况，例如 图标等；&lt;/p&gt;

&lt;h2 id=&quot;title--alt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title 和 alt属性分别有什么作用&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;用于显示额外提示文字，鼠标放在元素上面时会显示。
&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt;用于在无法加载图片时，替代图片显示,并且对SEO爬虫友好，可以提升网页的权重。&lt;/p&gt;

&lt;h2 id=&quot;background-urlabcpng-0-0-no-repeat&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background: url(abc.png) 0 0 no-repeat;这句话是什么意思&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
背景图片使用css同级目录下的abc.png 位置偏移 X轴0px,Y轴0px；不重复。&lt;/p&gt;

&lt;h2 id=&quot;background-size--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background-size有什么作用? 兼容性如何? 常用的值是?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CSS 的 background-size 属性能调整背景图片的大小，从而替代了用原始大小显示图片的默认行为
常用的值有以下几类：&lt;/p&gt;

&lt;p&gt;auto——原始图片大小；&lt;/p&gt;

&lt;p&gt;length——根据给定长度值调整背景图片大小；&lt;/p&gt;

&lt;p&gt;percentage——根据给定的百分比调整图片大小；&lt;/p&gt;

&lt;p&gt;contain——按比例调整背景图片，使得其图片宽高比自适应整个元素的背景区域的宽高比，因此假如背景图片过大，而背景区域的整体宽高比不能恰好包含背景图片的话，那么其背景区域会出现空白，这个值多用于响应式页面；&lt;/p&gt;

&lt;p&gt;cover——按比例调整背景图片，这个值的属性和contain正好相反，背景图会按照比例填充背景区域，如果背景图片过大且不能正好按照宽高比包含背景区域，那么背景图片就会被裁减显示不全；
&amp;gt; &lt;a href=&quot;http://www.webhek.com/background-size/&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/145951-71351468654e5c7b.png&quot; alt=&quot;兼容性&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;div&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何让一个div水平居中？如何让图片水平居中&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可对div(块级元素)设置margin：0 auto&lt;/p&gt;

&lt;p&gt;设置水平居中 对图片(行内元素)设置text-align:center&lt;/p&gt;

&lt;p&gt;设置水平居中 或者设置display:block，按照块级元素设置；&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何设置元素透明? 兼容性？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
div{ 
opacity:0.6;
filter:Alpah(opacity=60)/*IE8及之前版本*/
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/145951-923845199b1b1688.png&quot; alt=&quot;兼容性&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;opacity--rgba&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opacity 和 rgba都能设置透明，有什么区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;rgba只能作用于颜色或背景色；&lt;/p&gt;

&lt;p&gt;opacity作用于元素以及元素内部的所有元素的透明度；俩者的兼容性都需要IE8以上版本的支持&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/q285661571/article/details/7536490&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;推荐资源&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://csssprites.com/&quot;&gt;工具-图片在线合并3&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://tinypng.com/&quot;&gt;工具-图片在线压缩1&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://caniuse.com/&quot;&gt;工具-caniuse 在线查兼容&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-2&quot;&gt;代码&lt;/h2&gt;

&lt;h3 id=&quot;css-sprite-6--hover-&quot;&gt;使用CSS Sprite 把如下6张图标图片合并成一张图片，做出如下效果, 当 hover 时背景变色&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/b4316f7925ce12d39281a083299f52c449260b41.gif&quot; alt=&quot;gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;
```html&lt;/p&gt;
&lt;style&gt;
.demo{
width:100%;
height:200px;
border:1px solid #54e823;
background-color:#eee;
}
.spi{
	background: url(/img/result.png) 0 0 no-repeat;
    background-size: 20px;
    width: 60px;
    height: 20px;
   
    display: inline-block;
    line-height: 20px;
    padding-left: 20px;
    font-size: 13px;
    color:rgb(108,108,108);
}

.spi1{
background-position: 0px -1px;
}
.spi1:hover{
background-position: -1px -78px;
color:rgb(165,104,190);
}
.spi2{
background-position: 1px -26px;
}
.spi2:hover{
background-position: -2px -106px;
color:rgb(165,104,190);
}
.spi3{
background-position: 0px -53px;
}
.spi3:hover{
background-position: 2px -131px;
color:rgb(165,104,190);
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
    &lt;div class=&quot;spi spi1&quot;&gt;前进&lt;/div&gt;
    &lt;div class=&quot;spi spi2&quot;&gt;开始&lt;/div&gt;
    &lt;div class=&quot;spi spi3&quot;&gt;停止&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;
.demo{
width:100%;
height:200px;
background-color:#eee;
border:1px solid #54e823;
}
.spi{
	background: url(/img/result.png) 0 0 no-repeat;
    background-size: 20px;
    width: 60px;
    height: 20px;
   
    display: inline-block;
    line-height: 20px;
    padding-left: 20px;
    font-size: 13px;
    color:rgb(108,108,108);
}

.spi1{
background-position: 0px -1px;
}
.spi1:hover{
background-position: -1px -78px;
color:rgb(165,104,190);
}
.spi2{
background-position: 1px -26px;
}
.spi2:hover{
background-position: -2px -106px;
color:rgb(165,104,190);
}
.spi3{
background-position: 0px -53px;
}
.spi3:hover{
background-position: 2px -131px;
color:rgb(165,104,190);
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
    &lt;div class=&quot;spi spi1&quot;&gt;前进&lt;/div&gt;
    &lt;div class=&quot;spi spi2&quot;&gt;开始&lt;/div&gt;
    &lt;div class=&quot;spi spi3&quot;&gt;停止&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;iconfont----demo1--fortawesome-fontello1&quot;&gt;使用字体图标(如 iconfont, 查找-&amp;gt;加入购物车-&amp;gt;下载 demo1 、 fortawesome 或者fontello1)实现上例效果&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;
@font-face {font-family: &#39;clovericonfont&#39;;
    src: url(&#39;/iconfont/iconfont.eot&#39;); /* IE9*/
    src: url(&#39;/iconfont/iconfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */
    url(&#39;/iconfont/iconfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */
    url(&#39;/iconfont/iconfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/
    url(&#39;/iconfont/iconfont.svg#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */
}
.clovericonfont{
    font-family:&quot;clovericonfont&quot; !important;
    font-size:16px;font-style:normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
    padding-right:10px;

    }
.clovericonfont:hover{
    color:rgb(165,104,190);
    }
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe64e;前进&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe7fc;开始&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe601;停止&lt;/i&gt;
&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;
&lt;style&gt;
@font-face {font-family: &#39;clovericonfont&#39;;
    src: url(&#39;/iconfont/iconfont.eot&#39;); /* IE9*/
    src: url(&#39;/iconfont/iconfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */
    url(&#39;/iconfont/iconfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */
    url(&#39;/iconfont/iconfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/
    url(&#39;/iconfont/iconfont.svg#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */
}
.clovericonfont{
    font-family:&quot;clovericonfont&quot; !important;
    font-size:16px;font-style:normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
    padding-right:10px;

    }
.clovericonfont:hover{
    color:rgb(165,104,190);
    }
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe64e;前进&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe7fc;开始&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe601;停止&lt;/i&gt;
&lt;/div&gt;

&lt;h3 id=&quot;css-border&quot;&gt;使用css border实现如下三角形&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/1cc5ec2069c4cd2b4c7eac7e848d31bd1625602d_1_690x482.png&quot; alt=&quot;border三角形&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;

.demo1{
width:100%;
height:600px;
background-color:#eee;
border:1px solid #54e823;
}
.demo1 div{
margin-bottom:10px;
}
.sj{
width:0px;
height:0px;
border-top:blue 50px solid;
border-bottom:green 50px solid;
border-left:red 50px solid;
border-right:yellow 50px solid;
}
.sj1{
width:0px;
height:0px;
border-top:blue 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}
.sj2{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;

}
.sj3{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;

border-right:yellow 50px solid;
}
.sj4{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}

.sj5{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;
}
.sj6{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0)  50px solid;
}
&lt;/style&gt;

&lt;div class=&quot;demo1&quot;&gt;
&lt;div class=&quot;sj&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj1&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj2&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj3&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj4&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj5&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj6&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;

.demo1{
width:100%;
height:600px;
background-color:#eee;
border:1px solid #54e823;
}
.demo1 div{
margin-bottom:10px;
}
.sj{
width:0px;
height:0px;
border-top:blue 50px solid;
border-bottom:green 50px solid;
border-left:red 50px solid;
border-right:yellow 50px solid;
}
.sj1{
width:0px;
height:0px;
border-top:blue 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}
.sj2{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;

}
.sj3{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;

border-right:yellow 50px solid;
}
.sj4{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}

.sj5{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;
}
.sj6{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0)  50px solid;
}
&lt;/style&gt;

&lt;div class=&quot;demo1&quot;&gt;
&lt;div class=&quot;sj&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj1&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj2&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj3&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj4&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj5&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj6&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;tooltip--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tooltip 和 太极&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;
.contain-demo{
width:100%;
height:800px;
background-color:#eee;
border:1px solid #54e823;
padding:10px;
}
.contain-demo&gt;div{
margin-top:40px;
}

/*tootips*/
/*传统做法*/
/*重叠*/
.tips1{
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
}
.cls1{
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.cls2{
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
/*旋转*/
.tips2{
padding: 10px;
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.cls3{
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}

/*伪元素做法*/
.tips3{
padding: 10px;
   position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}
.tips3::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.tips3::after{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
.tips4{
padding: 10px;
    position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.tips4::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}
/*太极*/
.taiji {
    position: relative;
}

.yuan1{
	position: absolute;
    left: 0px;
    top: 0px;
    width: 100px;
    height: 200px;
    background-color: red;
    border-radius: 100px 0 0 100px;
}
.yuan2{
    width: 100px;
    position: absolute;
    left: 100px;
    height: 200px;
    background-color: black;
    border-radius: 0px 100px 100px 0px;
}
.yuan3{
	position: absolute;
    width: 100px;
    height: 100px;
    background: red;
    border-radius: 50px;
    left: 50px;
}
.yuan4{
	position: absolute;
    width: 100px;
    height: 100px;
    background: black;
    border-radius: 50px;
    left: 50px;
    top: 100px;
}
.yuan5{
    width: 50px;
    height: 50px;
    background: black;
    border-radius: 25px;
    position: absolute;
    top: 25px;
    left: 75px;
}
.yuan6{
    width: 50px;
    height: 50px;
    background: red;
    border-radius: 25px;
    position: absolute;
    top: 125px;
    left: 75px;
}


&lt;/style&gt;

&lt;div class=&quot;contain-demo&quot;&gt;
	&lt;div class=&quot;tips1&quot;&gt;
    	&lt;div class=&quot;cls1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;cls2&quot;&gt;&lt;/div&gt;
        传统做法重叠
    &lt;/div&gt;
	&lt;div class=&quot;tips2&quot;&gt;
    	&lt;div class=&quot;cls3&quot;&gt;&lt;/div&gt;
        传统做法旋转
    &lt;/div&gt;
    &lt;div class=&quot;tips3&quot;&gt;伪元素做法重叠&lt;/div&gt;
	&lt;div class=&quot;tips4&quot;&gt;伪元素做法旋转&lt;/div&gt;
    
    &lt;div class=&quot;taiji&quot;&gt;
    	&lt;div class=&quot;yuan1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan2&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan3&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan4&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan5&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan6&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;div&gt;
```

&lt;style&gt;
.contain-demo{
width:100%;
height:800px;
background-color:#eee;
border:1px solid #54e823;
padding:10px;
}
.contain-demo&gt;div{
margin-top:40px;
}

/*tootips*/
/*传统做法*/
/*重叠*/
.tips1{
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
}
.cls1{
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.cls2{
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
/*旋转*/
.tips2{
padding: 10px;
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.cls3{
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}

/*伪元素做法*/
.tips3{
padding: 10px;
   position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}
.tips3::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.tips3::after{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
.tips4{
padding: 10px;
    position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.tips4::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}
/*太极*/
.taiji {
    position: relative;
}

.yuan1{
	position: absolute;
    left: 0px;
    top: 0px;
    width: 100px;
    height: 200px;
    background-color: red;
    border-radius: 100px 0 0 100px;
}
.yuan2{
    width: 100px;
    position: absolute;
    left: 100px;
    height: 200px;
    background-color: black;
    border-radius: 0px 100px 100px 0px;
}
.yuan3{
	position: absolute;
    width: 100px;
    height: 100px;
    background: red;
    border-radius: 50px;
    left: 50px;
}
.yuan4{
	position: absolute;
    width: 100px;
    height: 100px;
    background: black;
    border-radius: 50px;
    left: 50px;
    top: 100px;
}
.yuan5{
    width: 50px;
    height: 50px;
    background: black;
    border-radius: 25px;
    position: absolute;
    top: 25px;
    left: 75px;
}
.yuan6{
    width: 50px;
    height: 50px;
    background: red;
    border-radius: 25px;
    position: absolute;
    top: 125px;
    left: 75px;
}


&lt;/style&gt;
`代码效果`
&lt;div class=&quot;contain-demo&quot;&gt;
	&lt;div class=&quot;tips1&quot;&gt;
    	&lt;div class=&quot;cls1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;cls2&quot;&gt;&lt;/div&gt;
        传统做法重叠
    &lt;/div&gt;
	&lt;div class=&quot;tips2&quot;&gt;
    	&lt;div class=&quot;cls3&quot;&gt;&lt;/div&gt;
        传统做法旋转
    &lt;/div&gt;
    &lt;div class=&quot;tips3&quot;&gt;伪元素做法重叠&lt;/div&gt;
	&lt;div class=&quot;tips4&quot;&gt;伪元素做法旋转&lt;/div&gt;
    
    &lt;div class=&quot;taiji&quot;&gt;
    	&lt;div class=&quot;yuan1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan2&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan3&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan4&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan5&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan6&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;div&gt;








&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/13/css-technique/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/13/css-technique/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        
      </item>
    
      <item>
        <title>CSS盒模型-1</title>
        <description>&lt;h1 id=&quot;css&quot;&gt;CSS盒模型&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/img/201503151.JPG&quot; alt=&quot;标准盒模型&quot; /&gt;
&lt;img src=&quot;/img/201503152.JPG&quot; alt=&quot;IE盒模型&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;区别&lt;/code&gt;：W3C标准中padding、border所占的空间不在width、height范围内，大家俗称的IE的盒模型width包括content尺寸＋padding＋border&lt;/p&gt;

&lt;p&gt;早期IE6、IE7使用“IE盒模型”，后来更新了一次，更新后的IE6、IE7使用标准盒模型IE8及以上版本使用标准盒模型&lt;/p&gt;

&lt;p&gt;没有DOCTYPE的情况下使用怪异模式，IE也使用“IE盒模型”&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;兼容方案&lt;/code&gt;：使用css3新样式box-sizing&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;content-box：w3c标准盒模型&lt;/li&gt;
  &lt;li&gt;border-box：“IE盒模型”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;盒模型包括哪些属性&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;盒模型包括：margin、border、padding、content&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt;：外边距。margin没有背景颜色，它是完全透明的。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;border&lt;/code&gt;：边框。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;：内边距。会受到框中填充的背景颜色影响。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt;：盒子的内容，显示文本和图像。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ie-w3c&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IE 盒模型和W3C盒模型有什么区别?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2406284-21cf8014fc9756bb.png&quot; alt=&quot;盒模型区别&quot; /&gt;
IE的盒模型与W3C盒模型的区别在与width的计算。&lt;/p&gt;

&lt;p&gt;W3C标准中width、height=content。不包含padding、border所占的空间；&lt;/p&gt;

&lt;p&gt;IE的盒模型width、height=content＋padding＋border。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;以下代码的作用？兼容性？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
*{
  box-sizing: border-box;
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
此代码作用是 &lt;code class=&quot;highlighter-rouge&quot;&gt;使用IE盒模型&lt;/code&gt; 渲染页面,即&lt;code class=&quot;highlighter-rouge&quot;&gt;width、height=content＋padding＋border&lt;/code&gt;
&lt;img src=&quot;/img/2406284-6a337b312349eb87.png&quot; alt=&quot;兼容性&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;代码&lt;/h2&gt;
&lt;p&gt;```html
&lt;a class=&quot;btn&quot; href=&quot;#&quot;&gt;确定&lt;/a&gt;
&lt;span class=&quot;btn&quot;&gt;取消&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;btn&quot;&gt;提交&lt;/div&gt;
&lt;p&gt;&lt;button class=&quot;btn&quot;&gt; 发送&lt;/button&gt;
```
&lt;img src=&quot;/img/49bf909c-9ad6-420c-be68-2f68d8f12d60.png&quot; alt=&quot;qq&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果：&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;
.demo{
width:100%;
height:200px;
border:1px solid #54e823;
background-color:#eee;
}
.demo .btn {
    width: 60px;
    height: 30px;
    background: #e2440c;
    display: inline-block;
    margin: 10px 2px;
    padding: 2px 2px;
    font-size: 18px;
    text-align: center;
    line-height: 25px;
    border-radius: 5px;
    color: #fff !important;
    cursor: pointer;
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
&lt;a class=&quot;btn&quot; href=&quot;#&quot;&gt;确定&lt;/a&gt;
&lt;span class=&quot;btn&quot;&gt;取消&lt;/span&gt;
&lt;div class=&quot;btn&quot;&gt;提交&lt;/div&gt;
&lt;button class=&quot;btn&quot;&gt; 发送&lt;/button&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/13/css-box-model/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/13/css-box-model/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        
      </item>
    
      <item>
        <title>Html基础-4</title>
        <description>&lt;h1 id=&quot;html-4&quot;&gt;HTML-4&lt;/h1&gt;

&lt;h2 id=&quot;html-css--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何理解 HTML CSS 语义化? 在平时写代码的过程中要注意哪些细节&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;语义化&lt;/code&gt;：让所用的html css标签具有实际意义.选择合适的标签、使用合理的代码结构，便于开发者阅读，同时让浏览器的爬虫和机器很好的解析&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意细节&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;尽可能少的使用无语义的标签div和span；&lt;/li&gt;
  &lt;li&gt;不要使用纯样式标签，如：&lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;font&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt;等，改用css设置；&lt;/li&gt;
  &lt;li&gt;需要强调的文本，可以包含在&lt;code class=&quot;highlighter-rouge&quot;&gt;strong&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;em&lt;/code&gt;标签中（浏览器预设样式，能用CSS指定就不用他们），&lt;code class=&quot;highlighter-rouge&quot;&gt;strong&lt;/code&gt;默认样式是加粗（不要用b），&lt;code class=&quot;highlighter-rouge&quot;&gt;em&lt;/code&gt;是斜体（不用i）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;forminput-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;form表单有什么作用？有哪些常用的input 标签，分别有什么作用？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;作用&lt;/code&gt;：创建一个表单，实现本页与其他页的数据交互；&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;常用input标签&lt;/code&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=text&lt;/code&gt;：输入用户名、电话号码等；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=password&lt;/code&gt;：密码输入框；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=file&lt;/code&gt;：文件目录输入平台；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=hidden&lt;/code&gt;：将无法明示的重要信息提交到下一页；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=checkbox&lt;/code&gt;：多选框；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=radio&lt;/code&gt;：单选框；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=image&lt;/code&gt;：提交式图片，如验证码；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=submit/reset&lt;/code&gt;：分别是“提交”“重置”按钮；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=button&lt;/code&gt;：windows风格按钮。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;post--get-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;post 和 get 方式的区别？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;get是用来从服务器获得数据；post向服务器上传数据；&lt;/li&gt;
  &lt;li&gt;get安全级别较post低；&lt;/li&gt;
  &lt;li&gt;get传输的数据量小，主要受URL长度限制；post可以传输大量数据；get最多提交1k数据，浏览器的限制。post理论上无限制，受服务器限制&lt;/li&gt;
  &lt;li&gt;Get将表单中数据的按照variable=value的形式，添加到action所指向的URL后面，并且两者使用“?”连接，而各个变量之间使用“&amp;amp;”连接；Post是将表单中的数据放在form的数据体中，按照变量和值相对应的方式，传递到action所指向URL;&lt;/li&gt;
  &lt;li&gt;get是form的默认方式。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;inputname-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;在input里，name 有什么作用？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;用途1: 作为可与服务器交互数据的HTML元素的服务器端的标示，比如input、select、textarea、和button等。我们可以在服务器端根据其Name通过Request.Params取得元素提交的值。&lt;/li&gt;
  &lt;li&gt;用途2：HTML元素Input type=’radio’分组，我们知道radio button控件在同一个分组类，check操作是mutex的，同一时间只能选中一个radio，这个分组就是根据相同的Name属性来实现的。&lt;/li&gt;
  &lt;li&gt;用途3：建立页面中的锚点，我们知道&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;URL&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;是获得一个页面超级链接，如果不用href属性，而改用Name，如：，我们就获得了一个页面锚点。&lt;/li&gt;
  &lt;li&gt;用途4: 作为对象的Identity，如Applet、Object、Embed等元素。比如在Applet对象实例中，我们将使用其Name来引用该对象。&lt;/li&gt;
  &lt;li&gt;用途5: 在IMG元素和MAP元素之间关联的时候，如果要定义IMG的热点区域，需要使用其属性usemap，使usemap=”#name”(被关联的MAP元素的Name)。&lt;/li&gt;
  &lt;li&gt;用途6: 某些特定元素的属性，如attribute，meta和param。例如为Object定义参数&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;PARAM NAME = &quot;appletParameter&quot; VALUE = &quot;value&quot;&amp;gt;或Meta中&amp;lt;META NAME = &quot;Author&quot; CONTENT = &quot;Dave Raggett&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;buttonbuttona-classbtn-hrefainput-typesubmit-value-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;提交&amp;lt;/button&amp;gt;、&amp;lt;a class=&quot;btn&quot; href=&quot;#&quot;&amp;gt;提交&amp;lt;/a&amp;gt;、&amp;lt;input type=&quot;submit&quot; value=&quot;提交&quot;&amp;gt; 三者有什么区别？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;提交&amp;lt;/button&amp;gt;&lt;/code&gt;：创建一个普通按钮，需要绑定事件才可以用以提交数据；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a class=&quot;btn&quot; href=&quot;#&quot;&amp;gt;提交&amp;lt;/a&amp;gt;&lt;/code&gt;：一个链接按钮；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;input type=&quot;submit&quot; value=&quot;提交&quot;&amp;gt;&lt;/code&gt;：提交按钮，提交表单&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;radio--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;radio 如何 分组?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;name的值设为一样,就是一组。&lt;/p&gt;

&lt;h2 id=&quot;placeholder-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;placeholder 属性有什么作用?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
提供可描述输入字段预期值的提示信息&lt;/p&gt;

&lt;h2 id=&quot;typehidden-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=hidden隐藏域有什么作用? 举例说明&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;隐藏域在页面中对于用户是不可见的，在表单中插入隐藏域的目的在于收集或发送信息，以利于被处理表单的程序所使用。浏览者单击发送按钮发送表单的时候，隐藏域的信息也被一起发送到服务器。&lt;/li&gt;
  &lt;li&gt;有些时候我们要给用户一信息，让他在提交表单时提交上来以确定用户身份，如sessionkey，等等．当然这些东西也能用cookie实现，但使用隐藏域就简单的多了．而且不会有浏览器不支持，用户禁用cookie的烦恼。&lt;/li&gt;
  &lt;li&gt;有些时候一个form里有多个提交按钮，怎样使程序能够分清楚到底用户是按那一个按钮提交上来的呢？我们就可以写一个隐藏域，然后在每一个按钮处加上&lt;code class=&quot;highlighter-rouge&quot;&gt;onclick=&quot;document.form.command.value=&quot;xx&quot;&quot;&lt;/code&gt;然后我们接到数据后先检查command的值就会知道用户是按的那个按钮提交上来的。&lt;/li&gt;
  &lt;li&gt;有时候一个网页中有多个form，我们知道多个form是不能同时提交的，但有时这些form确实相互作用，我们就可以在form中添加隐藏域来使它们联系起来。&lt;/li&gt;
  &lt;li&gt;javascript不支持全局变量，但有时我们必须用全局变量，我们就可以把值先存在隐藏域里，它的值就不会丢失了&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 09 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/09/html-4/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/09/html-4/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        
      </item>
    
      <item>
        <title>CSS选择器</title>
        <description>&lt;h1 id=&quot;css&quot;&gt;CSS选择器&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;选择器类型&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;基础选择器&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;选择器&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;*&lt;/td&gt;
          &lt;td&gt;通用元素选择器，匹配页面任何元素（这也就决定了我们很少使用）&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;#id&lt;/td&gt;
          &lt;td&gt;id选择器，匹配特定id的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;.class&lt;/td&gt;
          &lt;td&gt;类选择器，匹配class包含(不是等于)特定类的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;element&lt;/td&gt;
          &lt;td&gt;标签选择器&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;组合选择器&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;选择器&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;E,F&lt;/td&gt;
          &lt;td&gt;多元素选择器，用,分隔，同时匹配元素E或元素F&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E F&lt;/td&gt;
          &lt;td&gt;后代选择器，用空格分隔，匹配E元素所有的后代（不只是子元素、子元素向下递归）元素F&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E&amp;gt;F&lt;/td&gt;
          &lt;td&gt;子元素选择器，用&amp;gt;分隔，匹配E元素的所有直接子元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E+F&lt;/td&gt;
          &lt;td&gt;直接相邻选择器，匹配E元素之后的相邻的同级元素F&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E~F&lt;/td&gt;
          &lt;td&gt;普通相邻选择器（弟弟选择器），匹配E元素之后的同级元素F（无论直接相邻与否）&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;.class1.class2&lt;/td&gt;
          &lt;td&gt;id和class选择器和选择器连写的时候中间没有分隔符，. 和 # 本身充当分隔符的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;element#id&lt;/td&gt;
          &lt;td&gt;id和class选择器和选择器连写的时候中间没有分隔符，. 和 # 本身充当分隔符的元素&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;ul&gt;
      &lt;li&gt;属性选择器&lt;/li&gt;
    &lt;/ul&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;选择器&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr]&lt;/td&gt;
          &lt;td&gt;匹配所有具有属性attr的元素，div[id]就能取到所有有id属性的div&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr = value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr值为value的元素，div[id=test],匹配id=test的div&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr ~= value]&lt;/td&gt;
          &lt;td&gt;匹配所有属性attr具有多个空格分隔、其中一个值等于value的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr ^= value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr的值以value开头的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr $= value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr的值以value结尾的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr *= value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr的值包含value的元素&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;伪类选择器&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;往下看&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;伪元素选择器&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选择器&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;E::first-line&lt;/td&gt;
      &lt;td&gt;匹配E元素内容的第一行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::first-letter&lt;/td&gt;
      &lt;td&gt;匹配E元素内容的第一个字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::before&lt;/td&gt;
      &lt;td&gt;在E元素之前插入生成的内容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::after&lt;/td&gt;
      &lt;td&gt;在E元素之后插入生成的内容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;css-1&quot;&gt;CSS优先级&lt;/h2&gt;

&lt;p&gt;从高到低分别是&lt;/p&gt;

&lt;p&gt;在属性后面使用 !important 会覆盖页面内任何位置定义的元素样式&lt;/p&gt;

&lt;p&gt;作为style属性写在元素标签上的内联样式&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;id选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;类选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;伪类选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;属性选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;标签选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通配符选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;浏览器自定义&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样就可以看出来上面例子肯定使用id选择器的定义了，还有一种复杂的情况，CSS规则由多个选择器组成&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
#test p.class1 {...}
#test .class1.class2 {...}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这种场景该使用那条规则呢？&lt;/p&gt;

&lt;p&gt;这时候我们可以做个简单的加法运算，id选择器的权值为1000，class选择器为100，标签选择器为10，做一下运算（当然只是为了形象这么说，一万个class选择器加起来也不如一个id选择器优先级高）&lt;/p&gt;

&lt;p&gt;这样我们就能得知第二条的规则优先级高一些，但是还有一种情况&lt;/p&gt;

&lt;p&gt;``` html
#parent p.class1
div #child.class1&lt;/p&gt;

&lt;div id=&quot;parent&quot;&gt;
    &lt;p id=&quot;child&quot; class=&quot;class1&quot;&gt;
        Text
    &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;按照我们刚才的方法计算，两个的权值时相同的，这时候应该用那条规则呢？简单来说一句话谁更具体用谁，也就是权值高的选择器作用的越具体优先级越高&lt;/p&gt;

&lt;p&gt;我们可以看到两个选择器作用的元素都是p标签，id选择器权值最高，第一条规则作用在了父元素上，第二条规则直接作用在了p标签本身上，所以我们认为第二条选择器的优先级高&lt;/p&gt;

&lt;p&gt;如果两个选择器规权值就是一样，我们改怎么判断呢？ 后面的覆盖前面的！&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
div {color: #333;}
....
div {color: #666;}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这样&lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;文案的颜色明显会是&lt;code class=&quot;highlighter-rouge&quot;&gt;#666&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;总而言之判断CSS选择器规则优先级很简单，每个选择器本身有优先级，越具体优先级越高&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;列出你知道的伪类选择器&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选择器&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;E:first-child&lt;/td&gt;
      &lt;td&gt;匹配元素E的第一个子元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:link&lt;/td&gt;
      &lt;td&gt;匹配所有未被点击的链接&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:visited&lt;/td&gt;
      &lt;td&gt;匹配所有已被点击的链接&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:active&lt;/td&gt;
      &lt;td&gt;匹配鼠标已经其上按下、还没有释放的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:hover&lt;/td&gt;
      &lt;td&gt;匹配鼠标悬停其上的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:focus&lt;/td&gt;
      &lt;td&gt;匹配获得当前焦点的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:lang(c)&lt;/td&gt;
      &lt;td&gt;匹配lang属性等于c的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:enabled&lt;/td&gt;
      &lt;td&gt;匹配表单中可用的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:disabled&lt;/td&gt;
      &lt;td&gt;匹配表单中禁用的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:checked&lt;/td&gt;
      &lt;td&gt;匹配表单中被选中的radio或checkbox元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::selection&lt;/td&gt;
      &lt;td&gt;匹配用户当前选中的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:root&lt;/td&gt;
      &lt;td&gt;匹配文档的根元素，对于HTML文档，就是HTML元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-child(n)&lt;/td&gt;
      &lt;td&gt;匹配其父元素的第n个子元素，第一个编号为1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-last-child(n)&lt;/td&gt;
      &lt;td&gt;匹配其父元素的倒数第n个子元素，第一个编号为1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-of-type(n)&lt;/td&gt;
      &lt;td&gt;与:nth-child()作用类似，但是仅匹配使用同种标签的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-last-of-type(n)&lt;/td&gt;
      &lt;td&gt;与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:last-child&lt;/td&gt;
      &lt;td&gt;匹配父元素的最后一个子元素，等同于:nth-last-child(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:first-of-type&lt;/td&gt;
      &lt;td&gt;匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:last-of-type&lt;/td&gt;
      &lt;td&gt;匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:only-child&lt;/td&gt;
      &lt;td&gt;匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:only-of-type&lt;/td&gt;
      &lt;td&gt;匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:empty&lt;/td&gt;
      &lt;td&gt;匹配一个不包含任何子元素的元素，文本节点也被看作子元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:not(selector)&lt;/td&gt;
      &lt;td&gt;匹配不符合当前选择器的任何元素&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;==n的取值==&lt;/p&gt;

&lt;p&gt;1，2，3，4，5&lt;/p&gt;

&lt;p&gt;2n+1, 2n, 4n-1&lt;/p&gt;

&lt;p&gt;odd, even&lt;/p&gt;

&lt;h2 id=&quot;first-childfirst-of-type&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:first-child和:first-of-type的作用和区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:first-child&lt;/code&gt; 匹配的是某父元素的第一个子元素，可以说是结构上的第一个子元素。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:first-of-type&lt;/code&gt; 匹配的是该类型的第一个，类型是指什么呢，就是冒号前面匹配到的东西，比如 p:first-of-type，就是指所有p元素中的第一个。这里不再限制是第一个子元素了，只要是该类型元素的第一个就行了，当然这些元素的范围都是属于同一级的，也就是同辈的。&lt;/p&gt;

&lt;p&gt;同样类型的选择器 &lt;code class=&quot;highlighter-rouge&quot;&gt;:last-child &lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;:last-of-type&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child(n)&lt;/code&gt;  和  &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-of-type(n)&lt;/code&gt; 也可以这样去理解。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;运行如下代码，解析下输出样式的原因&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;
.item1:first-child{
  color: red;
}
.item1:first-of-type{
  background: blue;
}
&lt;/style&gt;

&lt;div class=&quot;ct&quot;&gt;
   &lt;p class=&quot;item1&quot;&gt;aa&lt;/p&gt;
   &lt;h3 class=&quot;item1&quot;&gt;bb&lt;/h3&gt;
   &lt;h3 class=&quot;item1&quot;&gt;ccc&lt;/h3&gt;
 &lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/QQ20170309-144057@2x.png&quot; alt=&quot;展示效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.item1:first-child&lt;/code&gt;匹配到class是item1的第一个子元素，所以 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p class=&quot;item1&quot;&amp;gt;aa&amp;lt;/p&amp;gt;&lt;/code&gt; 是第一个子元素 展示位文字红色
&lt;code class=&quot;highlighter-rouge&quot;&gt;.item1:first-of-type&lt;/code&gt; 匹配到class是item1的第一种标签类型，所以 ` &amp;lt;p class=&quot;item1&quot;&amp;gt;aa&amp;lt;/p&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; 为第一个&lt;/code&gt;p&lt;code class=&quot;highlighter-rouge&quot;&gt;标签，&lt;/code&gt;&amp;lt;h3 class=&quot;item1&quot;&amp;gt;bb&amp;lt;/h3&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;为第一个&lt;/code&gt;h3`标签，所以 这两个背景色展示位蓝色。&lt;/p&gt;

&lt;h2 id=&quot;text-align-center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-align: center的作用是什么，作用在什么元素上？能让什么元素水平居中&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;作用是让元素内部 行内元素、display为（table-cell、inline和inline-block）的块级元素水平居中，作用在块级元素上。&lt;/p&gt;

</description>
        <pubDate>Thu, 09 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/09/css-selector/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/09/css-selector/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        
      </item>
    
  </channel>
</rss>
