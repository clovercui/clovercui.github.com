<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clover Blog</title>
    <description>克洛弗，Web &amp; Mobile Lover，Front-End Engineer，UX Designer，PHP&amp;JAVA Engineer | 这里是 @Clover克洛弗 的个人博客，与你一起发现更大的世界。</description>
    <link>http://clover.htmhub.com/</link>
    <atom:link href="http://clover.htmhub.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 28 Mar 2017 15:12:37 +0800</pubDate>
    <lastBuildDate>Tue, 28 Mar 2017 15:12:37 +0800</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      <item>
        <title>浮动-定位</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;定位与浮动&lt;/h1&gt;

&lt;h3 id=&quot;section-1&quot;&gt;定位基本属性&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;值&lt;/th&gt;
      &lt;th&gt;属性&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;inherit&lt;/td&gt;
      &lt;td&gt;规定应该从父元素继承 position 属性的值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;static&lt;/td&gt;
      &lt;td&gt;默认值,没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;relative&lt;/td&gt;
      &lt;td&gt;生成相对定位的元素，相对于元素本身正常位置进行定位,因此，left:20px 会向元素的 left 位置添加20px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;absolute&lt;/td&gt;
      &lt;td&gt;生成绝对定位的元素，相对于static定位以外的第一个祖先元素（offset parent）进行定位,元素的位置通过 left, top, right 以及 bottom 属性进行规定&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fixed&lt;/td&gt;
      &lt;td&gt;生成绝对定位的元素，相对于浏览器窗口进行定位。元素的位置通过 left, top, right 以及 bottom 属性进行规定&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sticky&lt;/td&gt;
      &lt;td&gt;CSS3新属性，表现类似position:relative和position:fixed的合体，在目标区域在屏幕中可见时，它的行为就像position:relative; 而当页面滚动超出目标区域时，它的表现就像position:fixed，它会固定在目标位置&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;section-2&quot;&gt;普通流与相对定位&lt;/h3&gt;

&lt;p&gt;CSS有三种基本的定位机制：&lt;code class=&quot;highlighter-rouge&quot;&gt;普通流&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;相对定位&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;绝对定位&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;普通流是默认定位方式，在普通流中元素框的位置由元素在html中的位置决定，元素position属性为static或继承来的static时就会按照普通流定位，这也是我们最常见的方式&lt;/p&gt;

&lt;p&gt;相对定位比较简单，对应position属性的relative值，如果对一个元素进行相对定位，它将出现在他所在的位置上，然后可以通过设置垂直或水平位置，让这个元素相对于它自己移动，在使用相对定位时，无论元素是否移动，元素在文档流中占据原来空间，只是表现出来的位置会改变&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;普通流&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
    &amp;lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&gt;
        &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
        &lt;/div&gt;
        &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
        &lt;/div&gt;
        &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
        &lt;/div&gt;
	&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;相对定位&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:relative; top:20px; left:20px;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:relative; top:20px; left:20px;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;上面例子可以看出，对绿色div进行相对定位，分别右移，下移20px后第二个红色div位置并没有相应变化，而是在原位置，绿色div遮挡住了部分红色div&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;绝对定位与固定定位&lt;/h3&gt;

&lt;p&gt;相对定位可以看作特殊的普通流定位，元素位置是相对于它在普通流中位置发生变化，而绝对定位使元素的位置与文档流无关，也不占据文档流空间，普通流中的元素布局就像绝对定位元素不存在一样&lt;/p&gt;

&lt;p&gt;绝对定位的元素的位置是相对于距离最近的非static祖先元素位置决定的。如果元素没有已定位的祖先元素，那么他的位置就相对于初始包含块儿（body或html神马的）元素。&lt;/p&gt;

&lt;p&gt;因为绝对定位与文档流无关，所以绝对定位的元素可以覆盖页面上的其他元素，可以通过z-index属性控制叠放顺序，z-index越高，元素位置越靠上。&lt;/p&gt;

&lt;p&gt;还是刚才的例子，稍微改动一下，让绿色div绝对定位，为了清晰显示，第二个红色div改为黄色&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 1px #0e0; width:200px; position:relative;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:absolute; top:20px; left:20px;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 1px #0e0; width:200px; position:relative;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:absolute; top:20px; left:20px;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;这时可以看出，绿色div是相对于父元素，也就是绿框div进行的移位，而红色和黄色div进行布局时就像绿色div不存在一样&lt;/p&gt;

&lt;p&gt;最后要说的就是fixed属性了，应用fixed也叫固定定位，固定定位是绝对定位的一种，固定定位的元素也不包含在普通文档流中，差异是固定元素的包含块儿是视口（viewport），经常见一些页面的如人人网看在线好友那个模块总在窗口右下角，估计用的是类似技术&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 1px #0e0; width:200px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; position:fixed; bottom:20px; left:20px;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/201210131402313535.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/img/201210131402351710.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可见红色和黄色div布局没有受到绿色div影响，而无论是页面纵向滚动条在页面顶端还是底端，绿色div总是在视口左下角&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;浮动基本概念&lt;/h3&gt;

&lt;p&gt;首先介绍一些浮动模型的基本知识：浮动模型也是一种可视化格式模型，浮动的框可以左右移动（根据float属性值而定），直到它的外边缘碰到包含框或者另一个浮动元素的框的边缘。浮动元素不在文档的普通流中，文档的普通流中的元素表现的就像浮动元素不存在一样.《CSS Mastery》里作者画了几个图非常有意思，可以帮助我们理解浮动的表现，我简单的画几个&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;正常&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;红向右浮动&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red; float:right;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red; float:right;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; &quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;红框左移,覆盖绿框&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;都向左浮动,父元素宽度为0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;

&lt;p&gt;如果包含块儿太窄无法容纳水平排列的三个浮动元素,那么其它浮动块儿向下移动,直到有足够的空间,如果浮动元素的高度不同,那么向下移动的时候可能被卡住&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;没有足够水平空间&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;卡住了&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 120px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:250px;&quot;&gt;
    &lt;div style=&quot;height: 120px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;行框&lt;/h3&gt;

&lt;p&gt;前面指出浮动会让元素脱离文档流,不影响不浮动元素.实际上并不完全如此,如果浮动的元素后面有一个文档流中元素,那么这个元素的框会表现的像浮动元素不存在,但是框的文本内容会受到浮动元素的影响,会移动以留出空间.用术语说就是浮动元素旁边的行框被缩短,从而给浮动元素流出空间,因而行框围绕浮动框&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;不浮动&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 50px; width: 50px; background-color: Red;&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
       11111111111
       11111111111
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&gt;
    &lt;div style=&quot;height: 50px; width: 50px; background-color: Red;&quot;&gt;&lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
       11111111111
       11111111111
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;浮动&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&amp;gt;
       abc def ghi
       abc def ghi
       abc def ghi
    &amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&gt;
    &lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&gt;&lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;&quot;&gt;
       abc def ghi
       abc def ghi
       abc def ghi
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;可以看出浮动后虽然绿色div布局不受浮动影响，正常布局，但是文字部分却被挤到了红色浮动div外边。要想阻止行框围绕在浮动元素外边，可以使用clear属性，属性的left，right，both，none表示框的哪些边不挨着浮动框&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
    &amp;lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green; clear:both;&quot;&amp;gt;
           11111111111
           11111111111
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width: 250px;&quot;&gt;
    &lt;div style=&quot;height: 50px; width: 50px; background-color: Red; float:left;&quot;&gt;&lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green; clear:both;&quot;&gt;
       11111111111
       11111111111
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;清理浮动&lt;/h3&gt;

&lt;p&gt;对元素清理实际上为前面的浮动元素留出了垂直空间,这样可以解决我们之前的一个问题，看前面的图片的时候我们发现div内的所有元素浮动的话就会不占据文档空间，这样父元素，高度为0，可能很多效果也不见了&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;都向左浮动,父元素宽度为0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
        &amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;p&gt;如果我们想让父元素在视觉上包围浮动元素可以像下面这样处理,在最后添加一个空div，对它清理&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
	&amp;lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div style=&quot;clear:both;&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;div style=&quot;border: solid 5px #0e0; width:300px;&quot;&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Red;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Green;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;height: 100px; width: 100px; background-color: Yellow;  float:left;&quot;&gt;
    &lt;/div&gt;
    &lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;当然这样做有很多缺点，有些javascript也可以做出类似效果，这里不细说，值得注意的是应用值为hidden或auto的overflow属性会有一个副作用：自动清理包含的任何浮动元素，所以说当页面出现相关问题时，可以看看是不是这个属性搞的鬼&lt;/p&gt;

&lt;h3 id=&quot;bfc&quot;&gt;BFC清理浮动&lt;/h3&gt;

&lt;p&gt;BFC的全称是 &lt;a href=&quot;http://www.w3.org/TR/CSS21/visuren.html#block-formatting&quot;&gt;Block Format Content&lt;/a&gt;，有三个特性&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;BFC会阻止垂直外边距（margin-top、margin-bottom）折叠&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;按照BFC的定义，只有同属于一个BFC时，两个元素才有可能发生垂直Margin的重叠，这个包括相邻元素，嵌套元素，只要他们之间没有阻挡(例如边框，非空内容，padding等)就会发生margin重叠。 因此要解决margin重叠问题，只要让它们不在同一个BFC就行了，但是对于两个相邻元素来说，意义不大，没有必要给它们加个外壳，但是对于嵌套元素来说就很有必要了，只要把父元素设为BFC就可以了。这样子元素的margin就不会和父元素的margin发生重叠&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;BFC不会重叠浮动元素&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;BFC可以包含浮动&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以利用BFC的第三条特性来“清浮动”，这里其实说清浮动已经不再合适，应该说包含浮动。也就是说只要父容器形成BFC就可以，简单看看如何形成BFC&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;float为 left、right&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;overflow为 hidden、auto、scroll&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;display为 table-cell、table-caption、inline-block&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;position为 absolute、fixed&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以对父容器添加这些属性来形成BFC达到“清浮动”效果&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;局限性&lt;/h3&gt;

&lt;p&gt;上面提到使用BFC使用float的时候会使父容器长度缩短，而且还有个重要缺陷——父容器float解决了其塌陷问题，那么父容器的父容器怎么办？难道要全部使用folat吗（确实有这种布局方式倒是）。BFC的几种方式都有各自的问题，overflow属性会影响滚动条和绝对定位的元素；position会改变元素的定位方式，这是我们不希望的，display这几种方式依然没有解决低版本IE问题。。。&lt;/p&gt;

&lt;h4 id=&quot;haslayout&quot;&gt;hasLayout&lt;/h4&gt;

&lt;p&gt;我们知道在IE6、7内有个hasLayout的概念，很多bug正是由hasLayout导致的&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;当元素的hasLayout属性值为false的时候，元素的尺寸和位置由最近拥有布局的祖先元素控制&lt;/li&gt;
  &lt;li&gt;当元素的hasLayout属性值为true的时候会达到和BFC类似的效果，元素负责本身及其子元素的尺寸设置和定位&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以利用这点儿在IE6、7下完成清浮动，先看看怎么使元素hasLayout为true&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;position: absolute&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;float: left、right&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;display: inline-block&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;width: 除 “auto” 外的任意值&lt;/li&gt;
  &lt;li&gt;height: 除 “auto” 外的任意值&lt;/li&gt;
  &lt;li&gt;zoom: 除 “normal” 外的任意值&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;writing-mode: tb-rl&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;在IE7中使用overflow: hidden、scroll、auto 也可以使hasLayout为true&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-8&quot;&gt;通用的清理浮动方案&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
    .clearfix{
        *zoom:1;
    }
    .clearfix:after{
        content:&quot;.&quot;;
        display:block;
        height:0;
        visibility:hidden;
        clear:left;
    }
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
	.clearfix{
    	*zoom:1;
    }
    .clearfix:after{
        content:&quot;&quot;;
        display:table;
        clear:both;
    }
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;两种方案&lt;/h3&gt;

&lt;p&gt;虽然我们得出了一种浏览器兼容的靠谱解决方案，但这并不代表我们一定得用这种方式，很多时候我们的父容器本身需要position：absolute等形成了BFC的时候我们可以直接利用这些属性了，大家要掌握原理，活学活用。总而言之清理浮动两种方式&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;利用 clear属性，清除浮动&lt;/li&gt;
  &lt;li&gt;使父容器形成BFC&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-10&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;文档流的概念指什么？有哪种方式可以让元素脱离文档流?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;文档流&lt;/code&gt;是文档在排列的时候所占据的位置，将窗体自上而下分成一行行, 并在每行中按从左至右的顺序排放元素,即为文档流&lt;/p&gt;

&lt;p&gt;脱离文档流即表示元素不在应该的那个位置了。&lt;/p&gt;

&lt;p&gt;让元素脱离文档流的方式有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;float——浮动
&lt;code class=&quot;highlighter-rouge&quot;&gt;float: left;或float: right;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;position——定位&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;绝对定位 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: absolute;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;绝对定位的元素脱离文档流，在原位置上方直至设置了定位值，以最近已定位的祖先元素内边框为参照。&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;固定定位 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: fixed;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;固定定位的元素脱离文档流，在原位置上方直至设置了定位值，参照物为浏览器可视区&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-11&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;有几种定位方式，分别是如何实现定位的，使用场景如何？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;有四种定位方式&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;static 静态定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其为文档的默认定位方式，不会脱离文档流，其会忽略top、 right、 bottom、 left、 z-index 等声明；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;absolute 绝对定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用该定位方式其会脱离文档流，其会相对于static定位以外的第一个父元素进行定位，其支持top、 right、 bottom、 left、 z-index 等声明；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;relative 相对定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其会相对其正常位置进行定位，不会脱离文档流；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;fixed 固定定位方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;相对窗口进行定位，其不会随着页面翻动而移动，其完全脱离文档流；&lt;/p&gt;

&lt;h2 id=&quot;absolute-relative-fixed-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;absolute, relative, fixed 偏移的参考点分别是什么&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;absolute偏移 参考点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;a、若指定了left/right、top/bottom，其会参考除static以外的第一个父元素的原始坐标点，若父元素没有定义定位方式其会往祖元素找里，若还没找到则继续往上找，直至找到为止，若均未找到，则会参考浏览器的左上角原点坐标；
另：当存在嵌套关系时，比如一个div里包裹了一个absolute元素，且该div定位方式已经确定，则absolute元素的参考点为div里内容区的左上角为参考点&lt;/p&gt;

&lt;p&gt;```html
	&amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang=&quot;en&quot;&amp;gt;
    &amp;lt;head&amp;gt;
      &lt;meta charset=&quot;UTF-8&quot; /&gt;
      &lt;title&gt;Document&lt;/title&gt;
      &lt;style&gt;
      *{
          margin: 0px;
          padding: 0px;
          box-sizing:border-box;&lt;/style&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  }
  .static-div{
      height: 200px;
      border: 10px solid red;
      background-color: pink;
  }
  .fixed-div{
      height: 40px;
      border: 10px solid green;
      background-color: #ccc;
      position: fixed;        
      top: 250px;
      left: 100px;
  }
  .absolute-div{
      height: 200px;
      border: 20px solid blue;
      position: absolute;
      top: 150px;
      left: 300px;
  }
  .relative-div{
      height: 200px;
      width: 400px;
      border: 10px solid yellow;
      background-color: #ccc;
      position: relative;
      top:100px;
      left:250px;
  }

      &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;fixed-div&quot;&amp;gt;我是固定定位的块级元素div&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;relative-div&quot;&amp;gt;我是相对定位的块级元素div
  &amp;lt;div class=&quot;absolute-div&quot;&amp;gt;我是绝对定位的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;

&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上述代码中 absolute-div定义了position: top: 150px; left: 300px;&lt;/p&gt;

&lt;p&gt;absolute-div坐标如下：（560px，660px）
&lt;img src=&quot;/img/2166980-c2eea1be397dd074.png&quot; alt=&quot;&quot; /&gt;
而relative-div坐标如下：（250px，500px）
&lt;img src=&quot;/img/2166980-5d5b362982cb6639.png&quot; alt=&quot;&quot; /&gt;
两者横坐标相减得 310px；纵坐标相减得160px；而relative-div的border宽度为10px，因此此时absolute-div的参考点为relative-div的内容区左上角；（将relative-div的border宽度变更为20px后，还是可以看出absolute-div的参考点为relative-div的内容区左上角）&lt;/p&gt;

&lt;p&gt;b.若未指定left/right、top/bottom，但指定了其父元素的定位方式，则其会视内容区的元素而定进行摆放；如上面代码将absolute-div的position: top: 150px; left: 300px; 注释掉后会形成这样的情况
&lt;img src=&quot;/img/2166980-c6affe6430cd4fad.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;c、若未指定left/right、top/bottom，且其父元素及父元素以上均未指定定位方式，其会脱离文档流，但其会定位在后出现的文档流的原始坐标上；如下述代码中：&lt;/p&gt;

&lt;p&gt;```html
	&amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang=&quot;en&quot;&amp;gt;
    &amp;lt;head&amp;gt;
        &lt;meta charset=&quot;UTF-8&quot; /&gt;
        &lt;title&gt;Document&lt;/title&gt;
        &lt;style&gt;
        *{
            margin: 0px;
            padding: 0px;
            box-sizing:border-box;&lt;/style&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    }
    .static-div{
        height: 200px;
        border: 10px solid red;
        background-color: pink;
    }
    .fixed-div{
        height: 40px;
        border: 10px solid green;
        background-color: #ccc;
        position: fixed;        
        top: 250px;
        left: 100px;
    }
    .absolute-div{
        height: 200px;
        border: 20px solid blue;
        position: absolute;


    }
    .relative-div{
        height: 200px;
        width: 400px;
        border: 10px solid yellow;
        background-color: #ccc;
        position: relative;
        top:100px;
        left:250px;
    }

    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;fixed-div&quot;&amp;gt;我是固定定位的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;relative-div&quot;&amp;gt;我是相对定位的块级元素div &amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;absolute-div&quot;&amp;gt;我是绝对定位的块级元素div&amp;lt;/div&amp;gt; 
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt;
 &amp;lt;div class=&quot;static-div&quot;&amp;gt;我是正常的块级元素div&amp;lt;/div&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/2166980-68fccea30fca83e3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;relative偏移参考点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其参考点为其本身的文档流&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;fixed 偏移参考点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;浏览器窗口本身，与页面无关，即滚动页面其不会随之移动，而是固定在窗口的指定位置上&lt;/p&gt;

&lt;h2 id=&quot;z-index--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;z-index 有什么作用? 如何使用?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;z-index定义了z方向（与显示屏垂直的方向，值越大者堆叠显示在前面）的级别从而使元素有序堆叠显示。&lt;/p&gt;

&lt;p&gt;ps:该属性值只对已定位的元素有效。&lt;/p&gt;

&lt;p&gt;堆叠顺序&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不对元素设position时，文档流后面的元素覆盖前面的元素。&lt;/li&gt;
  &lt;li&gt;将元素设置的position设置为relative ，absolute 或者 fixed，元素会覆盖没有设置 position 属性或者属性值为 static 的元素。&lt;/li&gt;
  &lt;li&gt;一般情况下z-index值越大者在前面。&lt;/li&gt;
  &lt;li&gt;子元素继承元素的堆叠关系，不论子元素的z-index值比父元素的兄弟元素大或者小，都继承父元素与其兄弟元素的堆叠关系。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;positionrelativemargin&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;position:relative和负margin都可以使元素位置发生偏移?二者有什么区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;区别是使用position:relative ，该元素原来的位置不会脱离文档流，即使用时可能会出现空白的情况，而负margin则不存在这样的情况；
当margin-top、margin-left为负值的时候，会把元素上移、左移&lt;/p&gt;

&lt;h2 id=&quot;section-12&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何让一个固定宽高的元素在页面上垂直水平居中?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;垂直居中一般利用绝对定位中的负边距实现，首先用absolute把元素设置为绝对定位，再将top和left为50%，再对元素设置其自身高度、长度一般的负边距，使元素中心移动到父元素中心，实现居中对齐&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html
    &amp;lt;style&amp;gt;
    .demo{
    position: relative;
    width:600px;
    height:600px;
    background-color:#eee;
    border:1px solid #54e823;
    }
    .mydiv{
    width:100px;
    height:200px;
    background-color:red;
    position: absolute;
          top: 50%;
          left:50%;
          margin-left: -50px;
          margin-top: -100px;
    }
    &amp;lt;/style&amp;gt;
    &amp;lt;div class=&quot;demo&quot;&amp;gt;
        &amp;lt;div class=&quot;mydiv&quot;&amp;gt;我要水平垂直居中&amp;lt;div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-13&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;浮动元素有什么特征？对其他浮动元素、普通元素、文字分别有什么影响?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;浮动元素会脱离文档流；&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;碰到其他浮动元素其并不会忽略；&lt;/li&gt;
  &lt;li&gt;遇见块级元素其会完全忽略浮动元素，但遇到块级元素中的内联元素或直接的内联元素，内联元素会环绕该浮动元素；&lt;/li&gt;
  &lt;li&gt;遇见文字时，文字会环绕在浮动元素周围；&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-14&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;清除浮动指什么? 如何清除浮动?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;清除浮动&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;清除浮动指的是清除浮动对其他元素造成的影响。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如何清除浮动&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;清除浮动的方法有很多，概括如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* 运用clear:both/left/right清除浮动

可以在浮动元素末尾添加一个空内容带clear样式属性的标签，最常用、最有的方式是添加一个带clear的伪元素，如下代码：

```css
    .clearfix:after{
      content: &quot;&quot;;
      display: block;
      clear: both;
    }
    .clear{*zoom: 1;}  /*兼容IE6*/
```
* 触发BFC清除浮动

触发BFC的方式有很多，如下：

    * 清除子元素浮动，父元素也浮动或者绝对定位触发BFC。
    
    * overflow属性值非visiable
    
    * display成非块级盒子。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-15&quot;&gt;代码&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;
.demo{
position: relative;
width:600px;
height:600px;
background-color:#eee;
border:1px solid #54e823;
}
.mydiv{
width:100px;
height:200px;
background-color:red;
position: absolute;
      top: 50%;
      left:50%;
      margin-left: -50px;
      margin-top: -100px;
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
    &lt;div class=&quot;mydiv&quot;&gt;我要水平垂直居中&lt;div&gt;
&lt;/div&gt;

&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/28/float-position/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/28/float-position/</guid>
        
        <category>Clover</category>
        
        <category>CSS</category>
        
        <category>HTML</category>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>免费API汇总</title>
        <description>&lt;p&gt;本页仅收集中国国内可用API，如需查看其他版本，请点击&lt;a href=&quot;https://github.com/marktony/Awesome_API&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;目录&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#笔记&quot;&gt;笔记&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#出行&quot;&gt;出行&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#词典&quot;&gt;词典&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#电商&quot;&gt;电商&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#地图&quot;&gt;地图&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#电影&quot;&gt;电影&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#即时通讯&quot;&gt;即时通讯&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#开发者网站&quot;&gt;开发者网站&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#快递查询&quot;&gt;快递查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#旅游&quot;&gt;旅游&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#社交&quot;&gt;社交&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#视频&quot;&gt;视频&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#天气&quot;&gt;天气&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#团队协作&quot;&gt;团队协作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#图片与图像处理&quot;&gt;图片与图像处理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#外卖&quot;&gt;外卖&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#消息推送&quot;&gt;消息推送&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#音乐&quot;&gt;音乐&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#云&quot;&gt;云&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#语音识别&quot;&gt;语音识别&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#综合&quot;&gt;综合&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;笔记&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/office/office365/howto/onenote-landing&quot;&gt;OneNote&lt;/a&gt; - OneNote支持获取，复制，创建，更新，导入与导出笔记，支持为笔记添加多媒体内容，管理权限等。提供SDK和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.wiz.cn/manual/plugin/&quot;&gt;为知笔记&lt;/a&gt; - 为知笔记Windows客户端开放了大量的API，其中绝大部分，都通过COM提供，可以在javascript, C#, C++, Delphi等语言中使用。接口通过IDL(Interface description language)语言描述。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.yinxiang.com/&quot;&gt;印象笔记&lt;/a&gt; - 印象笔记提供了ActionScript 3, Android, C++, Windows, iOS, Java, JavaScript, OS X, Perl, PHP, Python, Ruby等平台的SDK和完整的API参考文档，可通过API进行认证，笔记，笔记本，附件，搜索，同步等操作，同时提供企业版和本地API。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://note.youdao.com/open/&quot;&gt;有道云笔记&lt;/a&gt; - 有道云笔记提供了Android SDK，同时Open API允许进行授权，用户，笔记本，笔记，分享，附件等方面的操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-2&quot;&gt;出行&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.xiaojukeji.com/&quot;&gt;滴滴&lt;/a&gt; - 滴滴提供了iOS和Android SDK, 可实现拉起滴滴叫车等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developerpre.10101111.com/&quot;&gt;神州专车&lt;/a&gt; - 神州专车提供了API模式和H5模式两种接入模式，允许进行基础信息，订单，支付，充值，用户，发票，代金券，企业等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.uber.com/&quot;&gt;Uber&lt;/a&gt; - Uber提供了Android和iOS的SDK,允许进行乘客，行程体验，司机，派送次数等四大方面的操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;词典&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://api.fanyi.baidu.com/api/trans/product/index&quot;&gt;百度翻译&lt;/a&gt; - 百度翻译支持多种语言互相翻译，包含PHP, JS, Python, C, Java版Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/translator/translatorapi.aspx&quot;&gt;必应词典&lt;/a&gt; - 微软翻译API支持文字和语音两种类型，支持多种语言互相翻译，提供C#版本Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/BingDic.md&quot;&gt;必应词典(非官方)&lt;/a&gt; - 支持单词和语句翻译。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.iciba.com/?c=api&quot;&gt;金山词霸&lt;/a&gt; - 金山词霸允许进行简单的翻译操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/KingsoftDic.md&quot;&gt;金山词霸(非官方)&lt;/a&gt; - 金山词霸允许进行简单的翻译操作。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.shanbay.com/help/developer/api_v1/&quot;&gt;扇贝&lt;/a&gt; - 扇贝提供了完整的API，允许进行用户，查询，添加学习记录，忘记单词，例句，笔记等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fanyi.youdao.com/openapi&quot;&gt;有道词典&lt;/a&gt; - 有道词典允许进行简单的翻译操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/YoudaoDic.md&quot;&gt;有道词典(非官方)&lt;/a&gt; - 允许进行简单的翻译操作。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-4&quot;&gt;电商&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.dangdang.com/&quot;&gt;当当&lt;/a&gt; - 当当允许商家用户和网站接入授权，可进行商品，订单，图片，问答，店铺和促销等方面的操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jos.jd.com/api/index.htm&quot;&gt;京东&lt;/a&gt; - 京东提供了Java, PHP, .net的SDK，授权后可进行多种操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.suning.com/ospos/apipage/toApiListMenu.do&quot;&gt;苏宁开放服务&lt;/a&gt; - 苏宁提供了Java, PHP, .Net, Python版本的SDK，授权后可进行多种操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://open.taobao.com/doc2/api_list.htm&quot;&gt;淘宝开放平台&lt;/a&gt; - 淘宝提供了Java, .Net, PHP, Python版本的SDK，授权后提供多种操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.amazon.com/public/zh&quot;&gt;亚马逊&lt;/a&gt; - 亚马逊提供多种语言版本的SDK，授权后允许多种操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-5&quot;&gt;地图&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbsyun.baidu.com/&quot;&gt;百度地图&lt;/a&gt; - 百度地图提供了Android, iOS版本的SDK和JavaScript API，可进行定位、地图、数据、出行、鹰眼轨迹和分析服务。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbs.amap.com/&quot;&gt;高德地图&lt;/a&gt; - 高德地图提供了JavaScript和web服务API，Android和iOS SDK，支持地图，定位，搜索，路线规划，导航和室内地图等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbs.qq.com/&quot;&gt;腾讯地图&lt;/a&gt; - 腾讯地图提供了JavaScript API，Android和iOS SDK，支持定位，地图，地点搜索，路线和导航等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lbs.tianditu.com/api-new/home.html&quot;&gt;天地图&lt;/a&gt; - 天地图提供了H5 API和JavaScript API等web API，同时提供了Android和iOS SDK，支持基础地图服务，图层管理，地图覆盖物，地图工具，地名搜索和出行规划服务。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.mapbar.com/&quot;&gt;图吧地图&lt;/a&gt; - 图吧提供了JavaScript和Flash API，Android和iOS SDK，支持定位，地址解析，位置标注，位置截图，路线规划，周边查询，兴趣点搜索和在线导航。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-6&quot;&gt;电影&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.douban.com/wiki/?title=movie_v2&quot;&gt;豆瓣电影&lt;/a&gt; - 豆瓣电影支持电影条目，影人条目，搜索和榜单等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/DoubanMovie.md&quot;&gt;豆瓣电影(非官方)&lt;/a&gt; - 获取最近热映电影、短评、影评、图片等。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/9855610eb1d4&quot;&gt;猫眼电影(非官方)&lt;/a&gt; - 支持查询首页电影列表，电影详情(含评论)，本地影院和影院详情，选座。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Time.md&quot;&gt;Time时光(非官方)&lt;/a&gt; - 支持获取&lt;a href=&quot;http://www.mtime.com/&quot;&gt;时光网&lt;/a&gt;网站数据。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/avenwu/vplus/blob/master/doc/v%E7%94%B5%E5%BD%B1api%E6%8E%A5%E5%8F%A3.md&quot;&gt;V电影(非官方)&lt;/a&gt; - 支持获取&lt;a href=&quot;http://www.vmovier.com/&quot;&gt;V电影&lt;/a&gt;网站的数据。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-7&quot;&gt;即时通讯&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.easemob.com/&quot;&gt;环信&lt;/a&gt; - 支持Android, iOS, WebIM, Linux, REST集成，支持多种消息类型。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rongcloud.cn/&quot;&gt;融云&lt;/a&gt; - 支持Android, iOS, Web, 游戏集成，支持多种消息类型。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://netease.im/&quot;&gt;网易云信&lt;/a&gt; - 支持IM实时通讯，实时音视频，教学白班，专线电话，短信，聊天室，提供iOS, Android, Windows和Web SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.qcloud.com/product/im&quot;&gt;腾讯云通信IM&lt;/a&gt; - 提供iOS, Android, Windows和Web SDK，支持多种消息类型。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-8&quot;&gt;开发者网站&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://open.coding.net/&quot;&gt;Coding&lt;/a&gt; - 授权后可访问coding.net网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gank.io/api&quot;&gt;干货集中营&lt;/a&gt; - 提供妹子图和Android, iOS, 前端，拓展资源等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.diycode.cc/api&quot;&gt;diycode&lt;/a&gt; - 授权后可访问diycode网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oschina.net/openapi&quot;&gt;开源中国&lt;/a&gt; - 授权后可访问开源中国网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://laravel-china.org/topics/3097&quot;&gt;Laravel China&lt;/a&gt; - 授权后可访问 Laravel China 网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruby-china.org/api-doc/&quot;&gt;Ruby China&lt;/a&gt; - 授权后可访问Ruby China网站的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.v2ex.com/p/7v9TEc53&quot;&gt;V2EX&lt;/a&gt; - 可访问V2EX网站的内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-9&quot;&gt;快递查询&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.aikuaidi.cn/api/&quot;&gt;爱快递&lt;/a&gt; - 爱快递支持国内90多家快递物流订单查询服务，免费版有使用次数限制，可用于电子商城单号跟踪,手机应用,微信快递接口等服务。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kuaidi100.com/openapi/&quot;&gt;快递100&lt;/a&gt; - 快递100支持300家国内国际快递，免费版有使用次数限制。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/ExpressDelivery100.md&quot;&gt;快递100(非官方)&lt;/a&gt; - 快递100支持300家国内国际快递。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kdniao.com/&quot;&gt;快递鸟&lt;/a&gt; - 快递鸟支持国内外400多家快递公司，免费版有使用次数限制，包含.Net, PHP, Java版Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kuaidi.com/openapi.html&quot;&gt;快递网&lt;/a&gt; - 快递网支持上百家快递查询服务，免费版有使用次数限制。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/ExpressDelivery.md&quot;&gt;快递网(非官方)&lt;/a&gt; - 快递网支持上百家快递查询服务。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-10&quot;&gt;旅游&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/12306.md&quot;&gt;12306(非官方)&lt;/a&gt; - 支持获取12306火车票票数、票价查询。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.qunar.com/&quot;&gt;去哪儿&lt;/a&gt; - 支持获取去哪儿网的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.tuniu.cn/&quot;&gt;途牛&lt;/a&gt; - 支持途牛网的内容，仅开放给供应商系统。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/TuniuTickets.md&quot;&gt;途牛火车票(非官方)&lt;/a&gt; - 支持获取途牛火车票票数、票价查询。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://u.ctrip.com/union/help/Termsofuse.aspx&quot;&gt;携程&lt;/a&gt; - 支持携程网的内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.elong.com/wiki/API%E6%96%87%E6%A1%A3&quot;&gt;艺龙&lt;/a&gt; - 支持获取产品数据，完成用户的预订，进行订单查询、更改或取消。提供在线工具，以及H5, Java, C#, PHP, Ruby版本的Demo。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-11&quot;&gt;社交&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://open-doc.dingtalk.com/&quot;&gt;钉钉&lt;/a&gt; - 支持免登，企业通讯录，服务窗，钉盘，地图，会话，DING，电话，音频，扫码，支付，分享等服务，提供SDK和Demo，PC版UI规范，调试工具和钉钉UI组件库。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.douban.com/wiki/?title=guide&quot;&gt;豆瓣&lt;/a&gt; - 支持图书，电影，音乐，同城，广播，用户，日记，相册，线上活动，论坛，回复和我去等功能，提供豆瓣组件，豆瓣标示和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.kaixin001.com/document.php&quot;&gt;开心网&lt;/a&gt; - 支持用户信息，登录授权，好友，传播应用，支付，分享内容，消息，交互，开心网应用等内容，提供SDK，开源插件和标示素材。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.connect.qq.com/api%E5%88%97%E8%A1%A8&quot;&gt;QQ互联&lt;/a&gt; - 支持用户资料，QQ会员信息，空间相册，腾讯微博资料，分享到腾讯微博，微博好友信息，财付通信息等内容，提供SDK, Demo, 以及设计资源。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.weibo.com/wiki/API&quot;&gt;微博&lt;/a&gt; - 支持粉丝服务，微博，评论，用户，关系，账号，收藏，搜索，提醒，短链，公共服务，位置服务，地理信息，地图引擎，支付以及OAuth2.0授权等内容，提供微博标示及SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://open.weixin.qq.com/&quot;&gt;微信&lt;/a&gt; - 支持移动应用，网站应用，公众账号，公众号第三方平台等内容，提供SDK, Demo, 以及设计资源。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-12&quot;&gt;视频&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.iqiyi.com/&quot;&gt;爱奇艺&lt;/a&gt; - 支持弹幕，全色彩播放器，高清码流，视频托管，播放爱奇艺视频，应用分发，IOCP等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fython/BilibiliAPIDocs&quot;&gt;Bilibili(非官方)&lt;/a&gt; - 支持登录，我的信息，番剧专题，视频/专题收藏、关注，番剧，弹幕等。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Vespa314/bilibili-api/blob/master/api.md&quot;&gt;Bilibili(非官方)&lt;/a&gt; - 支持获取Bilibili网站数据。#非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lecloud.com/zh-cn/help/api.html&quot;&gt;乐视&lt;/a&gt; - 支持标准直播，标准点播，视频发行平台，移动直播等内容，提供SDK下载。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Neihan.md&quot;&gt;内涵段子(非官方)&lt;/a&gt; - 支持获取内涵段子中大部分模块信息。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lm.tv.sohu.com/union/open_platform.do&quot;&gt;搜狐视频&lt;/a&gt; - 支持一二级内容获取，内容分类获取，视频详情信息，专辑详情信息，分级列表获取，关键词搜索等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://api.tudou.com/apidoc/index.php/%E9%A6%96%E9%A1%B5&quot;&gt;土豆&lt;/a&gt; - 支持视频模块，豆单模块，影视库模块，用户模块，转帖模块，字段定义模块等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://doc.open.youku.com/?spm=0.0.0.0.fOn6ND&quot;&gt;优酷&lt;/a&gt; - 支持内容输出，视频搜索，智能推荐，用户登录，用户互动，用户信息，视频上传至优酷，视频互动等内容，提供SDK。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-13&quot;&gt;天气&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.swarma.net/index.php/%E5%BD%A9%E4%BA%91%E5%A4%A9%E6%B0%94API/v2&quot;&gt;彩云天气&lt;/a&gt; - 支持全球天气数据，两种空气质量数据，天气预报，实况天气，独家降水预报，独家空气质量预报，六种天气数据，四种生活指数数据等内容，部分功能收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/hefengyun/weather/222344&quot;&gt;和风天气&lt;/a&gt; - 支持7-10天预报，实况天气，每小时预报，生活指数，灾害预警，景点天气，历史天气，城市查询等内容，仅国内数据免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/MeizuWeather.md&quot;&gt;魅族天气(非官方)&lt;/a&gt; - 支持获取魅族天气。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/XiaomiWeather.md&quot;&gt;小米天气(非官方)&lt;/a&gt; - 支持获取小米天气数据。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.thinkpage.cn/doc&quot;&gt;心知天气&lt;/a&gt; - 支持天气实况，逐日预报和历史，24小时逐小时预报，过去24小时天气历史记录，气象灾害预警，空气质量实况与城市排行，逐日和逐小时空气质量预报，过去24小时空气质量历史记录，生活指数，农历、节气、生肖，机动车尾号限行，日出日落，月初月落和月像，城市搜索等内容，仅国内数据免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/CenterWeather.md&quot;&gt;中央天气预报(非官方)&lt;/a&gt; - 支持获取中央天气预报数据。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-14&quot;&gt;团队协作&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.teambition.com/developer/open-platform&quot;&gt;Teambition&lt;/a&gt; - 支持详细的文档说明，部分平台提供demo。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-15&quot;&gt;图片与图像处理&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.v2ex.com/t/157267&quot;&gt;Bing每日壁纸(非官方)&lt;/a&gt; - 支持图片URL和图片描述，可获取不同地区的数据。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pinguo/PGSkinPrettifyEngine&quot;&gt;Camera360&lt;/a&gt; - 支持全帧率直播美白滤镜，提供SDK和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://imgsdk.com/&quot;&gt;嗨图&lt;/a&gt; - 支持图片标注，仅提供iOS版本SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.camcard.com/?language=zh-cn&quot;&gt;名片全能王&lt;/a&gt; - 支持精准识别几十种语言的名片，自动切边并美化名片图像，自动返回识别结果，提供多种版本SDK，收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intsig.com/zh/products/camcard_for_id&quot;&gt;企业证件识别&lt;/a&gt; - 支持身份证，驾驶证，护照等，收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.camscanner.com/?language=zh-cn&quot;&gt;扫描全能王&lt;/a&gt; - 支持图像智能剪裁，五种图像增强模式，手动调节图像细节，自动返回扫描结果等，提供iOS与Android版本SDK，收费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://api1.wozhitu.com/&quot;&gt;我知图&lt;/a&gt; - 支持相似图像搜索，图像识别匹配，图像识别关键词推荐，重复图片探测等内容。&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;[银行卡&lt;/td&gt;
          &lt;td&gt;信用卡识别](http://www.intsig.com/zh/products/creditcard) - 提供SDK和API，收费。&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-16&quot;&gt;外卖&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev.waimai.baidu.com/&quot;&gt;百度外卖&lt;/a&gt; - 支持商户，菜品，商品，订单和基础数据等内容，提供SDK和Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.dianping.com/&quot;&gt;大众点评&lt;/a&gt; - 支持商户，团购，在线预定，商品点评，数据统计，元数据等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://openapi.eleme.io/v2/quickstart.html&quot;&gt;饿了么&lt;/a&gt; - 支持查询，预定，订单，其他订单，数据推送，支付，评价，活动，账户同步，数据落地同步等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.waimai.meituan.com/doc/show&quot;&gt;美团外卖&lt;/a&gt; - 支持门店，配送范围，菜品，药品，订单，订单推送等内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-17&quot;&gt;消息推送&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://push.baidu.com/doc/restapi/restapi&quot;&gt;百度云推送&lt;/a&gt; - 支持iOS, Android和服务器端，支持推送，统计，组管理等Rest API接口。服务器端支持Java, Python, PHP, REST API。提供所支持各语言版本的SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.huawei.com/push&quot;&gt;华为推送&lt;/a&gt; - 支持Android，提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.jiguang.cn/jpush/server/push/rest_api_v3_push/&quot;&gt;极光&lt;/a&gt; - 支持Android, iOS, WindowsPhone, 服务器端REST API, 提供Java, Python, PHP, Ruby, C#, Node.js等版本的SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leancloud.cn/docs/push_guide.html&quot;&gt;LeanCloud&lt;/a&gt; - 支持Android, iOS, WindowsPhone和Web网页推送，使用云引擎和JavaScript创建推送，使用REST API推送消息。提供Objectvie-C(开放源码), JavaScript(开放源码), Android, Unity, .Net, WindowsPhone, Java(开放源码), Python(开放源码), PHP(开放源码), C++(开放源码), Swift(开放源码)版本SDK。同时提供Demo。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xg.qq.com/&quot;&gt;腾讯信鸽&lt;/a&gt; - 支持iOS和Android平台，服务器端采用Rest API, 同时服务器端支持Java, PHP, Python等语言并提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev.xiaomi.com/console/appservice/push.html&quot;&gt;小米&lt;/a&gt; - 支持Android和iOS平台，服务器端支持Java, Python并提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev.umeng.com/push/android/api-doc&quot;&gt;友盟&lt;/a&gt; - 支持Android和iOS平台，服务器端支持PHP, Java, Python并提供SDK。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-18&quot;&gt;音乐&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://my.oschina.net/skiden/blog/102025&quot;&gt;百度音乐(非官方)&lt;/a&gt; - 支持频道歌曲列表，专辑的歌曲列表，歌曲的详细信息，歌手专辑信息，搜索，歌手的所有歌曲，排行榜，所有专辑，所有歌手，歌手的专辑列表，歌手信息，歌词搜索，歌曲文件详细信息。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.douban.com/wiki/?title=music_v2&quot;&gt;豆瓣音乐&lt;/a&gt; - 支持音乐信息，评论信息，标签信息，搜索音乐，某个音乐中标记最多的标签，发表、修改、删除评论，用户对音乐的所有标签等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kaolafm/api&quot;&gt;考拉FM&lt;/a&gt; - 支持获取指定分类下列表和内容，搜索指定关键字内容，专辑/电台/直播详情，指定专辑下列表，指定电台播单，分类下专辑TOP50，指定期(碎片)所在专辑最新分页功能，分类下全部直播计划，版本升级接口，排行榜，精选，传统电台列表/详情/地区等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://119.29.39.252/index.php/2016/10/20/1-2/&quot;&gt;酷狗音乐(非官方)&lt;/a&gt; - 支持搜索，各种排行榜，歌手专辑信息，下载和获取播放地址。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wq.qq.com/&quot;&gt;企鹅FM&lt;/a&gt; - 支持获取电台分类列表，电台分类下的专辑信息列表，专辑下节目信息列表，电台节目播放链接，搜索关键字相关主播/专辑/节目，主播名下专辑，特定时间段内新增主播/更新的专辑/新增的专辑等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ccchangkong/article/issues/23&quot;&gt;QQ音乐(非官方)&lt;/a&gt; - 支持歌曲榜单，歌曲/歌词地址，歌曲图片。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.qingting.fm/&quot;&gt;蜻蜓FM&lt;/a&gt; - 支持OAuth2.0授权，音频数据中心，分类，点播，直播，临时直播，排行榜，搜索，内容更新状态，主播，此刻，专题，活动等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/darknessomi/musicbox/wiki/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%96%B0%E7%89%88WebAPI%E5%88%86%E6%9E%90%E3%80%82&quot;&gt;网易云音乐(非官方)&lt;/a&gt; - 支持获取用户歌单，歌单详情，歌曲URL。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://open.ximalaya.com/index&quot;&gt;喜马拉雅FM&lt;/a&gt; - 支持Android和iOS平台，并提供相应的SDK和Demo，具体支持内容请下载相关文件查看。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-19&quot;&gt;云&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://develop.aliyun.com/api?spm=5176.8142029.388261.274.4FJSwV&quot;&gt;阿里云&lt;/a&gt; - 支持弹性计算，数据库，存储与CDN，网络，应用服务，域名与网站等类别的内容，并提供了相关SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.baidu.com/doc/index.html&quot;&gt;百度云&lt;/a&gt; - 支持计算和网络，存储和CDN，数据库，安全和管理，数据分析，智能多媒体服务，物联网服务，人工智能，应用服务，网站服务，数字营销服务等内容，并提供相关的SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bmob.cn/&quot;&gt;Bmob&lt;/a&gt; - 支持云数据库，容器服务，消息推送，文件存储，短信验证码，及时通讯，云端逻辑，定时任务，地理位置等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leancloud.cn/&quot;&gt;LeanCloud&lt;/a&gt; - 	支持云存储，数据分析，用户关系，实时通讯，消息推送，移动统计等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.qiniu.com/&quot;&gt;七牛云&lt;/a&gt; - 支持对象存储，融合CDN，直播云，数据处理等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.qcloud.com/doc/api&quot;&gt;腾讯云&lt;/a&gt; - 支持计算，网络，存储与CDN，数据库，安全服务，监控与管理，域名服务，视频服务，大数据与AI等内容，提供相关SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wilddog.com/&quot;&gt;野狗&lt;/a&gt; - 支持实时数据同步，实时视频通话，及时通讯，短信，身份认证等。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-20&quot;&gt;语音识别&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://yuyin.baidu.com/&quot;&gt;百度语音&lt;/a&gt; - 支持全平台REST API, 离线在线融合模式，深度语义解析，场景识别定制，自定义上传语料、训练模型，基础服务永久免费。提供相应SDK和Demo应用。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://openspeech.sogou.com/Sogou/php/index.php&quot;&gt;搜狗语音云开放平台&lt;/a&gt; - 支持在线/离线语音识别，在线听歌识曲，离线语音合成等内容。提供相应平台SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xfyun.cn/&quot;&gt;讯飞开放平台&lt;/a&gt; - 支持语音听写/转写，在线/离线命令词识别，语音唤醒等内容，平台支持广泛，提供相应SDK。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-21&quot;&gt;杂志&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ZongweiBai/DoubanOpenDaily/blob/b87473b90911e687d291e847b133b5c4c4a700a3/app/src/main/java/com/monosky/daily/constant/APIConstData.java&quot;&gt;豆瓣一刻(非官方)&lt;/a&gt; - 支持获取指定日期文章列表，栏目总览，推荐作者，作者信息，作者更多文章信息，栏目文章列表及翻页，文章评论及热门评论列表。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Eyepetizer.md&quot;&gt;开眼(非官方)&lt;/a&gt; - 支持获取未登录状态下开眼精选、发现、关注信息。  #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/ONEv3.5.0~.md&quot;&gt;One一个(非官方)&lt;/a&gt; - 支持获取首页图片，文章，音乐及电影。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Tuchong.md&quot;&gt;图虫(非官方)&lt;/a&gt; - 支持获取图虫 app 所有信息。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jokermonn/-Api/blob/master/Yixi.md&quot;&gt;一席(非官方)&lt;/a&gt; - 支持获取一席主页、演讲、讲者、枝桠等内容 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90&quot;&gt;知乎日报(非官方)&lt;/a&gt; - 支持获取界面启动图像，软件版本查询，最新消息，消息内容获取与离线下载，过往消息，新闻额外消息，新闻对应长/短评论查看，主题日报列表，主题日报内容，热门消息，栏目总览，栏目具体消息，新闻的推荐者，某个专栏之前的新闻，Editor的主页等。 #非官方&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/marktony/zhuanlan/wiki&quot;&gt;知乎专栏(非官方)&lt;/a&gt; - 支持获取指定专栏的信息，指定专栏的文章列表，指定的文章内容，评论列表，点赞信息。 #非官方&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-22&quot;&gt;综合&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.avatardata.cn/Docs&quot;&gt;阿凡达数据&lt;/a&gt; - 支持金融股票，充值认证，便民类，新闻文章，医药交通，科教文艺，创意数据，及时通讯等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.alidayu.com/&quot;&gt;阿里大于&lt;/a&gt; - 支持验证码，短信通知，语音通知，流量钱包充值，私密专线，群发助手等内容。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apix.cn/&quot;&gt;APiX&lt;/a&gt; - 支持基础征信数据，信用分析服务，支付缴费接口等数据，部分免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://apistore.baidu.com/&quot;&gt;百度API STORE&lt;/a&gt; - 支持多种类型数据，部分免费，提供SDK。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.haoservice.com/&quot;&gt;HaoService&lt;/a&gt; - 支持多种类型数据。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.juhe.cn/&quot;&gt;聚合数据&lt;/a&gt; - 支持多种类型数据，部分免费。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.datayes.com/&quot;&gt;通联数据&lt;/a&gt; - 提供金融类数据，支持免费试用。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/27/free-apis/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/27/free-apis/</guid>
        
        <category>Clover</category>
        
        <category>API</category>
        
        
      </item>
    
      <item>
        <title>CSS常用技巧</title>
        <description>&lt;h1 id=&quot;css&quot;&gt;CSS常用技巧&lt;/h1&gt;

&lt;h2 id=&quot;css-sprite-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CSS Sprite(雪碧图|精灵图)指什么? 有什么作用&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;雪碧图&lt;/code&gt; 就是将很多小图标合并成一张图，这样在加载图片时只需要走一次网络请求，然后用&lt;code class=&quot;highlighter-rouge&quot;&gt;background-position&lt;/code&gt;定位来显示部分图片&lt;/p&gt;

&lt;p&gt;作用：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;能够减少页面的请求数、降低图片占用的字节，以此来达到提升页面访问速度的目的&lt;/li&gt;
  &lt;li&gt;提高页面的加载速度；&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://riny.net/2014/compass-sprite/&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;imgcss&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img标签和CSS背景使用图片在使用场景上有何区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt;标签适用于经常改变的情况，会通过后台更新的数据,例如商品的图片，任务的照片信息；
&lt;code class=&quot;highlighter-rouge&quot;&gt;.css&lt;/code&gt;背景适用于不会经常改变的情况，例如 图标等；&lt;/p&gt;

&lt;h2 id=&quot;title--alt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title 和 alt属性分别有什么作用&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;用于显示额外提示文字，鼠标放在元素上面时会显示。
&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt;用于在无法加载图片时，替代图片显示,并且对SEO爬虫友好，可以提升网页的权重。&lt;/p&gt;

&lt;h2 id=&quot;background-urlabcpng-0-0-no-repeat&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background: url(abc.png) 0 0 no-repeat;这句话是什么意思&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
背景图片使用css同级目录下的abc.png 位置偏移 X轴0px,Y轴0px；不重复。&lt;/p&gt;

&lt;h2 id=&quot;background-size--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background-size有什么作用? 兼容性如何? 常用的值是?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CSS 的 background-size 属性能调整背景图片的大小，从而替代了用原始大小显示图片的默认行为
常用的值有以下几类：&lt;/p&gt;

&lt;p&gt;auto——原始图片大小；&lt;/p&gt;

&lt;p&gt;length——根据给定长度值调整背景图片大小；&lt;/p&gt;

&lt;p&gt;percentage——根据给定的百分比调整图片大小；&lt;/p&gt;

&lt;p&gt;contain——按比例调整背景图片，使得其图片宽高比自适应整个元素的背景区域的宽高比，因此假如背景图片过大，而背景区域的整体宽高比不能恰好包含背景图片的话，那么其背景区域会出现空白，这个值多用于响应式页面；&lt;/p&gt;

&lt;p&gt;cover——按比例调整背景图片，这个值的属性和contain正好相反，背景图会按照比例填充背景区域，如果背景图片过大且不能正好按照宽高比包含背景区域，那么背景图片就会被裁减显示不全；
&amp;gt; &lt;a href=&quot;http://www.webhek.com/background-size/&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/145951-71351468654e5c7b.png&quot; alt=&quot;兼容性&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;div&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何让一个div水平居中？如何让图片水平居中&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可对div(块级元素)设置margin：0 auto&lt;/p&gt;

&lt;p&gt;设置水平居中 对图片(行内元素)设置text-align:center&lt;/p&gt;

&lt;p&gt;设置水平居中 或者设置display:block，按照块级元素设置；&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何设置元素透明? 兼容性？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
div{ 
opacity:0.6;
filter:Alpah(opacity=60)/*IE8及之前版本*/
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/145951-923845199b1b1688.png&quot; alt=&quot;兼容性&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;opacity--rgba&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opacity 和 rgba都能设置透明，有什么区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;rgba只能作用于颜色或背景色；&lt;/p&gt;

&lt;p&gt;opacity作用于元素以及元素内部的所有元素的透明度；俩者的兼容性都需要IE8以上版本的支持&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/q285661571/article/details/7536490&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;推荐资源&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://csssprites.com/&quot;&gt;工具-图片在线合并3&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://tinypng.com/&quot;&gt;工具-图片在线压缩1&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://caniuse.com/&quot;&gt;工具-caniuse 在线查兼容&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-2&quot;&gt;代码&lt;/h2&gt;

&lt;h3 id=&quot;css-sprite-6--hover-&quot;&gt;使用CSS Sprite 把如下6张图标图片合并成一张图片，做出如下效果, 当 hover 时背景变色&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/b4316f7925ce12d39281a083299f52c449260b41.gif&quot; alt=&quot;gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;
```html&lt;/p&gt;
&lt;style&gt;
.demo{
width:100%;
height:200px;
border:1px solid #54e823;
background-color:#eee;
}
.spi{
	background: url(/img/result.png) 0 0 no-repeat;
    background-size: 20px;
    width: 60px;
    height: 20px;
   
    display: inline-block;
    line-height: 20px;
    padding-left: 20px;
    font-size: 13px;
    color:rgb(108,108,108);
}

.spi1{
background-position: 0px -1px;
}
.spi1:hover{
background-position: -1px -78px;
color:rgb(165,104,190);
}
.spi2{
background-position: 1px -26px;
}
.spi2:hover{
background-position: -2px -106px;
color:rgb(165,104,190);
}
.spi3{
background-position: 0px -53px;
}
.spi3:hover{
background-position: 2px -131px;
color:rgb(165,104,190);
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
    &lt;div class=&quot;spi spi1&quot;&gt;前进&lt;/div&gt;
    &lt;div class=&quot;spi spi2&quot;&gt;开始&lt;/div&gt;
    &lt;div class=&quot;spi spi3&quot;&gt;停止&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;
.demo{
width:100%;
height:200px;
background-color:#eee;
border:1px solid #54e823;
}
.spi{
	background: url(/img/result.png) 0 0 no-repeat;
    background-size: 20px;
    width: 60px;
    height: 20px;
   
    display: inline-block;
    line-height: 20px;
    padding-left: 20px;
    font-size: 13px;
    color:rgb(108,108,108);
}

.spi1{
background-position: 0px -1px;
}
.spi1:hover{
background-position: -1px -78px;
color:rgb(165,104,190);
}
.spi2{
background-position: 1px -26px;
}
.spi2:hover{
background-position: -2px -106px;
color:rgb(165,104,190);
}
.spi3{
background-position: 0px -53px;
}
.spi3:hover{
background-position: 2px -131px;
color:rgb(165,104,190);
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
    &lt;div class=&quot;spi spi1&quot;&gt;前进&lt;/div&gt;
    &lt;div class=&quot;spi spi2&quot;&gt;开始&lt;/div&gt;
    &lt;div class=&quot;spi spi3&quot;&gt;停止&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;iconfont----demo1--fortawesome-fontello1&quot;&gt;使用字体图标(如 iconfont, 查找-&amp;gt;加入购物车-&amp;gt;下载 demo1 、 fortawesome 或者fontello1)实现上例效果&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;
@font-face {font-family: &#39;clovericonfont&#39;;
    src: url(&#39;/iconfont/iconfont.eot&#39;); /* IE9*/
    src: url(&#39;/iconfont/iconfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */
    url(&#39;/iconfont/iconfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */
    url(&#39;/iconfont/iconfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/
    url(&#39;/iconfont/iconfont.svg#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */
}
.clovericonfont{
    font-family:&quot;clovericonfont&quot; !important;
    font-size:16px;font-style:normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
    padding-right:10px;

    }
.clovericonfont:hover{
    color:rgb(165,104,190);
    }
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe64e;前进&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe7fc;开始&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe601;停止&lt;/i&gt;
&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;
&lt;style&gt;
@font-face {font-family: &#39;clovericonfont&#39;;
    src: url(&#39;/iconfont/iconfont.eot&#39;); /* IE9*/
    src: url(&#39;/iconfont/iconfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */
    url(&#39;/iconfont/iconfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */
    url(&#39;/iconfont/iconfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/
    url(&#39;/iconfont/iconfont.svg#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */
}
.clovericonfont{
    font-family:&quot;clovericonfont&quot; !important;
    font-size:16px;font-style:normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
    padding-right:10px;

    }
.clovericonfont:hover{
    color:rgb(165,104,190);
    }
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe64e;前进&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe7fc;开始&lt;/i&gt;
&lt;i class=&quot;clovericonfont&quot;&gt;&amp;#xe601;停止&lt;/i&gt;
&lt;/div&gt;

&lt;h3 id=&quot;css-border&quot;&gt;使用css border实现如下三角形&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/1cc5ec2069c4cd2b4c7eac7e848d31bd1625602d_1_690x482.png&quot; alt=&quot;border三角形&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;

.demo1{
width:100%;
height:600px;
background-color:#eee;
border:1px solid #54e823;
}
.demo1 div{
margin-bottom:10px;
}
.sj{
width:0px;
height:0px;
border-top:blue 50px solid;
border-bottom:green 50px solid;
border-left:red 50px solid;
border-right:yellow 50px solid;
}
.sj1{
width:0px;
height:0px;
border-top:blue 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}
.sj2{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;

}
.sj3{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;

border-right:yellow 50px solid;
}
.sj4{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}

.sj5{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;
}
.sj6{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0)  50px solid;
}
&lt;/style&gt;

&lt;div class=&quot;demo1&quot;&gt;
&lt;div class=&quot;sj&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj1&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj2&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj3&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj4&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj5&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj6&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;

.demo1{
width:100%;
height:600px;
background-color:#eee;
border:1px solid #54e823;
}
.demo1 div{
margin-bottom:10px;
}
.sj{
width:0px;
height:0px;
border-top:blue 50px solid;
border-bottom:green 50px solid;
border-left:red 50px solid;
border-right:yellow 50px solid;
}
.sj1{
width:0px;
height:0px;
border-top:blue 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}
.sj2{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;

}
.sj3{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-bottom:rgba(0,0,0,0) 50px solid;

border-right:yellow 50px solid;
}
.sj4{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0) 50px solid;
border-right:rgba(0,0,0,0) 50px solid;
}

.sj5{
width:0px;
height:0px;
border-top:rgba(0,0,0,0) 50px solid;
border-left:red 50px solid;
}
.sj6{
width:0px;
height:0px;
border-bottom:green 50px solid;
border-left:rgba(0,0,0,0)  50px solid;
}
&lt;/style&gt;

&lt;div class=&quot;demo1&quot;&gt;
&lt;div class=&quot;sj&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj1&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj2&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj3&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj4&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj5&quot;&gt;&lt;/div&gt;
&lt;div class=&quot; sj6&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;tooltip--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tooltip 和 太极&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;
.contain-demo{
width:100%;
height:800px;
background-color:#eee;
border:1px solid #54e823;
padding:10px;
}
.contain-demo&gt;div{
margin-top:40px;
}

/*tootips*/
/*传统做法*/
/*重叠*/
.tips1{
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
}
.cls1{
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.cls2{
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
/*旋转*/
.tips2{
padding: 10px;
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.cls3{
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}

/*伪元素做法*/
.tips3{
padding: 10px;
   position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}
.tips3::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.tips3::after{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
.tips4{
padding: 10px;
    position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.tips4::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}
/*太极*/
.taiji {
    position: relative;
}

.yuan1{
	position: absolute;
    left: 0px;
    top: 0px;
    width: 100px;
    height: 200px;
    background-color: red;
    border-radius: 100px 0 0 100px;
}
.yuan2{
    width: 100px;
    position: absolute;
    left: 100px;
    height: 200px;
    background-color: black;
    border-radius: 0px 100px 100px 0px;
}
.yuan3{
	position: absolute;
    width: 100px;
    height: 100px;
    background: red;
    border-radius: 50px;
    left: 50px;
}
.yuan4{
	position: absolute;
    width: 100px;
    height: 100px;
    background: black;
    border-radius: 50px;
    left: 50px;
    top: 100px;
}
.yuan5{
    width: 50px;
    height: 50px;
    background: black;
    border-radius: 25px;
    position: absolute;
    top: 25px;
    left: 75px;
}
.yuan6{
    width: 50px;
    height: 50px;
    background: red;
    border-radius: 25px;
    position: absolute;
    top: 125px;
    left: 75px;
}


&lt;/style&gt;

&lt;div class=&quot;contain-demo&quot;&gt;
	&lt;div class=&quot;tips1&quot;&gt;
    	&lt;div class=&quot;cls1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;cls2&quot;&gt;&lt;/div&gt;
        传统做法重叠
    &lt;/div&gt;
	&lt;div class=&quot;tips2&quot;&gt;
    	&lt;div class=&quot;cls3&quot;&gt;&lt;/div&gt;
        传统做法旋转
    &lt;/div&gt;
    &lt;div class=&quot;tips3&quot;&gt;伪元素做法重叠&lt;/div&gt;
	&lt;div class=&quot;tips4&quot;&gt;伪元素做法旋转&lt;/div&gt;
    
    &lt;div class=&quot;taiji&quot;&gt;
    	&lt;div class=&quot;yuan1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan2&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan3&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan4&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan5&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan6&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;div&gt;
```

&lt;style&gt;
.contain-demo{
width:100%;
height:800px;
background-color:#eee;
border:1px solid #54e823;
padding:10px;
}
.contain-demo&gt;div{
margin-top:40px;
}

/*tootips*/
/*传统做法*/
/*重叠*/
.tips1{
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
}
.cls1{
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.cls2{
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
/*旋转*/
.tips2{
padding: 10px;
	position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.cls3{
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}

/*伪元素做法*/
.tips3{
padding: 10px;
   position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}
.tips3::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -20px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #ccc solid;
    border-right: 10px transparent solid;
}
.tips3::after{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -18px;
    left: 85px;
    width: 0px;
    height: 0px;
    border-top: 10px transparent solid;
    border-left: 10px transparent solid;
    border-bottom: 10px #eee solid;
    border-right: 10px transparent solid;
}
.tips4{
padding: 10px;
    position:relative;
    width: 200px;
    height: 80px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.tips4::before{
    content:&quot;&quot;;
    display:block;
	position: absolute;
    top: -8px;
    width: 15px;
    height: 15px;
    border-top: 1px #ccc solid;
    border-left: 1px #ccc solid;
    left: 88px;
    transform: rotate(45deg);
    background: #eee;
}
/*太极*/
.taiji {
    position: relative;
}

.yuan1{
	position: absolute;
    left: 0px;
    top: 0px;
    width: 100px;
    height: 200px;
    background-color: red;
    border-radius: 100px 0 0 100px;
}
.yuan2{
    width: 100px;
    position: absolute;
    left: 100px;
    height: 200px;
    background-color: black;
    border-radius: 0px 100px 100px 0px;
}
.yuan3{
	position: absolute;
    width: 100px;
    height: 100px;
    background: red;
    border-radius: 50px;
    left: 50px;
}
.yuan4{
	position: absolute;
    width: 100px;
    height: 100px;
    background: black;
    border-radius: 50px;
    left: 50px;
    top: 100px;
}
.yuan5{
    width: 50px;
    height: 50px;
    background: black;
    border-radius: 25px;
    position: absolute;
    top: 25px;
    left: 75px;
}
.yuan6{
    width: 50px;
    height: 50px;
    background: red;
    border-radius: 25px;
    position: absolute;
    top: 125px;
    left: 75px;
}


&lt;/style&gt;
`代码效果`
&lt;div class=&quot;contain-demo&quot;&gt;
	&lt;div class=&quot;tips1&quot;&gt;
    	&lt;div class=&quot;cls1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;cls2&quot;&gt;&lt;/div&gt;
        传统做法重叠
    &lt;/div&gt;
	&lt;div class=&quot;tips2&quot;&gt;
    	&lt;div class=&quot;cls3&quot;&gt;&lt;/div&gt;
        传统做法旋转
    &lt;/div&gt;
    &lt;div class=&quot;tips3&quot;&gt;伪元素做法重叠&lt;/div&gt;
	&lt;div class=&quot;tips4&quot;&gt;伪元素做法旋转&lt;/div&gt;
    
    &lt;div class=&quot;taiji&quot;&gt;
    	&lt;div class=&quot;yuan1&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan2&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan3&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan4&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan5&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;yuan6&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;div&gt;








&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/13/css-technique/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/13/css-technique/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        
      </item>
    
      <item>
        <title>CSS盒模型-1</title>
        <description>&lt;h1 id=&quot;css&quot;&gt;CSS盒模型&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/img/201503151.JPG&quot; alt=&quot;标准盒模型&quot; /&gt;
&lt;img src=&quot;/img/201503152.JPG&quot; alt=&quot;IE盒模型&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;区别&lt;/code&gt;：W3C标准中padding、border所占的空间不在width、height范围内，大家俗称的IE的盒模型width包括content尺寸＋padding＋border&lt;/p&gt;

&lt;p&gt;早期IE6、IE7使用“IE盒模型”，后来更新了一次，更新后的IE6、IE7使用标准盒模型IE8及以上版本使用标准盒模型&lt;/p&gt;

&lt;p&gt;没有DOCTYPE的情况下使用怪异模式，IE也使用“IE盒模型”&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;兼容方案&lt;/code&gt;：使用css3新样式box-sizing&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;content-box：w3c标准盒模型&lt;/li&gt;
  &lt;li&gt;border-box：“IE盒模型”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;盒模型包括哪些属性&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;盒模型包括：margin、border、padding、content&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt;：外边距。margin没有背景颜色，它是完全透明的。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;border&lt;/code&gt;：边框。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;：内边距。会受到框中填充的背景颜色影响。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt;：盒子的内容，显示文本和图像。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ie-w3c&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IE 盒模型和W3C盒模型有什么区别?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2406284-21cf8014fc9756bb.png&quot; alt=&quot;盒模型区别&quot; /&gt;
IE的盒模型与W3C盒模型的区别在与width的计算。&lt;/p&gt;

&lt;p&gt;W3C标准中width、height=content。不包含padding、border所占的空间；&lt;/p&gt;

&lt;p&gt;IE的盒模型width、height=content＋padding＋border。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;以下代码的作用？兼容性？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
*{
  box-sizing: border-box;
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
此代码作用是 &lt;code class=&quot;highlighter-rouge&quot;&gt;使用IE盒模型&lt;/code&gt; 渲染页面,即&lt;code class=&quot;highlighter-rouge&quot;&gt;width、height=content＋padding＋border&lt;/code&gt;
&lt;img src=&quot;/img/2406284-6a337b312349eb87.png&quot; alt=&quot;兼容性&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;代码&lt;/h2&gt;
&lt;p&gt;```html
&lt;a class=&quot;btn&quot; href=&quot;#&quot;&gt;确定&lt;/a&gt;
&lt;span class=&quot;btn&quot;&gt;取消&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;btn&quot;&gt;提交&lt;/div&gt;
&lt;p&gt;&lt;button class=&quot;btn&quot;&gt; 发送&lt;/button&gt;
```
&lt;img src=&quot;/img/49bf909c-9ad6-420c-be68-2f68d8f12d60.png&quot; alt=&quot;qq&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;代码效果：&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;
.demo{
width:100%;
height:200px;
border:1px solid #54e823;
background-color:#eee;
}
.demo .btn {
    width: 60px;
    height: 30px;
    background: #e2440c;
    display: inline-block;
    margin: 10px 2px;
    padding: 2px 2px;
    font-size: 18px;
    text-align: center;
    line-height: 25px;
    border-radius: 5px;
    color: #fff !important;
    cursor: pointer;
}
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;
&lt;a class=&quot;btn&quot; href=&quot;#&quot;&gt;确定&lt;/a&gt;
&lt;span class=&quot;btn&quot;&gt;取消&lt;/span&gt;
&lt;div class=&quot;btn&quot;&gt;提交&lt;/div&gt;
&lt;button class=&quot;btn&quot;&gt; 发送&lt;/button&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/13/css-box-model/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/13/css-box-model/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        
      </item>
    
      <item>
        <title>Html基础-4</title>
        <description>&lt;h1 id=&quot;html-4&quot;&gt;HTML-4&lt;/h1&gt;

&lt;h2 id=&quot;html-css--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何理解 HTML CSS 语义化? 在平时写代码的过程中要注意哪些细节&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;语义化&lt;/code&gt;：让所用的html css标签具有实际意义.选择合适的标签、使用合理的代码结构，便于开发者阅读，同时让浏览器的爬虫和机器很好的解析&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意细节&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;尽可能少的使用无语义的标签div和span；&lt;/li&gt;
  &lt;li&gt;不要使用纯样式标签，如：&lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;font&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt;等，改用css设置；&lt;/li&gt;
  &lt;li&gt;需要强调的文本，可以包含在&lt;code class=&quot;highlighter-rouge&quot;&gt;strong&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;em&lt;/code&gt;标签中（浏览器预设样式，能用CSS指定就不用他们），&lt;code class=&quot;highlighter-rouge&quot;&gt;strong&lt;/code&gt;默认样式是加粗（不要用b），&lt;code class=&quot;highlighter-rouge&quot;&gt;em&lt;/code&gt;是斜体（不用i）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;forminput-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;form表单有什么作用？有哪些常用的input 标签，分别有什么作用？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;作用&lt;/code&gt;：创建一个表单，实现本页与其他页的数据交互；&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;常用input标签&lt;/code&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=text&lt;/code&gt;：输入用户名、电话号码等；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=password&lt;/code&gt;：密码输入框；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=file&lt;/code&gt;：文件目录输入平台；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=hidden&lt;/code&gt;：将无法明示的重要信息提交到下一页；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=checkbox&lt;/code&gt;：多选框；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=radio&lt;/code&gt;：单选框；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=image&lt;/code&gt;：提交式图片，如验证码；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=submit/reset&lt;/code&gt;：分别是“提交”“重置”按钮；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=button&lt;/code&gt;：windows风格按钮。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;post--get-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;post 和 get 方式的区别？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;get是用来从服务器获得数据；post向服务器上传数据；&lt;/li&gt;
  &lt;li&gt;get安全级别较post低；&lt;/li&gt;
  &lt;li&gt;get传输的数据量小，主要受URL长度限制；post可以传输大量数据；get最多提交1k数据，浏览器的限制。post理论上无限制，受服务器限制&lt;/li&gt;
  &lt;li&gt;Get将表单中数据的按照variable=value的形式，添加到action所指向的URL后面，并且两者使用“?”连接，而各个变量之间使用“&amp;amp;”连接；Post是将表单中的数据放在form的数据体中，按照变量和值相对应的方式，传递到action所指向URL;&lt;/li&gt;
  &lt;li&gt;get是form的默认方式。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;inputname-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;在input里，name 有什么作用？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;用途1: 作为可与服务器交互数据的HTML元素的服务器端的标示，比如input、select、textarea、和button等。我们可以在服务器端根据其Name通过Request.Params取得元素提交的值。&lt;/li&gt;
  &lt;li&gt;用途2：HTML元素Input type=’radio’分组，我们知道radio button控件在同一个分组类，check操作是mutex的，同一时间只能选中一个radio，这个分组就是根据相同的Name属性来实现的。&lt;/li&gt;
  &lt;li&gt;用途3：建立页面中的锚点，我们知道&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;URL&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;是获得一个页面超级链接，如果不用href属性，而改用Name，如：，我们就获得了一个页面锚点。&lt;/li&gt;
  &lt;li&gt;用途4: 作为对象的Identity，如Applet、Object、Embed等元素。比如在Applet对象实例中，我们将使用其Name来引用该对象。&lt;/li&gt;
  &lt;li&gt;用途5: 在IMG元素和MAP元素之间关联的时候，如果要定义IMG的热点区域，需要使用其属性usemap，使usemap=”#name”(被关联的MAP元素的Name)。&lt;/li&gt;
  &lt;li&gt;用途6: 某些特定元素的属性，如attribute，meta和param。例如为Object定义参数&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;PARAM NAME = &quot;appletParameter&quot; VALUE = &quot;value&quot;&amp;gt;或Meta中&amp;lt;META NAME = &quot;Author&quot; CONTENT = &quot;Dave Raggett&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;buttonbuttona-classbtn-hrefainput-typesubmit-value-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;提交&amp;lt;/button&amp;gt;、&amp;lt;a class=&quot;btn&quot; href=&quot;#&quot;&amp;gt;提交&amp;lt;/a&amp;gt;、&amp;lt;input type=&quot;submit&quot; value=&quot;提交&quot;&amp;gt; 三者有什么区别？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;提交&amp;lt;/button&amp;gt;&lt;/code&gt;：创建一个普通按钮，需要绑定事件才可以用以提交数据；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a class=&quot;btn&quot; href=&quot;#&quot;&amp;gt;提交&amp;lt;/a&amp;gt;&lt;/code&gt;：一个链接按钮；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;input type=&quot;submit&quot; value=&quot;提交&quot;&amp;gt;&lt;/code&gt;：提交按钮，提交表单&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;radio--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;radio 如何 分组?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;name的值设为一样,就是一组。&lt;/p&gt;

&lt;h2 id=&quot;placeholder-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;placeholder 属性有什么作用?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
提供可描述输入字段预期值的提示信息&lt;/p&gt;

&lt;h2 id=&quot;typehidden-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type=hidden隐藏域有什么作用? 举例说明&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;隐藏域在页面中对于用户是不可见的，在表单中插入隐藏域的目的在于收集或发送信息，以利于被处理表单的程序所使用。浏览者单击发送按钮发送表单的时候，隐藏域的信息也被一起发送到服务器。&lt;/li&gt;
  &lt;li&gt;有些时候我们要给用户一信息，让他在提交表单时提交上来以确定用户身份，如sessionkey，等等．当然这些东西也能用cookie实现，但使用隐藏域就简单的多了．而且不会有浏览器不支持，用户禁用cookie的烦恼。&lt;/li&gt;
  &lt;li&gt;有些时候一个form里有多个提交按钮，怎样使程序能够分清楚到底用户是按那一个按钮提交上来的呢？我们就可以写一个隐藏域，然后在每一个按钮处加上&lt;code class=&quot;highlighter-rouge&quot;&gt;onclick=&quot;document.form.command.value=&quot;xx&quot;&quot;&lt;/code&gt;然后我们接到数据后先检查command的值就会知道用户是按的那个按钮提交上来的。&lt;/li&gt;
  &lt;li&gt;有时候一个网页中有多个form，我们知道多个form是不能同时提交的，但有时这些form确实相互作用，我们就可以在form中添加隐藏域来使它们联系起来。&lt;/li&gt;
  &lt;li&gt;javascript不支持全局变量，但有时我们必须用全局变量，我们就可以把值先存在隐藏域里，它的值就不会丢失了&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 09 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/09/html-4/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/09/html-4/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        
      </item>
    
      <item>
        <title>CSS选择器</title>
        <description>&lt;h1 id=&quot;css&quot;&gt;CSS选择器&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;选择器类型&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;基础选择器&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;选择器&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;*&lt;/td&gt;
          &lt;td&gt;通用元素选择器，匹配页面任何元素（这也就决定了我们很少使用）&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;#id&lt;/td&gt;
          &lt;td&gt;id选择器，匹配特定id的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;.class&lt;/td&gt;
          &lt;td&gt;类选择器，匹配class包含(不是等于)特定类的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;element&lt;/td&gt;
          &lt;td&gt;标签选择器&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;组合选择器&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;选择器&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;E,F&lt;/td&gt;
          &lt;td&gt;多元素选择器，用,分隔，同时匹配元素E或元素F&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E F&lt;/td&gt;
          &lt;td&gt;后代选择器，用空格分隔，匹配E元素所有的后代（不只是子元素、子元素向下递归）元素F&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E&amp;gt;F&lt;/td&gt;
          &lt;td&gt;子元素选择器，用&amp;gt;分隔，匹配E元素的所有直接子元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E+F&lt;/td&gt;
          &lt;td&gt;直接相邻选择器，匹配E元素之后的相邻的同级元素F&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E~F&lt;/td&gt;
          &lt;td&gt;普通相邻选择器（弟弟选择器），匹配E元素之后的同级元素F（无论直接相邻与否）&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;.class1.class2&lt;/td&gt;
          &lt;td&gt;id和class选择器和选择器连写的时候中间没有分隔符，. 和 # 本身充当分隔符的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;element#id&lt;/td&gt;
          &lt;td&gt;id和class选择器和选择器连写的时候中间没有分隔符，. 和 # 本身充当分隔符的元素&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;ul&gt;
      &lt;li&gt;属性选择器&lt;/li&gt;
    &lt;/ul&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;选择器&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr]&lt;/td&gt;
          &lt;td&gt;匹配所有具有属性attr的元素，div[id]就能取到所有有id属性的div&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr = value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr值为value的元素，div[id=test],匹配id=test的div&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr ~= value]&lt;/td&gt;
          &lt;td&gt;匹配所有属性attr具有多个空格分隔、其中一个值等于value的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr ^= value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr的值以value开头的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr $= value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr的值以value结尾的元素&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;E[attr *= value]&lt;/td&gt;
          &lt;td&gt;匹配属性attr的值包含value的元素&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;伪类选择器&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;往下看&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;伪元素选择器&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选择器&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;E::first-line&lt;/td&gt;
      &lt;td&gt;匹配E元素内容的第一行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::first-letter&lt;/td&gt;
      &lt;td&gt;匹配E元素内容的第一个字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::before&lt;/td&gt;
      &lt;td&gt;在E元素之前插入生成的内容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::after&lt;/td&gt;
      &lt;td&gt;在E元素之后插入生成的内容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;css-1&quot;&gt;CSS优先级&lt;/h2&gt;

&lt;p&gt;从高到低分别是&lt;/p&gt;

&lt;p&gt;在属性后面使用 !important 会覆盖页面内任何位置定义的元素样式&lt;/p&gt;

&lt;p&gt;作为style属性写在元素标签上的内联样式&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;id选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;类选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;伪类选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;属性选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;标签选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通配符选择器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;浏览器自定义&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样就可以看出来上面例子肯定使用id选择器的定义了，还有一种复杂的情况，CSS规则由多个选择器组成&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
#test p.class1 {...}
#test .class1.class2 {...}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这种场景该使用那条规则呢？&lt;/p&gt;

&lt;p&gt;这时候我们可以做个简单的加法运算，id选择器的权值为1000，class选择器为100，标签选择器为10，做一下运算（当然只是为了形象这么说，一万个class选择器加起来也不如一个id选择器优先级高）&lt;/p&gt;

&lt;p&gt;这样我们就能得知第二条的规则优先级高一些，但是还有一种情况&lt;/p&gt;

&lt;p&gt;``` html
#parent p.class1
div #child.class1&lt;/p&gt;

&lt;div id=&quot;parent&quot;&gt;
    &lt;p id=&quot;child&quot; class=&quot;class1&quot;&gt;
        Text
    &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;按照我们刚才的方法计算，两个的权值时相同的，这时候应该用那条规则呢？简单来说一句话谁更具体用谁，也就是权值高的选择器作用的越具体优先级越高&lt;/p&gt;

&lt;p&gt;我们可以看到两个选择器作用的元素都是p标签，id选择器权值最高，第一条规则作用在了父元素上，第二条规则直接作用在了p标签本身上，所以我们认为第二条选择器的优先级高&lt;/p&gt;

&lt;p&gt;如果两个选择器规权值就是一样，我们改怎么判断呢？ 后面的覆盖前面的！&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;css
div {color: #333;}
....
div {color: #666;}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这样&lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;文案的颜色明显会是&lt;code class=&quot;highlighter-rouge&quot;&gt;#666&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;总而言之判断CSS选择器规则优先级很简单，每个选择器本身有优先级，越具体优先级越高&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;列出你知道的伪类选择器&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选择器&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;E:first-child&lt;/td&gt;
      &lt;td&gt;匹配元素E的第一个子元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:link&lt;/td&gt;
      &lt;td&gt;匹配所有未被点击的链接&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:visited&lt;/td&gt;
      &lt;td&gt;匹配所有已被点击的链接&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:active&lt;/td&gt;
      &lt;td&gt;匹配鼠标已经其上按下、还没有释放的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:hover&lt;/td&gt;
      &lt;td&gt;匹配鼠标悬停其上的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:focus&lt;/td&gt;
      &lt;td&gt;匹配获得当前焦点的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:lang(c)&lt;/td&gt;
      &lt;td&gt;匹配lang属性等于c的E元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:enabled&lt;/td&gt;
      &lt;td&gt;匹配表单中可用的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:disabled&lt;/td&gt;
      &lt;td&gt;匹配表单中禁用的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:checked&lt;/td&gt;
      &lt;td&gt;匹配表单中被选中的radio或checkbox元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E::selection&lt;/td&gt;
      &lt;td&gt;匹配用户当前选中的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:root&lt;/td&gt;
      &lt;td&gt;匹配文档的根元素，对于HTML文档，就是HTML元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-child(n)&lt;/td&gt;
      &lt;td&gt;匹配其父元素的第n个子元素，第一个编号为1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-last-child(n)&lt;/td&gt;
      &lt;td&gt;匹配其父元素的倒数第n个子元素，第一个编号为1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-of-type(n)&lt;/td&gt;
      &lt;td&gt;与:nth-child()作用类似，但是仅匹配使用同种标签的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:nth-last-of-type(n)&lt;/td&gt;
      &lt;td&gt;与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:last-child&lt;/td&gt;
      &lt;td&gt;匹配父元素的最后一个子元素，等同于:nth-last-child(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:first-of-type&lt;/td&gt;
      &lt;td&gt;匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:last-of-type&lt;/td&gt;
      &lt;td&gt;匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:only-child&lt;/td&gt;
      &lt;td&gt;匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:only-of-type&lt;/td&gt;
      &lt;td&gt;匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:empty&lt;/td&gt;
      &lt;td&gt;匹配一个不包含任何子元素的元素，文本节点也被看作子元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E:not(selector)&lt;/td&gt;
      &lt;td&gt;匹配不符合当前选择器的任何元素&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;==n的取值==&lt;/p&gt;

&lt;p&gt;1，2，3，4，5&lt;/p&gt;

&lt;p&gt;2n+1, 2n, 4n-1&lt;/p&gt;

&lt;p&gt;odd, even&lt;/p&gt;

&lt;h2 id=&quot;first-childfirst-of-type&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:first-child和:first-of-type的作用和区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:first-child&lt;/code&gt; 匹配的是某父元素的第一个子元素，可以说是结构上的第一个子元素。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:first-of-type&lt;/code&gt; 匹配的是该类型的第一个，类型是指什么呢，就是冒号前面匹配到的东西，比如 p:first-of-type，就是指所有p元素中的第一个。这里不再限制是第一个子元素了，只要是该类型元素的第一个就行了，当然这些元素的范围都是属于同一级的，也就是同辈的。&lt;/p&gt;

&lt;p&gt;同样类型的选择器 &lt;code class=&quot;highlighter-rouge&quot;&gt;:last-child &lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;:last-of-type&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child(n)&lt;/code&gt;  和  &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-of-type(n)&lt;/code&gt; 也可以这样去理解。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;运行如下代码，解析下输出样式的原因&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;```html&lt;/p&gt;
&lt;style&gt;
.item1:first-child{
  color: red;
}
.item1:first-of-type{
  background: blue;
}
&lt;/style&gt;

&lt;div class=&quot;ct&quot;&gt;
   &lt;p class=&quot;item1&quot;&gt;aa&lt;/p&gt;
   &lt;h3 class=&quot;item1&quot;&gt;bb&lt;/h3&gt;
   &lt;h3 class=&quot;item1&quot;&gt;ccc&lt;/h3&gt;
 &lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/QQ20170309-144057@2x.png&quot; alt=&quot;展示效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.item1:first-child&lt;/code&gt;匹配到class是item1的第一个子元素，所以 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p class=&quot;item1&quot;&amp;gt;aa&amp;lt;/p&amp;gt;&lt;/code&gt; 是第一个子元素 展示位文字红色
&lt;code class=&quot;highlighter-rouge&quot;&gt;.item1:first-of-type&lt;/code&gt; 匹配到class是item1的第一种标签类型，所以 ` &amp;lt;p class=&quot;item1&quot;&amp;gt;aa&amp;lt;/p&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; 为第一个&lt;/code&gt;p&lt;code class=&quot;highlighter-rouge&quot;&gt;标签，&lt;/code&gt;&amp;lt;h3 class=&quot;item1&quot;&amp;gt;bb&amp;lt;/h3&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;为第一个&lt;/code&gt;h3`标签，所以 这两个背景色展示位蓝色。&lt;/p&gt;

&lt;h2 id=&quot;text-align-center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-align: center的作用是什么，作用在什么元素上？能让什么元素水平居中&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;作用是让元素内部 行内元素、display为（table-cell、inline和inline-block）的块级元素水平居中，作用在块级元素上。&lt;/p&gt;

</description>
        <pubDate>Thu, 09 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/09/css-selector/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/09/css-selector/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        
      </item>
    
      <item>
        <title>Html基础-3</title>
        <description>&lt;h1 id=&quot;html-3&quot;&gt;HTML-3&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2009/11/css%E8%A1%8C%E9%AB%98line-height%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%8A%E5%BA%94%E7%94%A8/&quot;&gt;css行高line-height的一些深入理解及应用&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;line-height&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;line-height有什么作用?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;line-height 属性设置行间的距离（行高），不能使用负值。该属性会影响行框的布局。在应用到一个块级元素时，它定义了该元素中基线之间的最小距离而不是最大距离。line-height 与 font-size 的计算值之差(行距)分为两半，分别加到一个文本行内容的顶部和底部。可以包含这些内容的最小框就是行框。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;line-height可以被定义为normal。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;body { line-height:normal; }&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;line-height可以被定义为继承&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p { line-height:inherit; }&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;line-height可以使用一个百分比的值&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p { line-height:120%; }&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;line-height可以被定义为一个长度值（单位px、em等）&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p { line-height:20px; }&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;line-height也可以被定义为纯数字（甚至没有单位）&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p { line-height:1.2; }&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;cssinline-block&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何去查CSS属性的兼容性？比如inline-block哪些浏览器支持？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;去Can I use 网站查询  &lt;a href=&quot;http://caniuse.com/&quot;&gt;CanIUse&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在输入框中查询要查询的属性&lt;/p&gt;

&lt;p&gt;inline-block的兼容性：
&lt;img src=&quot;/img/ciuinlineblock.png&quot; alt=&quot;inline-block兼容性&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;a-href-title-target--title--alt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a 标签的href, title, target 是什么？ title 和 alt有什么区别？如何新窗口打开链接?&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;href&lt;/code&gt;是a标签的链接地址。可以是个链接地址，也可以是一个锚点地址。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; 是a标签的标题，鼠标移动上之后显示的名称&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;target&lt;/code&gt; 是 a 标签打开链接的方式，主要有&lt;code class=&quot;highlighter-rouge&quot;&gt;_blank&lt;/code&gt;:浏览器总在一个新打开、未命名的窗口中载入目标文档；&lt;code class=&quot;highlighter-rouge&quot;&gt;_self&lt;/code&gt;:这个目标的值对所有没有指定目标的 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; 标签是默认目标，它使得目标文档载入并显示在相同的框架或者窗口中作为源文档。这个目标是多余且不必要的，除非和文档标题 &amp;lt;base&amp;gt; 标签中的 target 属性一起使用；&lt;/code&gt;_parent&lt;code class=&quot;highlighter-rouge&quot;&gt;：这个目标使得文档载入父窗口或者包含来超链接引用的框架的框架集。如果这个引用是在窗口或者在顶级框架中，那么它与目标 _self 等效；&lt;/code&gt;_top&lt;code class=&quot;highlighter-rouge&quot;&gt;：这个目标使得文档载入包含这个超链接的窗口，用 _top 目标将会清除所有被包含的框架并将文档载入整个浏览器窗口。&lt;/code&gt;framename`:在指定的框架中打开被链接文档。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title 和 alt区别&lt;/code&gt;:title作为属性时，用来为元素提供额外说明信息，例如，给超链接标签a添加了title属性，把鼠标移动到该链接上面是，就会显示title的内容，以达到补充说明或者提示的效果。alt属性则是用来指定替换文字，只能用在img、area和input元素中（包括applet元素），用于网页中图片无法正常显示时给用户提供文字说明使其了解图像信息。alt是替代图像作用而不是提供额外说明文字的。根据一些SEO人士的说法，使用alt属性还具有搜索引擎优化效果，因为搜素引擎是无法直接读取图像的信息的，alt可以为其提供文字信息所以对搜索引擎比较友好&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href=&#39;https://www.baidu.com&#39; target=&#39;_blank&#39;&amp;gt;在新的窗口打开连接&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;display-none--visibility-hidden-opacity0-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;display: none , visibility: hidden, opacity:0 有什么作用？有什么区别？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;display=none，把元素隐藏起来，并且会改变页面布局，可以理解成在页面中把该元素删除掉,&lt;code class=&quot;highlighter-rouge&quot;&gt;无体积,脱离文档流&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;visibility=hidden，把元素隐藏起来了，但不会改变页面布局，不会触发该元素已经绑定的事件，&lt;code class=&quot;highlighter-rouge&quot;&gt;有体积，在文档流内&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;opacity=0，该元素隐藏起来了，但不会改变页面布局，如果该元素已经绑定一些事件，如click事件，那么点击该区域，也能触发点击事件的 &lt;code class=&quot;highlighter-rouge&quot;&gt;有体积,在文档里内&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a--a--a-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;如何去除 a 链接的默认样式？直接在 a 链接父容器添加颜色，能否继承到当前 a 链接上？&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在a的style中加入text-decoration:none；可以去除a的默认样式&lt;/p&gt;

&lt;p&gt;直接在 &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; 链接父容器添加颜色，不能继承到当前 &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; 链接上&lt;/p&gt;

</description>
        <pubDate>Tue, 07 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/07/html-3/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/07/html-3/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        
      </item>
    
      <item>
        <title>Html基础-2</title>
        <description>&lt;h1 id=&quot;html-2&quot;&gt;HTML-2&lt;/h1&gt;

&lt;h2 id=&quot;link--import&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;样式有几种引入方式? link 和 @import有什么区别&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1.内联方式&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;```&lt;/p&gt;
&lt;div style=&quot;background: red&quot;&gt;&lt;/div&gt;
&lt;p&gt;```
改变当前标签的样式&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2.嵌入方式&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;嵌入方式指的是在 HTML 头部中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 标签下书写 CSS 代码。&lt;/p&gt;

    &lt;p&gt;```&lt;/p&gt;
    &lt;head&gt;
      &lt;style&gt;
      .content {
          background: red;
      }
      &lt;/style&gt;
  &lt;/head&gt;
    &lt;p&gt;```
嵌入方式的 CSS 只对当前的网页有效。因为 CSS 代码是在 HTML 文件中，所以会使得代码比较集中，当我们写模板网页时这通常比较有利。因为查看模板代码的人可以一目了然地查看 HTML 结构和 CSS 样式。因为嵌入的 CSS 只对当前页面有效，所以当多个页面需要引入相同的 CSS 代码时，这样写会导致代码冗余，也不利于维护。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3.链接方式&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;链接方式指的是使用 HTML 头部的 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标签引入外部的 CSS 文件。&lt;/p&gt;

    &lt;p&gt;```&lt;/p&gt;
    &lt;head&gt;
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot; /&gt;
  &lt;/head&gt;
    &lt;p&gt;```&lt;/p&gt;

    &lt;p&gt;这是最常见的也是最推荐的引入 CSS 的方式。使用这种方式，所有的 CSS 代码只存在于单独的 CSS 文件中，所以具有良好的可维护性。并且所有的 CSS 代码只存在于 CSS 文件中，CSS 文件会在第一次加载时引入，以后切换页面时只需加载 HTML 文件即可&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;4.导入方式&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;导入方式指的是使用 CSS 规则引入外部 CSS 文件
  ```&lt;/p&gt;
    &lt;style&gt;
      @import url(style.css);
  &lt;/style&gt;

    &lt;p&gt;```&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;link和@import的区别是?&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;两者都是外部引用CSS的方式，但是存在一定的区别&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;区别1：link是XHTML标签，除了加载CSS外，还可以定义RSS等其他事务；@import属于CSS范畴，只能加载CSS。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;区别2：link引用CSS时，在页面载入时同时加载；@import需要页面网页完全载入以后加载。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;区别3：link是XHTML标签，无兼容问题；@import是在CSS2.1提出的，低版本的浏览器不支持。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;区别4：link支持使用Javascript控制DOM去改变样式；而@import不支持。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;maincss-maincssmaincssmaincss&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;文件路径../main.css 、./main.css、main.css、/main.css有什么区别&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;../main.css&lt;/code&gt; 是当前目录的上级目录引入main.css&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./main.css&lt;/code&gt; 是当前目录引入main.css&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main.css&lt;/code&gt; 同&lt;code class=&quot;highlighter-rouge&quot;&gt;./main.css&lt;/code&gt; 是当前目录引入main.css&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/main.css&lt;/code&gt; 是在网站根目录引入main.css&lt;/p&gt;

&lt;h2 id=&quot;consolelog&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;console.log是做什么用的&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
在控制台使用 log方式输出信息，还看查看对象的具体内容。&lt;/p&gt;

&lt;h2 id=&quot;text-aligntext-alignjustify&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-align有几个值，分别有什么作用？为什么text-align:justify没有效果？写截图说明区别&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-align&lt;/code&gt;:left,right,center,justify,start,end,inherit,initial&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-align:justify&lt;/code&gt; 不起作用因为text-align不会处理被打断的行和最后一行。一行文本不进行处理。还有就是强制换行的也不处理。所以你强制占满了一行他才处理。&lt;/p&gt;

&lt;h2 id=&quot;pxemrem&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;px、em、rem分别是什么？有什么区别？如何使用&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;px&lt;/code&gt; PX实际上就是像素,用PX设置字体大小时，比较稳定和精确.但是这种方法存在一个问题，当用户在浏览器中浏览我们制作的Web页面时，如果改变了浏览器的缩放，这时会使用我们的Web页面布局被打破。这样对于那些关心自己网站可用性的用户来说，就是一个大问题了。因此，这时就提出了使用“em”来定义Web页面的字体&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;em&lt;/code&gt; em是相对于父元素的属性而计算的.EM就是根据基准来缩放字体的大小。EM实质是一个相对值，而非具体的数值。这种技术需要一个参考点，一般都是以&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt;的“font-size”为基准。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。那么12px=0.75em, 10px=0.625em。为了简化font-size的换算，需要在css中的body选择器中声明Font-size=62.5%，这就使em值变为 16px*62.5%=10px, 这样12px=1.2em, 10px=1em, 也就是说只需要将你的原来的px数值除以10，然后换上em作为单位就行了&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt; EM是相对于其父元素来设置字体大小的，这样就会存在一个问题，进行任何元素设置，都有可能需要知道他父元素的大小。而Rem是相对于根元素&amp;lt;html&amp;gt;，这样就意味着，我们只需要在根元素确定一个参考值
&lt;code class=&quot;highlighter-rouge&quot;&gt;浏览器的兼容性 除了IE6-IE8r，其它的浏览器都支持em和rem属性，px是所有浏览器都支持。
因此为了浏览器的兼容性，可“px”和“rem”一起使用，用&quot;px&quot;来实现IE6-8下的效果，然后使用“Rem”来实现代浏览器的效果。&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 06 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/06/html-2/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/06/html-2/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        
      </item>
    
      <item>
        <title>Html基础-1</title>
        <description>&lt;h1 id=&quot;html-1&quot;&gt;HTML-1&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;网页乱码的问题是如何产生的？怎样解决?&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;造成html网页乱码原因主要是html源代码内中文字内容与html编码不同造成。解决办法：保持文件的编写字符集和网页设置的字符集保持一致 如使用UTF-8编写的文件，网页头设置为&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;ccceee-333&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;颜色有几种写法， 红色、 绿色、蓝色、白色、黑色如何表示？ 透明黑色如何表示？#ccc的颜色#eee的颜色？ #333的颜色？&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;直接书写英文名字&lt;/code&gt;。这样的好处是直观。但是没有能很好的控制颜色&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rgb(0,0,0)&lt;/code&gt;中间的三个 数字分别是0-255.分别代表红  绿  蓝三个颜色。数字数字越大，颜色越深&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#FCFCFC&lt;/code&gt; 这样是用十六进制来表示颜色。跟上面rgb差不多。两位英文代表一个原色。分别是红绿蓝。这种写法有缩写。比如#FFFFFF可以等于成#FFF，还有#CCFFCC,可以写成#CFC。这就是颜色的写法&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rgba（0，0，0，0）&lt;/code&gt;前面三个数字跟rgb一样的，最后一个是透明度的控制。取值范围是0-1.一位小数。越接近零。越透明。    &lt;code class=&quot;highlighter-rouge&quot;&gt;注意的是。这种有兼容问题。是CSS3的属性&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;红色&lt;code class=&quot;highlighter-rouge&quot;&gt;red&lt;/code&gt;、 绿色&lt;code class=&quot;highlighter-rouge&quot;&gt;green&lt;/code&gt;、蓝色&lt;code class=&quot;highlighter-rouge&quot;&gt;blue&lt;/code&gt;、白色&lt;code class=&quot;highlighter-rouge&quot;&gt;white&lt;/code&gt;、黑色&lt;code class=&quot;highlighter-rouge&quot;&gt;black&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;透明黑色 &lt;code class=&quot;highlighter-rouge&quot;&gt;rgba(0,0,0,0.8)&lt;/code&gt; ,#ccc &lt;code class=&quot;highlighter-rouge&quot;&gt;深灰色&lt;/code&gt; #eee &lt;code class=&quot;highlighter-rouge&quot;&gt;浅灰色&lt;/code&gt; #333 &lt;code class=&quot;highlighter-rouge&quot;&gt;浅黑色&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;doctype-html-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;!doctype html&amp;gt; 的作用是什么&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;告知浏览器以Html5的标准来解析页面，Html5相对宽松，没有严格模式和混杂模式之分。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;严格模式和混杂模式指什么&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;&amp;lt;!DOCTYPE&amp;gt;声明叫做文件类型定义（DTD），声明的作用为了告诉浏览器该文件的类型。让浏览器解析器知道应该用哪个规范来解析文档。&amp;lt;!DOCTYPE&amp;gt;声明必须在 HTML 文档的第一行，这并不是一个 HTML 标签。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;严格模式：&lt;/code&gt;又称标准模式，是指浏览器按照 W3C 标准解析代码.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;混杂模式：&lt;/code&gt;又称怪异模式或兼容模式，是指浏览器用自己的方式解析代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;如果文档包含严格的 DOCTYPE ，那么它一般以严格模式呈现。（严格 DTD ——严格模式）&lt;/li&gt;
  &lt;li&gt;包含过渡 DTD 和 URI 的 DOCTYPE ，也以严格模式呈现，但有过渡 DTD 而没有 URI （统一资源标识符，就是声明最后的地址）会导致页面以混杂模式呈现。（有 URI 的过渡 DTD ——严格模式；没有 URI 的过渡 DTD ——混杂模式）&lt;/li&gt;
  &lt;li&gt;DOCTYPE 不存在或形式不正确会导致文档以混杂模式呈现。（DTD不存在或者格式不正确——混杂模式）&lt;/li&gt;
  &lt;li&gt;HTML5 没有 DTD ，因此也就没有严格模式与混杂模式的区别，HTML5 有相对宽松的语法，实现时，已经尽可能大的实现了向后兼容。（ HTML5 没有严格和混杂之分）&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;meta-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;meta 有什么作用，常见的值有哪些&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;meta标签共有两个属性，它们分别是&lt;code class=&quot;highlighter-rouge&quot;&gt;http-equiv&lt;/code&gt;属性和&lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;属性，不同的属性又有不同的参数值，这些不同的参数值就实现了不同的网页功能。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;name属性&lt;/code&gt;
name属性主要用于描述网页，与之对应的属性值为content，content中的内容主要是便于搜索引擎机器人查找信息和分类信息用的。
  meta标签的name属性语法格式是：&lt;code class=&quot;highlighter-rouge&quot;&gt;＜meta name=&quot;参数&quot; content=&quot;具体的参数值&quot;＞&lt;/code&gt; 。
  其中name属性主要有以下几种参数：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Keywords(关键字)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

  	说明：keywords用来告诉搜索引擎你网页的关键字是什么

  	举例：＜meta name =”keywords” content=”science,education,culture,politics,ecnomics，relationships, entertaiment, human”＞

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;description(网站内容描述)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：description用来告诉搜索引擎你的网站主要内容。&lt;/p&gt;

        &lt;p&gt;举例：＜meta name=”description” content=”This page is about the meaning of science, education,culture.”＞&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;robots(机器人向导)&lt;/code&gt;
　　
  说明：robots用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引。content的参数有all,none,index,noindex,follow,nofollow。默认是all。&lt;/p&gt;

        &lt;p&gt;举例：＜meta name=”robots” content=”none”＞&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;author(作者)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：标注网页的作者&lt;/p&gt;

        &lt;p&gt;举例：＜meta name=”author” content=”root,root@21cn.com”＞&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http-equiv属性&lt;/code&gt;
http-equiv顾名思义，相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容，与之对应的属性值为content，content中的内容其实就是各个参数的变量值.
  meta标签的http-equiv属性语法格式是：＜meta http-equiv=”参数” content=”参数变量值”＞ ；其中http-equiv属性主要有以下几种参数&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Expires(期限)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新传输。&lt;/p&gt;

        &lt;p&gt;用法：＜meta http-equiv=”expires” content=”Fri, 12 Jan 2001 18:18:18 GMT”＞&lt;/p&gt;

        &lt;p&gt;注意：必须使用GMT的时间格式。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Pragma(cache模式)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：禁止浏览器从本地计算机的缓存中访问页面内容。&lt;/p&gt;

        &lt;p&gt;用法：＜meta http-equiv=”Pragma” content=”no-cache”＞&lt;/p&gt;

        &lt;p&gt;注意：这样设定，访问者将无法脱机浏览。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Refresh(刷新)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：自动刷新并指向新页面。&lt;/p&gt;

        &lt;p&gt;用法：＜meta http-equiv=”Refresh” content=”2；URL=http://www.root.net”＞&lt;/p&gt;

        &lt;p&gt;注意：其中的2是指停留2秒钟后自动刷新到URL网址。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Set-Cookie(cookie设定)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：如果网页过期，那么存盘的cookie将被删除。&lt;/p&gt;

        &lt;p&gt;用法：＜meta http-equiv=”Set-Cookie” content=”cookievalue=xxx; expires=Friday, 12-Jan-2001 18:18:18 GMT； path=/”＞&lt;/p&gt;

        &lt;p&gt;注意：必须使用GMT的时间格式。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Window-target(显示窗口的设定)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：强制页面在当前窗口以独立页面显示。&lt;/p&gt;

        &lt;p&gt;用法：＜meta http-equiv=”Window-target” content=”_top”＞&lt;/p&gt;

        &lt;p&gt;注意：用来防止别人在框架里调用自己的页面。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;content-Type(显示字符集的设定)&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;说明：设定页面使用的字符集。&lt;/p&gt;

        &lt;p&gt;用法：＜meta http-equiv=”content-Type” content=”text/html; charset=gb2312”＞&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;meta-http-equivx-ua-compatible-contentieedgechrome1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;meta http-equiv=&quot;X-UA-compatible&quot; content=&quot;IE=edge,chrome=1&quot;&amp;gt;有什么作用&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A:&lt;/code&gt;这个属性主要是设置浏览器优先使用什么模式来渲染页面的.
以上代码IE=edge告诉IE使用最新的edge引擎渲染网页，chrome=1则可以激活Chrome Frame&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;常见的浏览器有哪些，什么内核&lt;/code&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Trident&lt;/code&gt;的是internet explorer，国产的绝大部分浏览器。Trident是就是ie内核&lt;/li&gt;
  &lt;li&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Gecko&lt;/code&gt;的是Mozilla Firefox，使用 Gecko 内核的浏览器也有不少，如 Netscape MozillaSuite/SeaMonkey 等&lt;/li&gt;
  &lt;li&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Presto&lt;/code&gt;的是opera，这是目前公认网页浏览速度最快的浏览器内核&lt;/li&gt;
  &lt;li&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;WebKit&lt;/code&gt;的有苹果的safari，谷歌的chrome，还有国产的大部分双核浏览器其中一核就是WebKit&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 01 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/03/01/html-1/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/03/01/html-1/</guid>
        
        <category>Clover</category>
        
        <category>前端</category>
        
        <category>HTML</category>
        
        
      </item>
    
      <item>
        <title>Linux命令行基础</title>
        <description>&lt;h1 id=&quot;linux&quot;&gt;Linux命令行基础&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;一些名词&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;「图形界面」&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;「命令行」&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;「终端」&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;「shell」&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;「bash」&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;安装使用&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windws: 安装git, 打开 gitbash&lt;/li&gt;
  &lt;li&gt;Linux 打开终端&lt;/li&gt;
  &lt;li&gt;Mac 打开终端&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;基本命令&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;查看当前完整路径&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  pwd
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;查看当前目录下文件&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;```bash
  # 不包括隐藏文件
  ls&lt;/p&gt;

    &lt;p&gt;# 查看当前目录下所有文件(包括隐藏文件)
  ls -a&lt;/p&gt;

    &lt;p&gt;# 查看当前目录下所有文件(包括隐藏文件)的详细信息
  ls -al
  ```&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;切换目录&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  cd /c/project
  cd code
  cd ../css
  cd ~/Desktop
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;创建文件&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  touch readme.md
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;删除文件&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;```bash
  #创建readme.md
  rm readme.md&lt;/p&gt;

    &lt;p&gt;#删除node_modules文件夹，不提示
  rm -rf node_modules
  ```&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;重命名文件&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  mv readme.md README.md
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建文件夹&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  mkdir projects
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;文件路径&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;根目录&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  cd /
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;家目录&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  cd ~
  pwd
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;当前目录&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  cd books
  cd ./books
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;上级目录&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
  cd ..
  cd ../css
 &lt;/code&gt;
## 编辑器VIM&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vim a.md&lt;/code&gt; 初始进入编辑器命令模式&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; 进入编辑模式&lt;/li&gt;
  &lt;li&gt;键盘左上角&lt;code class=&quot;highlighter-rouge&quot;&gt;esc&lt;/code&gt; 进入命令命令模式&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; 保存退出&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:q!&lt;/code&gt; 不保存强制退出&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 28 Feb 2017 00:00:00 +0800</pubDate>
        <link>http://clover.htmhub.com/2017/02/28/linux-cli/</link>
        <guid isPermaLink="true">http://clover.htmhub.com/2017/02/28/linux-cli/</guid>
        
        <category>Clover</category>
        
        <category>Linux</category>
        
        
      </item>
    
  </channel>
</rss>
