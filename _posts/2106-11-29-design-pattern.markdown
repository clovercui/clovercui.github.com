---
layout:     post
title:      "PHP设计模式"
subtitle:   "复习篇"
date:       2016-11-29
author:     "Clover"
header-img: "img/contact-bg.jpg"
catalog: true
tags:
    - Clover
    - 设计模式
    - PHP

---

> 参考资料《大话设计模式》
> 作者程杰
> 参考 http://blog.csdn.net/jhq0113/article/details/44906491

# 设计模式-概述

## -什么是设计模式

设计模式（Design Pattern）是一套**被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结**。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。

## -设计模式的优点

1. **复用解决方案**：设计模式本身就是对某一类问题的通用解决方案，是更高级别的复用，已经超出了代码复用
2. **确定通用术语**：开发中的交流和协作都需要共同的词汇其础和对问题的共识.
3. **代码更易于修改与维护**：因为设计模式都是久经考验的解决方案,它们的结构都是经过长期的发展形成的，善于应对变化，设计模式本身也是对变化点的封装
4. **模式有助于提高思考层次**。学习模式后,就算不用模式中的方法，也会更好的采取更好的策略去解决问题

## -资源
更多详情敬请关注我的视频课程：

 [PHP面向对象设计模式](http://edu.csdn.net/course/detail/602)

 分享一个我在公司内部培训的资料，C#实例源代码及类图：
           
 [设计模式源代码及UML类图](http://pan.baidu.com/s/1qWOE5dy)

 对应23种面向对象设计模式PPT：

  [23种常用面向对象设计模式](http://pan.baidu.com/s/1i3zksE5)

# 设计模式-六大原则

* `单一职责`
* `里氏替换`
* `依赖倒置`
* `接口隔离`
* `迪米特法则`
* `开闭原则`

![六大原则](http://clover.htmhub.com/img/phpdesign/20150406222929184.jpeg)

## -单一职责

* **定义**：` 不要存在多于一个导致类变更的原因。`通俗的说，即一个类只负责一项职责。

* **场景**：类T负责两个不同的职责：职责P1，职责P2。当由于职责P1需求发生改变而需要修改类T时，有可能会导致原本运行正常的职责P2功能发生故障，关系如下图：![p1](http://clover.htmhub.com/img/phpdesign/20150406223705732.jpeg)
* **修改**: `遵循单一职责原则.`分别建立两个类T1、T2，使T1完成职责P1功能，T2完成职责P2功能。这样，当修改类T1时，不会使职责P2发生故障风险；同理，当修改T2时，也不会使职责P1发生故障风险，结构如下图： ![p2](http://clover.htmhub.com/img/phpdesign/20150406223805012.jpeg)
* **优点**: 
	* 1)可以降低类的复杂度，一个类只负责一项职责，逻辑简单
	* 2)提高类的可读性，提高系统的可维护性；
	* 3)变更引起的风险降低，变更是必然的
