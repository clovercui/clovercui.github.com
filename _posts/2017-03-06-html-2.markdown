---
layout:     post
title:      "Html基础-2"
subtitle:   ""
date:       2017-03-06
author:     "Clover"
header-img: "img/education_large_2x.jpg"
catalog: true
tags:
    - Clover
    - 前端
    - HTML

---

# HTML-2

## `样式有几种引入方式? link 和 @import有什么区别`

`A:`

* `1.内联方式`

```
<div style="background: red"></div>
```
改变当前标签的样式

* `2.嵌入方式`

	嵌入方式指的是在 HTML 头部中的 `<style>` 标签下书写 CSS 代码。

    ```
    <head>
        <style>
        .content {
            background: red;
        }
        </style>
    </head>
    ```
嵌入方式的 CSS 只对当前的网页有效。因为 CSS 代码是在 HTML 文件中，所以会使得代码比较集中，当我们写模板网页时这通常比较有利。因为查看模板代码的人可以一目了然地查看 HTML 结构和 CSS 样式。因为嵌入的 CSS 只对当前页面有效，所以当多个页面需要引入相同的 CSS 代码时，这样写会导致代码冗余，也不利于维护。

* `3.链接方式`

	链接方式指的是使用 HTML 头部的 `<head>` 标签引入外部的 CSS 文件。

    ```
    <head>
        <link rel="stylesheet" type="text/css" href="style.css">
    </head>
    ```

    这是最常见的也是最推荐的引入 CSS 的方式。使用这种方式，所有的 CSS 代码只存在于单独的 CSS 文件中，所以具有良好的可维护性。并且所有的 CSS 代码只存在于 CSS 文件中，CSS 文件会在第一次加载时引入，以后切换页面时只需加载 HTML 文件即可

* `4.导入方式`

	导入方式指的是使用 CSS 规则引入外部 CSS 文件
    ```
    <style>
        @import url(style.css);
    </style>
    ```

* `link和@import的区别是?`

	两者都是外部引用CSS的方式，但是存在一定的区别

	* 区别1：link是XHTML标签，除了加载CSS外，还可以定义RSS等其他事务；@import属于CSS范畴，只能加载CSS。

	* 区别2：link引用CSS时，在页面载入时同时加载；@import需要页面网页完全载入以后加载。

	* 区别3：link是XHTML标签，无兼容问题；@import是在CSS2.1提出的，低版本的浏览器不支持。

	* 区别4：link支持使用Javascript控制DOM去改变样式；而@import不支持。



## `文件路径../main.css 、./main.css、main.css、/main.css有什么区别`
`A:` 

`../main.css` 是当前目录的上级目录引入main.css

`./main.css` 是当前目录引入main.css

`main.css` 同`./main.css` 是当前目录引入main.css

`/main.css` 是在网站根目录引入main.css

## `console.log是做什么用的`
`A:`
在控制台使用 log方式输出信息，还看查看对象的具体内容。

## `text-align有几个值，分别有什么作用？为什么text-align:justify没有效果？写截图说明区别`
`A:`

`text-align`:left,right,center,justify,start,end,inherit,initial

`text-align:justify` 不起作用因为text-align不会处理被打断的行和最后一行。一行文本不进行处理。还有就是强制换行的也不处理。所以你强制占满了一行他才处理。


## `px、em、rem分别是什么？有什么区别？如何使用`
`A:`
`px` PX实际上就是像素,用PX设置字体大小时，比较稳定和精确.但是这种方法存在一个问题，当用户在浏览器中浏览我们制作的Web页面时，如果改变了浏览器的缩放，这时会使用我们的Web页面布局被打破。这样对于那些关心自己网站可用性的用户来说，就是一个大问题了。因此，这时就提出了使用“em”来定义Web页面的字体
`em` em是相对于父元素的属性而计算的.EM就是根据基准来缩放字体的大小。EM实质是一个相对值，而非具体的数值。这种技术需要一个参考点，一般都是以`<body>`的“font-size”为基准。

`任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。那么12px=0.75em, 10px=0.625em。为了简化font-size的换算，需要在css中的body选择器中声明Font-size=62.5%，这就使em值变为 16px*62.5%=10px, 这样12px=1.2em, 10px=1em, 也就是说只需要将你的原来的px数值除以10，然后换上em作为单位就行了`

`rem` EM是相对于其父元素来设置字体大小的，这样就会存在一个问题，进行任何元素设置，都有可能需要知道他父元素的大小。而Rem是相对于根元素<html>，这样就意味着，我们只需要在根元素确定一个参考值
`浏览器的兼容性 除了IE6-IE8r，其它的浏览器都支持em和rem属性，px是所有浏览器都支持。
因此为了浏览器的兼容性，可“px”和“rem”一起使用，用"px"来实现IE6-8下的效果，然后使用“Rem”来实现代浏览器的效果。`

## `对chrome 审查元素的功能做个简单的截图介绍`
`A:`